{
    "messages": [
        {
            "type": "error",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "unrecognized-option",
            "message": "Unrecognized option found: no-space-check",
            "message-id": "E0015"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'print-statement' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'parameter-unpacking' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'unpacking-in-except' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'old-raise-syntax' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'backtick' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'import-star-module-level' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'apply-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'basestring-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'buffer-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'cmp-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'coerce-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'execfile-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'file-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'long-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'raw_input-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'reduce-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'standarderror-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'unicode-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'xrange-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'coerce-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'delslice-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'getslice-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'setslice-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'no-absolute-import' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'old-division' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'dict-iter-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'dict-view-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'next-method-called' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'metaclass-assignment' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'indexing-exception' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'raising-string' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'reload-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'oct-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'hex-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'nonzero-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'cmp-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'input-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'round-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'intern-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'unichr-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'map-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'zip-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'range-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'filter-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'using-cmp-argument' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'div-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'idiv-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'rdiv-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'exception-message-attribute' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'invalid-str-codec' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'sys-max-int' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'bad-python3-import' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'deprecated-string-function' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'deprecated-str-translate-call' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'deprecated-itertools-function' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'deprecated-types-field' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'next-method-defined' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'dict-items-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'dict-keys-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'dict-values-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "warning",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "unknown-option-value",
            "message": "Unknown option value for '--disable', expected a valid pylint message and got 'long-suffix'",
            "message-id": "W0012"
        },
        {
            "type": "warning",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "unknown-option-value",
            "message": "Unknown option value for '--disable', expected a valid pylint message and got 'old-ne-operator'",
            "message-id": "W0012"
        },
        {
            "type": "warning",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "unknown-option-value",
            "message": "Unknown option value for '--disable', expected a valid pylint message and got 'old-octal-literal'",
            "message-id": "W0012"
        },
        {
            "type": "warning",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "unknown-option-value",
            "message": "Unknown option value for '--disable', expected a valid pylint message and got 'non-ascii-bytes-literal'",
            "message-id": "W0012"
        },
        {
            "type": "warning",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "unknown-option-value",
            "message": "Unknown option value for '--disable', expected a valid pylint message and got 'locally-enabled'",
            "message-id": "W0012"
        },
        {
            "type": "warning",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "unknown-option-value",
            "message": "Unknown option value for '--disable', expected a valid pylint message and got 'eq-without-hash'",
            "message-id": "W0012"
        },
        {
            "type": "convention",
            "module": "teaser",
            "obj": "read_file",
            "line": 18,
            "column": 4,
            "path": "teaser/__init__.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "teaser",
            "obj": "read_file",
            "line": 19,
            "column": 8,
            "path": "teaser/__init__.py",
            "symbol": "invalid-name",
            "message": "Variable name \"fp\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "teaser",
            "obj": "read_file",
            "line": 19,
            "column": 13,
            "path": "teaser/__init__.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "refactor",
            "module": "teaser",
            "obj": "read_file",
            "line": 19,
            "column": 13,
            "path": "teaser/__init__.py",
            "symbol": "consider-using-with",
            "message": "Consider using 'with' for resource-allocating operations",
            "message-id": "R1732"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "",
            "line": 365,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "line-too-long",
            "message": "Line too long (102/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "",
            "line": 371,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "line-too-long",
            "message": "Line too long (108/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "",
            "line": 530,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "line-too-long",
            "message": "Line too long (102/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "",
            "line": 535,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "line-too-long",
            "message": "Line too long (108/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "",
            "line": 780,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "line-too-long",
            "message": "Line too long (107/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "",
            "line": 891,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "line-too-long",
            "message": "Line too long (108/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "",
            "line": 894,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "line-too-long",
            "message": "Line too long (114/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "",
            "line": 896,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "line-too-long",
            "message": "Line too long (116/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "",
            "line": 900,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "line-too-long",
            "message": "Line too long (102/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "",
            "line": 913,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "line-too-long",
            "message": "Line too long (119/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "",
            "line": 915,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "line-too-long",
            "message": "Line too long (112/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "",
            "line": 934,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "line-too-long",
            "message": "Line too long (114/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "",
            "line": 942,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "line-too-long",
            "message": "Line too long (114/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "",
            "line": 943,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "line-too-long",
            "message": "Line too long (101/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "",
            "line": 1108,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "line-too-long",
            "message": "Line too long (114/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "too-many-lines",
            "message": "Too many lines in module (1262/1000)",
            "message-id": "C0302"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "consider-using-from-import",
            "message": "Use 'from teaser.logic import utilities' instead",
            "message-id": "R0402"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "consider-using-from-import",
            "message": "Use 'from teaser.data.output import aixlib_output' instead",
            "message-id": "R0402"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "consider-using-from-import",
            "message": "Use 'from teaser.data.output import besmod_output' instead",
            "message-id": "R0402"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "",
            "line": 13,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "consider-using-from-import",
            "message": "Use 'from teaser.data.output import ibpsa_output' instead",
            "message-id": "R0402"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "Project",
            "line": 20,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'Project' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "Project",
            "line": 20,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "too-many-instance-attributes",
            "message": "Too many instance attributes (24/7)",
            "message-id": "R0902"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "Project.add_non_residential",
            "line": 306,
            "column": 4,
            "path": "teaser/project.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (13/5)",
            "message-id": "R0913"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "Project.add_non_residential",
            "line": 306,
            "column": 4,
            "path": "teaser/project.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (16/15)",
            "message-id": "R0914"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "Project.add_residential",
            "line": 456,
            "column": 4,
            "path": "teaser/project.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (17/5)",
            "message-id": "R0913"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "Project.add_residential",
            "line": 456,
            "column": 4,
            "path": "teaser/project.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (23/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "Project.export_aixlib",
            "line": 787,
            "column": 8,
            "path": "teaser/project.py",
            "symbol": "invalid-name",
            "message": "Argument name \"corG\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "Project.export_aixlib",
            "line": 783,
            "column": 4,
            "path": "teaser/project.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (10/5)",
            "message-id": "R0913"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "Project.export_besmod",
            "line": 874,
            "column": 12,
            "path": "teaser/project.py",
            "symbol": "invalid-name",
            "message": "Argument name \"THydSup_nominal\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "Project.export_besmod",
            "line": 875,
            "column": 12,
            "path": "teaser/project.py",
            "symbol": "invalid-name",
            "message": "Argument name \"QBuiOld_flow_design\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "Project.export_besmod",
            "line": 876,
            "column": 12,
            "path": "teaser/project.py",
            "symbol": "invalid-name",
            "message": "Argument name \"THydSupOld_design\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "Project.export_besmod",
            "line": 869,
            "column": 4,
            "path": "teaser/project.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (10/5)",
            "message-id": "R0913"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "Project._write_report",
            "line": 953,
            "column": 12,
            "path": "teaser/project.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.data.output.reports.model_report)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "teaser.project",
            "obj": "Project._write_report",
            "line": 955,
            "column": 12,
            "path": "teaser/project.py",
            "symbol": "raise-missing-from",
            "message": "Consider explicitly re-raising using 'except ImportError as exc' and 'raise ImportError('To create the model report, you have to install TEASER using the option report: pip install teaser[report] or install plotly manually.') from exc'",
            "message-id": "W0707"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "Project.set_location_parameters",
            "line": 1095,
            "column": 16,
            "path": "teaser/project.py",
            "symbol": "invalid-name",
            "message": "Variable name \"tz\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "Project.weather_file_path",
            "line": 1119,
            "column": 4,
            "path": "teaser/project.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "Project.t_soil_file_path",
            "line": 1139,
            "column": 4,
            "path": "teaser/project.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "Project.number_of_elements_calc",
            "line": 1159,
            "column": 4,
            "path": "teaser/project.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "Project.merge_windows_calc",
            "line": 1175,
            "column": 4,
            "path": "teaser/project.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "Project.used_library_calc",
            "line": 1191,
            "column": 4,
            "path": "teaser/project.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "Project.name",
            "line": 1207,
            "column": 4,
            "path": "teaser/project.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "Project.method_interzonal_material_enrichment",
            "line": 1227,
            "column": 4,
            "path": "teaser/project.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "Project.method_interzonal_material_enrichment",
            "line": 1232,
            "column": 15,
            "path": "teaser/project.py",
            "symbol": "unidiomatic-typecheck",
            "message": "Use isinstance() rather than type() for a typecheck.",
            "message-id": "C0123"
        },
        {
            "type": "warning",
            "module": "teaser.project",
            "obj": "Project.method_interzonal_material_enrichment",
            "line": 1237,
            "column": 16,
            "path": "teaser/project.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'setpoint_diff'",
            "message-id": "W0612"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "Project.method_interzonal_export",
            "line": 1246,
            "column": 4,
            "path": "teaser/project.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "Project.method_interzonal_export",
            "line": 1251,
            "column": 15,
            "path": "teaser/project.py",
            "symbol": "unidiomatic-typecheck",
            "message": "Use isinstance() rather than type() for a typecheck.",
            "message-id": "C0123"
        },
        {
            "type": "warning",
            "module": "teaser.project",
            "obj": "Project.method_interzonal_export",
            "line": 1256,
            "column": 16,
            "path": "teaser/project.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'setpoint_diff'",
            "message-id": "W0612"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "Project",
            "line": 20,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "too-many-public-methods",
            "message": "Too many public methods (22/20)",
            "message-id": "R0904"
        },
        {
            "type": "refactor",
            "module": "helptest",
            "obj": "",
            "line": 53,
            "column": 0,
            "path": "tests/helptest.py",
            "symbol": "trailing-comma-tuple",
            "message": "Disallow trailing comma tuple",
            "message-id": "R1707"
        },
        {
            "type": "refactor",
            "module": "helptest",
            "obj": "",
            "line": 54,
            "column": 0,
            "path": "tests/helptest.py",
            "symbol": "trailing-comma-tuple",
            "message": "Disallow trailing comma tuple",
            "message-id": "R1707"
        },
        {
            "type": "convention",
            "module": "helptest",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/helptest.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "refactor",
            "module": "helptest",
            "obj": "building_test2",
            "line": 19,
            "column": 0,
            "path": "tests/helptest.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (26/15)",
            "message-id": "R0914"
        },
        {
            "type": "warning",
            "module": "helptest",
            "obj": "building_test2",
            "line": 25,
            "column": 4,
            "path": "tests/helptest.py",
            "symbol": "pointless-string-statement",
            "message": "String statement has no effect",
            "message-id": "W0105"
        },
        {
            "type": "warning",
            "module": "helptest",
            "obj": "building_test2",
            "line": 34,
            "column": 4,
            "path": "tests/helptest.py",
            "symbol": "pointless-string-statement",
            "message": "String statement has no effect",
            "message-id": "W0105"
        },
        {
            "type": "convention",
            "module": "helptest",
            "obj": "building_test2",
            "line": 37,
            "column": 4,
            "path": "tests/helptest.py",
            "symbol": "invalid-name",
            "message": "Variable name \"tz\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "helptest",
            "obj": "building_test2",
            "line": 87,
            "column": 8,
            "path": "tests/helptest.py",
            "symbol": "pointless-string-statement",
            "message": "String statement has no effect",
            "message-id": "W0105"
        },
        {
            "type": "warning",
            "module": "helptest",
            "obj": "building_test2",
            "line": 126,
            "column": 8,
            "path": "tests/helptest.py",
            "symbol": "pointless-string-statement",
            "message": "String statement has no effect",
            "message-id": "W0105"
        },
        {
            "type": "refactor",
            "module": "helptest",
            "obj": "building_test2",
            "line": 19,
            "column": 0,
            "path": "tests/helptest.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (160/50)",
            "message-id": "R0915"
        },
        {
            "type": "refactor",
            "module": "helptest",
            "obj": "interzonal_test2",
            "line": 237,
            "column": 0,
            "path": "tests/helptest.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (34/15)",
            "message-id": "R0914"
        },
        {
            "type": "warning",
            "module": "helptest",
            "obj": "interzonal_test2",
            "line": 243,
            "column": 4,
            "path": "tests/helptest.py",
            "symbol": "pointless-string-statement",
            "message": "String statement has no effect",
            "message-id": "W0105"
        },
        {
            "type": "convention",
            "module": "helptest",
            "obj": "interzonal_test2",
            "line": 246,
            "column": 4,
            "path": "tests/helptest.py",
            "symbol": "invalid-name",
            "message": "Variable name \"tz\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "helptest",
            "obj": "interzonal_test2",
            "line": 288,
            "column": 8,
            "path": "tests/helptest.py",
            "symbol": "pointless-string-statement",
            "message": "String statement has no effect",
            "message-id": "W0105"
        },
        {
            "type": "warning",
            "module": "helptest",
            "obj": "interzonal_test2",
            "line": 327,
            "column": 8,
            "path": "tests/helptest.py",
            "symbol": "pointless-string-statement",
            "message": "String statement has no effect",
            "message-id": "W0105"
        },
        {
            "type": "refactor",
            "module": "helptest",
            "obj": "interzonal_test2",
            "line": 237,
            "column": 0,
            "path": "tests/helptest.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (178/50)",
            "message-id": "R0915"
        },
        {
            "type": "convention",
            "module": "test_besmod_output",
            "obj": "",
            "line": 103,
            "column": 0,
            "path": "tests/test_besmod_output.py",
            "symbol": "line-too-long",
            "message": "Line too long (103/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_besmod_output",
            "obj": "",
            "line": 104,
            "column": 0,
            "path": "tests/test_besmod_output.py",
            "symbol": "line-too-long",
            "message": "Line too long (120/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_besmod_output",
            "obj": "",
            "line": 105,
            "column": 0,
            "path": "tests/test_besmod_output.py",
            "symbol": "line-too-long",
            "message": "Line too long (114/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_besmod_output",
            "obj": "",
            "line": 106,
            "column": 0,
            "path": "tests/test_besmod_output.py",
            "symbol": "line-too-long",
            "message": "Line too long (108/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_besmod_output",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_besmod_output.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "test_besmod_output",
            "obj": "Test_besmod_output",
            "line": 8,
            "column": 0,
            "path": "tests/test_besmod_output.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "test_besmod_output",
            "obj": "Test_besmod_output",
            "line": 8,
            "column": 0,
            "path": "tests/test_besmod_output.py",
            "symbol": "invalid-name",
            "message": "Class name \"Test_besmod_output\" doesn't conform to PascalCase naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_data.py",
            "symbol": "too-many-lines",
            "message": "Too many lines in module (4265/1000)",
            "message-id": "C0302"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser",
            "line": 28,
            "column": 0,
            "path": "tests/test_data.py",
            "symbol": "invalid-name",
            "message": "Class name \"Test_teaser\" doesn't conform to PascalCase naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser",
            "line": 28,
            "column": 0,
            "path": "tests/test_data.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'Test_teaser' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser",
            "line": 31,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "global-variable-not-assigned",
            "message": "Using global for 'prj' but no assignment is done",
            "message-id": "W0602"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_vdi_room1",
            "line": 35,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.verification.verification_VDI_6007_room1)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_vdi_room3",
            "line": 61,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.verification.verification_VDI_6007_room3)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_vdi_room8",
            "line": 87,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.verification.verification_VDI_6007_room8)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_type_bldg_office_with_calc",
            "line": 153,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.archetypebuildings.bmvbs.office.Office)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "test_data",
            "obj": "Test_teaser.test_type_bldg_office_with_calc",
            "line": 173,
            "column": 20,
            "path": "tests/test_data.py",
            "symbol": "not-an-iterable",
            "message": "Non-iterable value test_office.thermal_zones is used in an iterating context",
            "message-id": "E1133"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_type_bldg_office_with_calc",
            "line": 148,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (67/50)",
            "message-id": "R0915"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_type_bldg_institute4_with_calc",
            "line": 289,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.archetypebuildings.bmvbs.custom.institute4.Institute4)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "test_data",
            "obj": "Test_teaser.test_type_bldg_institute4_with_calc",
            "line": 312,
            "column": 20,
            "path": "tests/test_data.py",
            "symbol": "not-an-iterable",
            "message": "Non-iterable value test_institute4.thermal_zones is used in an iterating context",
            "message-id": "E1133"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_type_bldg_institute8_with_calc",
            "line": 346,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.archetypebuildings.bmvbs.custom.institute8.Institute8)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "test_data",
            "obj": "Test_teaser.test_type_bldg_institute8_with_calc",
            "line": 369,
            "column": 20,
            "path": "tests/test_data.py",
            "symbol": "not-an-iterable",
            "message": "Non-iterable value test_institute8.thermal_zones is used in an iterating context",
            "message-id": "E1133"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_type_bldg_institute_with_calc",
            "line": 403,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.archetypebuildings.bmvbs.custom.institute.Institute)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "test_data",
            "obj": "Test_teaser.test_type_bldg_institute_with_calc",
            "line": 426,
            "column": 20,
            "path": "tests/test_data.py",
            "symbol": "not-an-iterable",
            "message": "Non-iterable value test_institute.thermal_zones is used in an iterating context",
            "message-id": "E1133"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_type_bldg_residential_with_calc",
            "line": 460,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.archetypebuildings.bmvbs.singlefamilydwelling.SingleFamilyDwelling)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "test_data",
            "obj": "Test_teaser.test_type_bldg_residential_with_calc",
            "line": 482,
            "column": 20,
            "path": "tests/test_data.py",
            "symbol": "not-an-iterable",
            "message": "Non-iterable value test_residential.thermal_zones is used in an iterating context",
            "message-id": "E1133"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_type_bldg_residential_with_calc",
            "line": 455,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (57/50)",
            "message-id": "R0915"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "",
            "line": 599,
            "column": 0,
            "path": "tests/test_data.py",
            "symbol": "implicit-str-concat",
            "message": "Implicit string concatenation found in call",
            "message-id": "W1404"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_load_save_project",
            "line": 603,
            "column": 18,
            "path": "tests/test_data.py",
            "symbol": "consider-using-generator",
            "message": "Consider using a generator instead 'sum(tz.area for tz in prj.buildings[-1].thermal_zones)'",
            "message-id": "R1728"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_load_save_project_new",
            "line": 615,
            "column": 18,
            "path": "tests/test_data.py",
            "symbol": "consider-using-generator",
            "message": "Consider using a generator instead 'sum(tz.area for tz in prj.buildings[-1].thermal_zones)'",
            "message-id": "R1728"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_load_save_project_new",
            "line": 616,
            "column": 12,
            "path": "tests/test_data.py",
            "symbol": "invalid-name",
            "message": "Variable name \"tz\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_number_of_elements_propagation",
            "line": 651,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "invalid-name",
            "message": "Variable name \"tz\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_number_of_elements_propagation",
            "line": 662,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "invalid-name",
            "message": "Variable name \"tz\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_number_of_elements_propagation",
            "line": 673,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "invalid-name",
            "message": "Variable name \"tz\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_building_parameter",
            "line": 690,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "invalid-name",
            "message": "Variable name \"tz\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_building_parameter",
            "line": 702,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "invalid-name",
            "message": "Variable name \"tz\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_building_parameter",
            "line": 714,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "invalid-name",
            "message": "Variable name \"tz\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_export_aixlib",
            "line": 741,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (56/50)",
            "message-id": "R0915"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_export_ibpsa",
            "line": 810,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (76/50)",
            "message-id": "R0915"
        },
        {
            "type": "error",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_building_parameter",
            "line": 1293,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "function-redefined",
            "message": "method already defined line 678",
            "message-id": "E0102"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_one",
            "line": 1336,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.one_element.OneElement)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_one",
            "line": 1356,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_outer_wall_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_one",
            "line": 1357,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_window_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_one",
            "line": 1400,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.one_element.OneElement)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_one",
            "line": 1429,
            "column": 23,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_two",
            "line": 1440,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'TwoElement' from outer scope (line 9)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_two",
            "line": 1440,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "reimported",
            "message": "Reimport 'TwoElement' (imported line 9)",
            "message-id": "W0404"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_two",
            "line": 1440,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.two_element.TwoElement)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_two",
            "line": 1460,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_outer_wall_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_two",
            "line": 1461,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_inner_wall_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_two",
            "line": 1462,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_window_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_two",
            "line": 1517,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'TwoElement' from outer scope (line 9)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_two",
            "line": 1517,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "reimported",
            "message": "Reimport 'TwoElement' (imported line 9)",
            "message-id": "W0404"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_two",
            "line": 1517,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.two_element.TwoElement)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_two",
            "line": 1548,
            "column": 23,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_two",
            "line": 1558,
            "column": 23,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_three",
            "line": 1569,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'ThreeElement' from outer scope (line 8)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_three",
            "line": 1569,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "reimported",
            "message": "Reimport 'ThreeElement' (imported line 8)",
            "message-id": "W0404"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_three",
            "line": 1569,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.three_element.ThreeElement)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_three",
            "line": 1589,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_outer_wall_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_three",
            "line": 1590,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_ground_floor_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_three",
            "line": 1591,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_inner_wall_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_three",
            "line": 1592,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_window_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_three",
            "line": 1564,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (55/50)",
            "message-id": "R0915"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_three",
            "line": 1660,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'ThreeElement' from outer scope (line 8)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_three",
            "line": 1660,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "reimported",
            "message": "Reimport 'ThreeElement' (imported line 8)",
            "message-id": "W0404"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_three",
            "line": 1660,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.three_element.ThreeElement)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_three",
            "line": 1686,
            "column": 23,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_three",
            "line": 1696,
            "column": 23,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_four",
            "line": 1707,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'FourElement' from outer scope (line 7)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_four",
            "line": 1707,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "reimported",
            "message": "Reimport 'FourElement' (imported line 7)",
            "message-id": "W0404"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_four",
            "line": 1707,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.four_element.FourElement)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_four",
            "line": 1727,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_outer_wall_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_four",
            "line": 1728,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_ground_floor_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_four",
            "line": 1729,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_rooftop_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_four",
            "line": 1730,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_inner_wall_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_four",
            "line": 1731,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_window_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_four",
            "line": 1702,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (70/50)",
            "message-id": "R0915"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_four",
            "line": 1821,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'FourElement' from outer scope (line 7)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_four",
            "line": 1821,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "reimported",
            "message": "Reimport 'FourElement' (imported line 7)",
            "message-id": "W0404"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_four",
            "line": 1821,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.four_element.FourElement)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_four",
            "line": 1845,
            "column": 23,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_four",
            "line": 1855,
            "column": 23,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_one_with_interzonals",
            "line": 1868,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.one_element.OneElement)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_one_with_interzonals",
            "line": 1889,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_outer_wall_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_one_with_interzonals",
            "line": 1890,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_window_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_one_with_interzonals",
            "line": 1925,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.one_element.OneElement)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_one_with_interzonals",
            "line": 1956,
            "column": 23,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_two_with_interzonals",
            "line": 1969,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'TwoElement' from outer scope (line 9)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_two_with_interzonals",
            "line": 1969,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "reimported",
            "message": "Reimport 'TwoElement' (imported line 9)",
            "message-id": "W0404"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_two_with_interzonals",
            "line": 1969,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.two_element.TwoElement)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_two_with_interzonals",
            "line": 1990,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_outer_wall_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_two_with_interzonals",
            "line": 1991,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_inner_wall_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_two_with_interzonals",
            "line": 1992,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_window_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_two_with_interzonals",
            "line": 2034,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (17/15)",
            "message-id": "R0914"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_two_with_interzonals",
            "line": 2036,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'TwoElement' from outer scope (line 9)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_two_with_interzonals",
            "line": 2036,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "reimported",
            "message": "Reimport 'TwoElement' (imported line 9)",
            "message-id": "W0404"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_two_with_interzonals",
            "line": 2036,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.two_element.TwoElement)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_two_with_interzonals",
            "line": 2068,
            "column": 23,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_two_with_interzonals",
            "line": 2078,
            "column": 23,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_two_with_interzonals",
            "line": 2093,
            "column": 23,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_two_with_interzonals",
            "line": 2104,
            "column": 27,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_three_with_interzonals",
            "line": 2118,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'ThreeElement' from outer scope (line 8)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_three_with_interzonals",
            "line": 2118,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "reimported",
            "message": "Reimport 'ThreeElement' (imported line 8)",
            "message-id": "W0404"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_three_with_interzonals",
            "line": 2118,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.three_element.ThreeElement)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_three_with_interzonals",
            "line": 2139,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_outer_wall_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_three_with_interzonals",
            "line": 2140,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_ground_floor_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_three_with_interzonals",
            "line": 2141,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_inner_wall_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_three_with_interzonals",
            "line": 2142,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_window_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_three_with_interzonals",
            "line": 2111,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (57/50)",
            "message-id": "R0915"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_three_with_interzonals",
            "line": 2194,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (17/15)",
            "message-id": "R0914"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_three_with_interzonals",
            "line": 2196,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'ThreeElement' from outer scope (line 8)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_three_with_interzonals",
            "line": 2196,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "reimported",
            "message": "Reimport 'ThreeElement' (imported line 8)",
            "message-id": "W0404"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_three_with_interzonals",
            "line": 2196,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.three_element.ThreeElement)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_three_with_interzonals",
            "line": 2223,
            "column": 23,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_three_with_interzonals",
            "line": 2233,
            "column": 23,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_three_with_interzonals",
            "line": 2244,
            "column": 23,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_three_with_interzonals",
            "line": 2255,
            "column": 27,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_four_with_interzonals",
            "line": 2269,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'FourElement' from outer scope (line 7)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_four_with_interzonals",
            "line": 2269,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "reimported",
            "message": "Reimport 'FourElement' (imported line 7)",
            "message-id": "W0404"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_four_with_interzonals",
            "line": 2269,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.four_element.FourElement)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_four_with_interzonals",
            "line": 2291,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_outer_wall_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_four_with_interzonals",
            "line": 2292,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_ground_floor_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_four_with_interzonals",
            "line": 2293,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_rooftop_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_four_with_interzonals",
            "line": 2294,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_inner_wall_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_four_with_interzonals",
            "line": 2295,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_window_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_four_with_interzonals",
            "line": 2262,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (72/50)",
            "message-id": "R0915"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_four_with_interzonals",
            "line": 2363,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (17/15)",
            "message-id": "R0914"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_four_with_interzonals",
            "line": 2365,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'FourElement' from outer scope (line 7)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_four_with_interzonals",
            "line": 2365,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "reimported",
            "message": "Reimport 'FourElement' (imported line 7)",
            "message-id": "W0404"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_four_with_interzonals",
            "line": 2365,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.four_element.FourElement)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_four_with_interzonals",
            "line": 2391,
            "column": 23,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_four_with_interzonals",
            "line": 2401,
            "column": 23,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_four_with_interzonals",
            "line": 2413,
            "column": 23,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_four_with_interzonals",
            "line": 2424,
            "column": 27,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_three_element",
            "line": 2786,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (52/50)",
            "message-id": "R0915"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_four_element",
            "line": 2852,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (72/50)",
            "message-id": "R0915"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_gather_element_properties",
            "line": 2969,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "invalid-name",
            "message": "Variable name \"outerWalls\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_save_type_element",
            "line": 2992,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'os' from outer scope (line 20)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_save_type_element",
            "line": 2992,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "reimported",
            "message": "Reimport 'os' (imported line 20)",
            "message-id": "W0404"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_save_type_element",
            "line": 2992,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (os)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_delete_type_element",
            "line": 3005,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'os' from outer scope (line 20)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_delete_type_element",
            "line": 3005,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "reimported",
            "message": "Reimport 'os' (imported line 20)",
            "message-id": "W0404"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_delete_type_element",
            "line": 3005,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (os)",
            "message-id": "C0415"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_retrofit_wall",
            "line": 3041,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (72/50)",
            "message-id": "R0915"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_retrofit_wall",
            "line": 3083,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'therm_zone_other_heated'",
            "message-id": "W0612"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_interzonal_type_element",
            "line": 3133,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_interzonal_type_element",
            "line": 3133,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (19/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_interzonal_type_element",
            "line": 3161,
            "column": 18,
            "path": "tests/test_data.py",
            "symbol": "unnecessary-dunder-call",
            "message": "Unnecessarily calls dunder method __reversed__. Use reversed built-in function.",
            "message-id": "C2801"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_interzonal_type_element",
            "line": 3167,
            "column": 19,
            "path": "tests/test_data.py",
            "symbol": "comparison-with-itself",
            "message": "Redundant comparison - floor_layer_heat_capac == floor_layer_heat_capac",
            "message-id": "R0124"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_interzonal_type_element",
            "line": 3159,
            "column": 13,
            "path": "tests/test_data.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'ceiling_layer_heat_capac'",
            "message-id": "W0612"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_save_load_building_issue679",
            "line": 3176,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_five",
            "line": 3215,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.five_element.FiveElement)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_five",
            "line": 3236,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_outer_wall_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_five",
            "line": 3237,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_ground_floor_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_five",
            "line": 3238,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_rooftop_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_five",
            "line": 3239,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_inner_wall_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_five",
            "line": 3240,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_window_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_five",
            "line": 3241,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_interzonal_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_five",
            "line": 3208,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (65/50)",
            "message-id": "R0915"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_five",
            "line": 3299,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (19/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_five",
            "line": 3301,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.five_element.FiveElement)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_five",
            "line": 3331,
            "column": 23,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_five",
            "line": 3341,
            "column": 23,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_five",
            "line": 3347,
            "column": 25,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_five",
            "line": 3361,
            "column": 29,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_load_save_material",
            "line": 3391,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'DataClass' from outer scope (line 12)",
            "message-id": "W0621"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_load_save_material",
            "line": 3384,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.material.Material)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_load_save_material",
            "line": 3391,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "reimported",
            "message": "Reimport 'DataClass' (imported line 12)",
            "message-id": "W0404"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_load_save_material",
            "line": 3391,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.data.dataclass.DataClass)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_properties_project",
            "line": 3401,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "pointless-statement",
            "message": "Statement seems to have no effect",
            "message-id": "W0104"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_properties_project",
            "line": 3402,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "pointless-statement",
            "message": "Statement seems to have no effect",
            "message-id": "W0104"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_properties_project",
            "line": 3403,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "pointless-statement",
            "message": "Statement seems to have no effect",
            "message-id": "W0104"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_warnings_prj",
            "line": 3411,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.building.Building)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_warnings_prj",
            "line": 3412,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.thermalzone.ThermalZone)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_warnings_prj",
            "line": 3413,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.useconditions.UseConditions)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_warnings_prj",
            "line": 3417,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "invalid-name",
            "message": "Variable name \"tz\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_aixlib_only_iw",
            "line": 3458,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.building.Building)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_aixlib_only_iw",
            "line": 3470,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.thermalzone.ThermalZone)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_aixlib_only_iw",
            "line": 3472,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "invalid-name",
            "message": "Variable name \"tz\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_aixlib_only_iw",
            "line": 3477,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.useconditions.UseConditions)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_aixlib_only_iw",
            "line": 3482,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.innerwall.InnerWall)",
            "message-id": "C0415"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_export_aixlib_only_iw",
            "line": 3453,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (69/50)",
            "message-id": "R0915"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_ow",
            "line": 3558,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.building.Building)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_ow",
            "line": 3568,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.thermalzone.ThermalZone)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_ow",
            "line": 3570,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "invalid-name",
            "message": "Variable name \"tz\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_ow",
            "line": 3575,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.useconditions.UseConditions)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_ow",
            "line": 3580,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.outerwall.OuterWall)",
            "message-id": "C0415"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_ow",
            "line": 3553,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (95/50)",
            "message-id": "R0915"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_win",
            "line": 3690,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.building.Building)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_win",
            "line": 3700,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.thermalzone.ThermalZone)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_win",
            "line": 3702,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "invalid-name",
            "message": "Variable name \"tz\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_win",
            "line": 3707,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.useconditions.UseConditions)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_win",
            "line": 3712,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.window.Window)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_win",
            "line": 3713,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.layer.Layer)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_win",
            "line": 3714,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.material.Material)",
            "message-id": "C0415"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_win",
            "line": 3685,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (106/50)",
            "message-id": "R0915"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_rt",
            "line": 3826,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (19/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_rt",
            "line": 3831,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.building.Building)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_rt",
            "line": 3841,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.thermalzone.ThermalZone)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_rt",
            "line": 3843,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "invalid-name",
            "message": "Variable name \"tz\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_rt",
            "line": 3848,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.useconditions.UseConditions)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_rt",
            "line": 3853,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.rooftop.Rooftop)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_rt",
            "line": 3875,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.layer.Layer)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_rt",
            "line": 3880,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.material.Material)",
            "message-id": "C0415"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_rt",
            "line": 3826,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (116/50)",
            "message-id": "R0915"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_gf",
            "line": 3980,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.building.Building)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_gf",
            "line": 3990,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.thermalzone.ThermalZone)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_gf",
            "line": 3992,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "invalid-name",
            "message": "Variable name \"tz\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_gf",
            "line": 3997,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.useconditions.UseConditions)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_gf",
            "line": 4002,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.groundfloor.GroundFloor)",
            "message-id": "C0415"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_gf",
            "line": 3975,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (70/50)",
            "message-id": "R0915"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_ashrae_140_600",
            "line": 4071,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_ashrae_140_600",
            "line": 4073,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.verification.verification_ASHRAE_140_600.main)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_ashrae_140_620",
            "line": 4082,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_ashrae_140_620",
            "line": 4084,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.verification.verification_ASHRAE_140_620.main)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_ashrae_140_900",
            "line": 4093,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_ashrae_140_900",
            "line": 4095,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.verification.verification_ASHRAE_140_900.main)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_ashrae_140_920",
            "line": 4104,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_ashrae_140_920",
            "line": 4106,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.verification.verification_ASHRAE_140_920.main)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_bldg_threshold",
            "line": 4222,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_tz_naming",
            "line": 4247,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_tz_naming",
            "line": 4249,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.building.Building)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_tz_naming",
            "line": 4250,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.thermalzone.ThermalZone)",
            "message-id": "C0415"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser",
            "line": 28,
            "column": 0,
            "path": "tests/test_data.py",
            "symbol": "too-many-public-methods",
            "message": "Too many public methods (88/20)",
            "message-id": "R0904"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "",
            "line": 19,
            "column": 0,
            "path": "tests/test_data.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import math\" should be placed before \"from teaser.logic import utilities\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "",
            "line": 20,
            "column": 0,
            "path": "tests/test_data.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import os\" should be placed before \"from teaser.logic import utilities\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "",
            "line": 21,
            "column": 0,
            "path": "tests/test_data.py",
            "symbol": "wrong-import-order",
            "message": "third party import \"import helptest\" should be placed before \"from teaser.logic import utilities\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "",
            "line": 22,
            "column": 0,
            "path": "tests/test_data.py",
            "symbol": "wrong-import-order",
            "message": "third party import \"from pytest import approx\" should be placed before \"from teaser.logic import utilities\"",
            "message-id": "C0411"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "",
            "line": 13,
            "column": 0,
            "path": "tests/test_data.py",
            "symbol": "unused-import",
            "message": "Unused InterzonalFloor imported from teaser.logic.buildingobjects.buildingphysics.interzonalfloor",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "",
            "line": 15,
            "column": 0,
            "path": "tests/test_data.py",
            "symbol": "unused-import",
            "message": "Unused InterzonalCeiling imported from teaser.logic.buildingobjects.buildingphysics.interzonalceiling",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "",
            "line": 17,
            "column": 0,
            "path": "tests/test_data.py",
            "symbol": "unused-import",
            "message": "Unused InterzonalWall imported from teaser.logic.buildingobjects.buildingphysics.interzonalwall",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "test_examples",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "tests/test_examples.py",
            "symbol": "useless-import-alias",
            "message": "Import alias does not rename original package",
            "message-id": "C0414"
        },
        {
            "type": "convention",
            "module": "test_examples",
            "obj": "Test_examples",
            "line": 16,
            "column": 0,
            "path": "tests/test_examples.py",
            "symbol": "invalid-name",
            "message": "Class name \"Test_examples\" doesn't conform to PascalCase naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "test_examples",
            "obj": "Test_examples",
            "line": 16,
            "column": 0,
            "path": "tests/test_examples.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'Test_examples' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples",
            "line": 19,
            "column": 4,
            "path": "tests/test_examples.py",
            "symbol": "global-statement",
            "message": "Using the global statement",
            "message-id": "W0603"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e1_example_generate_archetype",
            "line": 25,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'prj' from outer scope (line 13)",
            "message-id": "W0621"
        },
        {
            "type": "convention",
            "module": "test_examples",
            "obj": "Test_examples.test_e1_example_generate_archetype",
            "line": 23,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.e1_generate_archetype)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e2_example_export_aixlib",
            "line": 33,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'prj' from outer scope (line 13)",
            "message-id": "W0621"
        },
        {
            "type": "convention",
            "module": "test_examples",
            "obj": "Test_examples.test_e2_example_export_aixlib",
            "line": 31,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.e2_export_aixlib_models)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e2_example_export_aixlib",
            "line": 33,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'prj'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e3_example_export_ibpsa",
            "line": 39,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'prj' from outer scope (line 13)",
            "message-id": "W0621"
        },
        {
            "type": "convention",
            "module": "test_examples",
            "obj": "Test_examples.test_e3_example_export_ibpsa",
            "line": 37,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.e3_export_ibpsa_models)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "test_examples",
            "obj": "Test_examples.test_e3_example_export_ibpsa",
            "line": 39,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "assignment-from-no-return",
            "message": "Assigning result of a function call, where the function has no return",
            "message-id": "E1111"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e3_example_export_ibpsa",
            "line": 39,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'prj'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e4_example_save",
            "line": 45,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'prj' from outer scope (line 13)",
            "message-id": "W0621"
        },
        {
            "type": "convention",
            "module": "test_examples",
            "obj": "Test_examples.test_e4_example_save",
            "line": 43,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.e4_save)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "test_examples",
            "obj": "Test_examples.test_e4_example_save",
            "line": 45,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "assignment-from-no-return",
            "message": "Assigning result of a function call, where the function has no return",
            "message-id": "E1111"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e4_example_save",
            "line": 45,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'prj'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e5_example_load",
            "line": 51,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'prj' from outer scope (line 13)",
            "message-id": "W0621"
        },
        {
            "type": "convention",
            "module": "test_examples",
            "obj": "Test_examples.test_e5_example_load",
            "line": 49,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.e5_load)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "test_examples",
            "obj": "Test_examples.test_e5_example_load",
            "line": 51,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "assignment-from-no-return",
            "message": "Assigning result of a function call, where the function has no return",
            "message-id": "E1111"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e5_example_load",
            "line": 51,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'prj'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e6_example_create_building",
            "line": 57,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'prj' from outer scope (line 13)",
            "message-id": "W0621"
        },
        {
            "type": "convention",
            "module": "test_examples",
            "obj": "Test_examples.test_e6_example_create_building",
            "line": 55,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.e6_generate_building)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e6_example_create_building",
            "line": 57,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'prj'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e7_example_retrofit_building",
            "line": 63,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'prj' from outer scope (line 13)",
            "message-id": "W0621"
        },
        {
            "type": "convention",
            "module": "test_examples",
            "obj": "Test_examples.test_e7_example_retrofit_building",
            "line": 61,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.e7_retrofit)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "test_examples",
            "obj": "Test_examples.test_e7_example_retrofit_building",
            "line": 63,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "assignment-from-no-return",
            "message": "Assigning result of a function call, where the function has no return",
            "message-id": "E1111"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e7_example_retrofit_building",
            "line": 63,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'prj'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e8_example_change_boundary_conditions",
            "line": 69,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'prj' from outer scope (line 13)",
            "message-id": "W0621"
        },
        {
            "type": "convention",
            "module": "test_examples",
            "obj": "Test_examples.test_e8_example_change_boundary_conditions",
            "line": 67,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.e8_change_boundary_conditions)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "test_examples",
            "obj": "Test_examples.test_e8_example_change_boundary_conditions",
            "line": 69,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "assignment-from-no-return",
            "message": "Assigning result of a function call, where the function has no return",
            "message-id": "E1111"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e8_example_change_boundary_conditions",
            "line": 69,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'prj'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e11_example_export_besmod",
            "line": 75,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'prj' from outer scope (line 13)",
            "message-id": "W0621"
        },
        {
            "type": "convention",
            "module": "test_examples",
            "obj": "Test_examples.test_e11_example_export_besmod",
            "line": 73,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.e11_export_besmod_models)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e11_example_export_besmod",
            "line": 75,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'prj'",
            "message-id": "W0612"
        },
        {
            "type": "convention",
            "module": "test_examples",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "tests/test_examples.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import math\" should be placed before \"from teaser.logic import utilities\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "test_examples",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "tests/test_examples.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import os\" should be placed before \"from teaser.logic import utilities\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "test_examples",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "tests/test_examples.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import warnings as warnings\" should be placed before \"from teaser.logic import utilities\"",
            "message-id": "C0411"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "tests/test_examples.py",
            "symbol": "unused-import",
            "message": "Unused utilities imported from teaser.logic",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "tests/test_examples.py",
            "symbol": "unused-import",
            "message": "Unused import math",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "tests/test_examples.py",
            "symbol": "unused-import",
            "message": "Unused import os",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "tests/test_examples.py",
            "symbol": "unused-import",
            "message": "Unused warnings imported as warnings",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "test_modelicaversion",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_modelicaversion.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "test_modelicaversion",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "tests/test_modelicaversion.py",
            "symbol": "useless-import-alias",
            "message": "Import alias does not rename original package",
            "message-id": "C0414"
        },
        {
            "type": "refactor",
            "module": "test_modelicaversion",
            "obj": "TestModelicaVersions",
            "line": 8,
            "column": 0,
            "path": "tests/test_modelicaversion.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'TestModelicaVersions' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "warning",
            "module": "test_modelicaversion",
            "obj": "TestModelicaVersions",
            "line": 10,
            "column": 4,
            "path": "tests/test_modelicaversion.py",
            "symbol": "global-variable-not-assigned",
            "message": "Using global for 'prj' but no assignment is done",
            "message-id": "W0602"
        },
        {
            "type": "convention",
            "module": "test_modelicaversion",
            "obj": "TestModelicaVersions.test_modelica_export_version",
            "line": 12,
            "column": 4,
            "path": "tests/test_modelicaversion.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_modelicaversion",
            "obj": "TestModelicaVersions.test_modelica_export_version",
            "line": 14,
            "column": 12,
            "path": "tests/test_modelicaversion.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (github.Github)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_modelicaversion",
            "obj": "TestModelicaVersions.test_modelica_export_version",
            "line": 18,
            "column": 8,
            "path": "tests/test_modelicaversion.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.ibpsa.IBPSA)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_modelicaversion",
            "obj": "TestModelicaVersions.test_modelica_export_version",
            "line": 19,
            "column": 8,
            "path": "tests/test_modelicaversion.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.archetypebuildings.bmvbs.office.Office)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_modelicaversion",
            "obj": "TestModelicaVersions.test_modelica_export_version",
            "line": 33,
            "column": 8,
            "path": "tests/test_modelicaversion.py",
            "symbol": "bare-except",
            "message": "No exception type(s) specified",
            "message-id": "W0702"
        },
        {
            "type": "refactor",
            "module": "test_modelicaversion",
            "obj": "TestModelicaVersions.test_modelica_export_version",
            "line": 12,
            "column": 4,
            "path": "tests/test_modelicaversion.py",
            "symbol": "inconsistent-return-statements",
            "message": "Either all return statements in a function should return an expression, or none of them should.",
            "message-id": "R1710"
        },
        {
            "type": "refactor",
            "module": "test_modelicaversion",
            "obj": "TestModelicaVersions",
            "line": 8,
            "column": 0,
            "path": "tests/test_modelicaversion.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "test_modelicaversion",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "tests/test_modelicaversion.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import warnings as warnings\" should be placed before \"from teaser.project import Project\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "test_modelicaversion",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "tests/test_modelicaversion.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import os\" should be placed before \"from teaser.project import Project\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "test_partial_retrofit",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_partial_retrofit.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "test_partial_retrofit",
            "obj": "Test_tabula_sfh",
            "line": 6,
            "column": 0,
            "path": "tests/test_partial_retrofit.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "test_partial_retrofit",
            "obj": "Test_tabula_sfh",
            "line": 6,
            "column": 0,
            "path": "tests/test_partial_retrofit.py",
            "symbol": "invalid-name",
            "message": "Class name \"Test_tabula_sfh\" doesn't conform to PascalCase naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "test_partial_retrofit",
            "obj": "Test_tabula_sfh",
            "line": 6,
            "column": 0,
            "path": "tests/test_partial_retrofit.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'Test_tabula_sfh' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "refactor",
            "module": "test_partial_retrofit",
            "obj": "Test_tabula_sfh",
            "line": 6,
            "column": 0,
            "path": "tests/test_partial_retrofit.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "test_simulation_export",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "tests/test_simulation_export.py",
            "symbol": "useless-import-alias",
            "message": "Import alias does not rename original package",
            "message-id": "C0414"
        },
        {
            "type": "convention",
            "module": "test_simulation_export",
            "obj": "Simulation_export",
            "line": 16,
            "column": 0,
            "path": "tests/test_simulation_export.py",
            "symbol": "invalid-name",
            "message": "Class name \"Simulation_export\" doesn't conform to PascalCase naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "test_simulation_export",
            "obj": "Simulation_export",
            "line": 16,
            "column": 0,
            "path": "tests/test_simulation_export.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'Simulation_export' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "warning",
            "module": "test_simulation_export",
            "obj": "Simulation_export",
            "line": 19,
            "column": 4,
            "path": "tests/test_simulation_export.py",
            "symbol": "global-statement",
            "message": "Using the global statement",
            "message-id": "W0603"
        },
        {
            "type": "warning",
            "module": "test_simulation_export",
            "obj": "Simulation_export.export_e2_example_export_aixlib",
            "line": 25,
            "column": 8,
            "path": "tests/test_simulation_export.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'prj' from outer scope (line 13)",
            "message-id": "W0621"
        },
        {
            "type": "convention",
            "module": "test_simulation_export",
            "obj": "Simulation_export.export_e2_example_export_aixlib",
            "line": 23,
            "column": 8,
            "path": "tests/test_simulation_export.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.e2_export_aixlib_models)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_simulation_export",
            "obj": "Simulation_export.export_e2_example_export_aixlib",
            "line": 25,
            "column": 8,
            "path": "tests/test_simulation_export.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'prj'",
            "message-id": "W0612"
        },
        {
            "type": "refactor",
            "module": "test_simulation_export",
            "obj": "Simulation_export",
            "line": 16,
            "column": 0,
            "path": "tests/test_simulation_export.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "test_simulation_export",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "tests/test_simulation_export.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import math\" should be placed before \"from teaser.logic import utilities\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "test_simulation_export",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "tests/test_simulation_export.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import os\" should be placed before \"from teaser.logic import utilities\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "test_simulation_export",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "tests/test_simulation_export.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import warnings as warnings\" should be placed before \"from teaser.logic import utilities\"",
            "message-id": "C0411"
        },
        {
            "type": "warning",
            "module": "test_simulation_export",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "tests/test_simulation_export.py",
            "symbol": "unused-import",
            "message": "Unused utilities imported from teaser.logic",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "test_simulation_export",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "tests/test_simulation_export.py",
            "symbol": "unused-import",
            "message": "Unused import math",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "test_simulation_export",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "tests/test_simulation_export.py",
            "symbol": "unused-import",
            "message": "Unused import os",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "test_simulation_export",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "tests/test_simulation_export.py",
            "symbol": "unused-import",
            "message": "Unused warnings imported as warnings",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_ab.py",
            "symbol": "invalid-name",
            "message": "Class name \"Test_tabula_ab\" doesn't conform to PascalCase naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_ab.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'Test_tabula_ab' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "warning",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab",
            "line": 6,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "global-variable-not-assigned",
            "message": "Using global for 'prj' but no assignment is done",
            "message-id": "W0602"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_1919",
            "line": 156,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_1948",
            "line": 192,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_1957",
            "line": 227,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_1968",
            "line": 262,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_1978",
            "line": 297,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_1919",
            "line": 332,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_1948",
            "line": 368,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_1957",
            "line": 404,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_1968",
            "line": 440,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_1978",
            "line": 476,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_adv_ab_1919",
            "line": 511,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_adv_ab_1948",
            "line": 547,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_adv_ab_1957",
            "line": 583,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_adv_ab_1968",
            "line": 619,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_adv_ab_1978",
            "line": 655,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "",
            "line": 272,
            "column": 0,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "line-too-long",
            "message": "Line too long (168/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "",
            "line": 622,
            "column": 0,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "line-too-long",
            "message": "Line too long (129/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "",
            "line": 927,
            "column": 0,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "line-too-long",
            "message": "Line too long (128/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "too-many-lines",
            "message": "Too many lines in module (1235/1000)",
            "message-id": "C0302"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "invalid-name",
            "message": "Class name \"Test_tabula_ab\" doesn't conform to PascalCase naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'Test_tabula_ab' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "warning",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab",
            "line": 6,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "global-variable-not-assigned",
            "message": "Using global for 'prj' but no assignment is done",
            "message-id": "W0602"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_dk_1849",
            "line": 275,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_dk_1929",
            "line": 325,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_dk_1949",
            "line": 360,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_dk_1959",
            "line": 395,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_dk_1971",
            "line": 430,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_dk_1977",
            "line": 470,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_dk_1997",
            "line": 517,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_dk_2005",
            "line": 552,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_dk_2009",
            "line": 587,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_dk_1849",
            "line": 626,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_dk_1929",
            "line": 676,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_dk_1949",
            "line": 711,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_dk_1959",
            "line": 746,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_dk_1971",
            "line": 781,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_dk_1977",
            "line": 823,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_dk_1997",
            "line": 860,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_dk_2005",
            "line": 886,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_dk_2009",
            "line": 907,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_adv_retrofit_ab_dk_1849",
            "line": 931,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_adv_retrofit_ab_dk_1929",
            "line": 981,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_adv_retrofit_ab_dk_1949",
            "line": 1016,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_adv_retrofit_ab_dk_1959",
            "line": 1051,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_adv_retrofit_ab_dk_1971",
            "line": 1086,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_adv_retrofit_ab_dk_1977",
            "line": 1128,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_adv_retrofit_ab_dk_1997",
            "line": 1165,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_adv_retrofit_ab_dk_2005",
            "line": 1191,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_adv_retrofit_ab_dk_2009",
            "line": 1217,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "too-many-public-methods",
            "message": "Too many public methods (36/20)",
            "message-id": "R0904"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "too-many-lines",
            "message": "Too many lines in module (1647/1000)",
            "message-id": "C0302"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh",
            "line": 6,
            "column": 0,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh",
            "line": 6,
            "column": 0,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "invalid-name",
            "message": "Class name \"Test_tabula_mfh\" doesn't conform to PascalCase naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh",
            "line": 6,
            "column": 0,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'Test_tabula_mfh' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "warning",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh",
            "line": 7,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "global-variable-not-assigned",
            "message": "Using global for 'prj' but no assignment is done",
            "message-id": "W0602"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_standard_mfh_1859",
            "line": 330,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_standard_mfh_1918",
            "line": 372,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_standard_mfh_1948",
            "line": 408,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_standard_mfh_1957",
            "line": 456,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_standard_mfh_1968",
            "line": 491,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_standard_mfh_1978",
            "line": 526,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_standard_mfh_1983",
            "line": 561,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_standard_mfh_1994",
            "line": 596,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_standard_mfh_2001",
            "line": 631,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_standard_mfh_2009",
            "line": 666,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_standard_mfh_2015",
            "line": 701,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_standard_mfh_2100",
            "line": 736,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_mfh_1859",
            "line": 771,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_mfh_1918",
            "line": 813,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_mfh_1948",
            "line": 848,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_mfh_1957",
            "line": 895,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_mfh_1968",
            "line": 930,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_mfh_1978",
            "line": 965,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_mfh_1983",
            "line": 1000,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_mfh_1994",
            "line": 1035,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_mfh_2001",
            "line": 1070,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_mfh_2009",
            "line": 1105,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_mfh_2015",
            "line": 1140,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_mfh_2100",
            "line": 1175,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_adv_mfh_1859",
            "line": 1210,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_adv_mfh_1918",
            "line": 1252,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_adv_mfh_1948",
            "line": 1287,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_adv_mfh_1957",
            "line": 1334,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_adv_mfh_1968",
            "line": 1369,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_adv_mfh_1978",
            "line": 1404,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_adv_mfh_1983",
            "line": 1439,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_adv_mfh_1994",
            "line": 1474,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_adv_mfh_2001",
            "line": 1509,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_adv_mfh_2009",
            "line": 1544,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_adv_mfh_2015",
            "line": 1579,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_adv_mfh_2100",
            "line": 1614,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh",
            "line": 6,
            "column": 0,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "too-many-public-methods",
            "message": "Too many public methods (47/20)",
            "message-id": "R0904"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "too-many-lines",
            "message": "Too many lines in module (1743/1000)",
            "message-id": "C0302"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh",
            "line": 6,
            "column": 0,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh",
            "line": 6,
            "column": 0,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "invalid-name",
            "message": "Class name \"Test_tabula_sfh\" doesn't conform to PascalCase naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh",
            "line": 6,
            "column": 0,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'Test_tabula_sfh' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "warning",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh",
            "line": 7,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "global-variable-not-assigned",
            "message": "Using global for 'prj' but no assignment is done",
            "message-id": "W0602"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_standard_sfh_1859",
            "line": 330,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_standard_sfh_1918",
            "line": 366,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_standard_sfh_1948",
            "line": 409,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_standard_sfh_1957",
            "line": 445,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_standard_sfh_1968",
            "line": 486,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_standard_sfh_1978",
            "line": 526,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_standard_sfh_1983",
            "line": 567,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_standard_sfh_1994",
            "line": 602,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_standard_sfh_2001",
            "line": 637,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_standard_sfh_2009",
            "line": 672,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_standard_sfh_2015",
            "line": 707,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_standard_sfh_2100",
            "line": 742,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_sfh_1859",
            "line": 777,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_sfh_1918",
            "line": 814,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_sfh_1948",
            "line": 855,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_sfh_1957",
            "line": 891,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_sfh_1968",
            "line": 932,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_sfh_1978",
            "line": 973,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_sfh_1983",
            "line": 1011,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_sfh_1994",
            "line": 1047,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_sfh_2001",
            "line": 1083,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_sfh_2009",
            "line": 1119,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_sfh_2015",
            "line": 1155,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_sfh_2100",
            "line": 1191,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_adv_sfh_1859",
            "line": 1227,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_adv_sfh_1918",
            "line": 1264,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_adv_sfh_1948",
            "line": 1304,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_adv_sfh_1957",
            "line": 1340,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_adv_sfh_1968",
            "line": 1381,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_adv_sfh_1978",
            "line": 1422,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_adv_sfh_1983",
            "line": 1463,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_adv_sfh_1994",
            "line": 1499,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_adv_sfh_2001",
            "line": 1535,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_adv_sfh_2009",
            "line": 1571,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_adv_sfh_2015",
            "line": 1607,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_adv_sfh_2100",
            "line": 1643,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh",
            "line": 6,
            "column": 0,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "too-many-public-methods",
            "message": "Too many public methods (48/20)",
            "message-id": "R0904"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "",
            "line": 289,
            "column": 0,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "line-too-long",
            "message": "Line too long (145/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "",
            "line": 290,
            "column": 0,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "line-too-long",
            "message": "Line too long (146/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "",
            "line": 291,
            "column": 0,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "line-too-long",
            "message": "Line too long (153/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "",
            "line": 637,
            "column": 0,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "line-too-long",
            "message": "Line too long (159/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "",
            "line": 638,
            "column": 0,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "line-too-long",
            "message": "Line too long (160/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "",
            "line": 639,
            "column": 0,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "line-too-long",
            "message": "Line too long (162/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "",
            "line": 907,
            "column": 0,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "line-too-long",
            "message": "Line too long (155/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "too-many-lines",
            "message": "Too many lines in module (1282/1000)",
            "message-id": "C0302"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk",
            "line": 6,
            "column": 0,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk",
            "line": 6,
            "column": 0,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "invalid-name",
            "message": "Class name \"Test_tabula_sfh_dk\" doesn't conform to PascalCase naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk",
            "line": 6,
            "column": 0,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'Test_tabula_sfh_dk' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "warning",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk",
            "line": 7,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "global-variable-not-assigned",
            "message": "Using global for 'prj' but no assignment is done",
            "message-id": "W0602"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_standard_sfh_dk_2009",
            "line": 294,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_standard_sfh_dk_2005",
            "line": 331,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_standard_sfh_dk_1997",
            "line": 368,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_standard_sfh_dk_1977",
            "line": 405,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_standard_sfh_dk_1971",
            "line": 447,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_standard_sfh_dk_1959",
            "line": 484,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_standard_sfh_dk_1949",
            "line": 521,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_standard_sfh_dk_1929",
            "line": 563,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_standard_sfh_dk_1849",
            "line": 601,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_retrofit_sfh_dk_1997",
            "line": 643,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_retrofit_sfh_dk_1977",
            "line": 680,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_retrofit_sfh_dk_1971",
            "line": 717,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_retrofit_sfh_dk_1959",
            "line": 754,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_retrofit_sfh_dk_1949",
            "line": 791,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_retrofit_sfh_dk_1929",
            "line": 833,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_retrofit_sfh_dk_1849",
            "line": 871,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_adv_retrofit_sfh_dk_1997",
            "line": 910,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_adv_retrofit_sfh_dk_1977",
            "line": 947,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_adv_retrofit_sfh_dk_1971",
            "line": 989,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_adv_retrofit_sfh_dk_1959",
            "line": 1026,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_adv_retrofit_sfh_dk_1949",
            "line": 1063,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_adv_retrofit_sfh_dk_1929",
            "line": 1105,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_adv_retrofit_sfh_dk_1849",
            "line": 1143,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk",
            "line": 6,
            "column": 0,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "too-many-public-methods",
            "message": "Too many public methods (32/20)",
            "message-id": "R0904"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_tabula_th.py",
            "symbol": "too-many-lines",
            "message": "Too many lines in module (1546/1000)",
            "message-id": "C0302"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_th.py",
            "symbol": "invalid-name",
            "message": "Class name \"Test_tabula_th\" doesn't conform to PascalCase naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_th.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'Test_tabula_th' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "warning",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th",
            "line": 6,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "global-variable-not-assigned",
            "message": "Using global for 'prj' but no assignment is done",
            "message-id": "W0602"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_standard_th_1919",
            "line": 301,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_standard_th_1948",
            "line": 337,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_standard_th_1957",
            "line": 372,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_standard_th_1968",
            "line": 407,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_standard_th_1978",
            "line": 442,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_standard_th_1983",
            "line": 477,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_standard_th_1994",
            "line": 512,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_standard_th_2001",
            "line": 547,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_standard_th_2008",
            "line": 587,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_standard_th_2015",
            "line": 622,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_standard_th_2100",
            "line": 666,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_th_1919",
            "line": 710,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_th_1948",
            "line": 747,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_th_1957",
            "line": 783,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_th_1968",
            "line": 819,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_th_1978",
            "line": 855,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_th_1983",
            "line": 890,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_th_1994",
            "line": 926,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_th_2001",
            "line": 962,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_th_2009",
            "line": 1003,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_th_2015",
            "line": 1039,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_th_2100",
            "line": 1084,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_adv_th_1919",
            "line": 1129,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_adv_th_1948",
            "line": 1165,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_adv_th_1957",
            "line": 1201,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_adv_th_1968",
            "line": 1237,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_adv_th_1978",
            "line": 1273,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_adv_th_1983",
            "line": 1309,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_adv_th_1994",
            "line": 1345,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_adv_th_2001",
            "line": 1381,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_adv_th_2008",
            "line": 1422,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_adv_th_2015",
            "line": 1458,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_adv_th_2100",
            "line": 1503,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_th.py",
            "symbol": "too-many-public-methods",
            "message": "Too many public methods (43/20)",
            "message-id": "R0904"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "",
            "line": 272,
            "column": 0,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "line-too-long",
            "message": "Line too long (168/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "",
            "line": 612,
            "column": 0,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "line-too-long",
            "message": "Line too long (142/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "",
            "line": 889,
            "column": 0,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "line-too-long",
            "message": "Line too long (132/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "too-many-lines",
            "message": "Too many lines in module (1170/1000)",
            "message-id": "C0302"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "invalid-name",
            "message": "Class name \"Test_tabula_th_dk\" doesn't conform to PascalCase naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'Test_tabula_th_dk' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "warning",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk",
            "line": 6,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "global-variable-not-assigned",
            "message": "Using global for 'prj' but no assignment is done",
            "message-id": "W0602"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_standard_th_dk_1849",
            "line": 275,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_standard_th_dk_1929",
            "line": 323,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_standard_th_dk_1949",
            "line": 358,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_standard_th_dk_1959",
            "line": 394,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_standard_th_dk_1971",
            "line": 429,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_standard_th_dk_1977",
            "line": 464,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_standard_th_dk_1997",
            "line": 499,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_standard_th_dk_2005",
            "line": 534,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_standard_th_dk_2009",
            "line": 577,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_retrofit_th_dk_1849",
            "line": 615,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_retrofit_th_dk_1929",
            "line": 663,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_retrofit_th_dk_1949",
            "line": 698,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_retrofit_th_dk_1959",
            "line": 734,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_retrofit_th_dk_1971",
            "line": 769,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_retrofit_th_dk_1977",
            "line": 804,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_retrofit_th_dk_1997",
            "line": 839,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_retrofit_th_dk_2005",
            "line": 874,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_adv_retrofit_th_dk_1849",
            "line": 893,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_adv_retrofit_th_dk_1929",
            "line": 941,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_adv_retrofit_th_dk_1949",
            "line": 976,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_adv_retrofit_th_dk_1959",
            "line": 1012,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_adv_retrofit_th_dk_1971",
            "line": 1047,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_adv_retrofit_th_dk_1977",
            "line": 1082,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_adv_retrofit_th_dk_1997",
            "line": 1117,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_adv_retrofit_th_dk_2005",
            "line": 1152,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "too-many-public-methods",
            "message": "Too many public methods (34/20)",
            "message-id": "R0904"
        },
        {
            "type": "convention",
            "module": "test_teaser_json",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_teaser_json.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "refactor",
            "module": "test_teaser_json",
            "obj": "TestTEASERJson",
            "line": 9,
            "column": 0,
            "path": "tests/test_teaser_json.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'TestTEASERJson' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "warning",
            "module": "test_teaser_json",
            "obj": "TestTEASERJson.test_save_teaser_json_tabula_de",
            "line": 29,
            "column": 17,
            "path": "tests/test_teaser_json.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "test_teaser_json",
            "obj": "TestTEASERJson.test_save_teaser_json_tabula_de",
            "line": 29,
            "column": 41,
            "path": "tests/test_teaser_json.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "test_teaser_json",
            "obj": "TestTEASERJson.test_save_teaser_json_iwu_de",
            "line": 50,
            "column": 17,
            "path": "tests/test_teaser_json.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "test_teaser_json",
            "obj": "TestTEASERJson.test_save_teaser_json_iwu_de",
            "line": 50,
            "column": 41,
            "path": "tests/test_teaser_json.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "test_teaser_json",
            "obj": "TestTEASERJson.test_save_teaser_json_kfw_de",
            "line": 71,
            "column": 17,
            "path": "tests/test_teaser_json.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "convention",
            "module": "test_teaser_json",
            "obj": "TestTEASERJson.test_save_teaser_json_kfw_de",
            "line": 71,
            "column": 41,
            "path": "tests/test_teaser_json.py",
            "symbol": "invalid-name",
            "message": "Variable name \"f\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "",
            "line": 145,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "superfluous-parens",
            "message": "Unnecessary parens after 'assert' keyword",
            "message-id": "C0325"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "",
            "line": 146,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "superfluous-parens",
            "message": "Unnecessary parens after 'assert' keyword",
            "message-id": "C0325"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "",
            "line": 147,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "superfluous-parens",
            "message": "Unnecessary parens after 'assert' keyword",
            "message-id": "C0325"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "",
            "line": 148,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "superfluous-parens",
            "message": "Unnecessary parens after 'assert' keyword",
            "message-id": "C0325"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "",
            "line": 149,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "superfluous-parens",
            "message": "Unnecessary parens after 'assert' keyword",
            "message-id": "C0325"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "",
            "line": 161,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "superfluous-parens",
            "message": "Unnecessary parens after 'assert' keyword",
            "message-id": "C0325"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "",
            "line": 162,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "superfluous-parens",
            "message": "Unnecessary parens after 'assert' keyword",
            "message-id": "C0325"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "",
            "line": 167,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "superfluous-parens",
            "message": "Unnecessary parens after 'assert' keyword",
            "message-id": "C0325"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "",
            "line": 182,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "superfluous-parens",
            "message": "Unnecessary parens after 'assert' keyword",
            "message-id": "C0325"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "",
            "line": 187,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "superfluous-parens",
            "message": "Unnecessary parens after 'assert' keyword",
            "message-id": "C0325"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "",
            "line": 192,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "superfluous-parens",
            "message": "Unnecessary parens after 'assert' keyword",
            "message-id": "C0325"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "",
            "line": 204,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "line-too-long",
            "message": "Line too long (111/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "",
            "line": 204,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "superfluous-parens",
            "message": "Unnecessary parens after 'assert' keyword",
            "message-id": "C0325"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "",
            "line": 207,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "superfluous-parens",
            "message": "Unnecessary parens after 'assert' keyword",
            "message-id": "C0325"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "",
            "line": 210,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "superfluous-parens",
            "message": "Unnecessary parens after 'assert' keyword",
            "message-id": "C0325"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "",
            "line": 213,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "superfluous-parens",
            "message": "Unnecessary parens after 'assert' keyword",
            "message-id": "C0325"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "",
            "line": 218,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "trailing-newlines",
            "message": "Trailing newlines",
            "message-id": "C0305"
        },
        {
            "type": "warning",
            "module": "test_useconditions",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "reimported",
            "message": "Reimport 'pytest' (imported line 4)",
            "message-id": "W0404"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "Test_useconditions",
            "line": 17,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "invalid-name",
            "message": "Class name \"Test_useconditions\" doesn't conform to PascalCase naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "Test_useconditions",
            "line": 17,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'Test_useconditions' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "warning",
            "module": "test_useconditions",
            "obj": "Test_useconditions",
            "line": 20,
            "column": 4,
            "path": "tests/test_useconditions.py",
            "symbol": "global-variable-not-assigned",
            "message": "Using global for 'prj' but no assignment is done",
            "message-id": "W0602"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "Test_useconditions.test_profile_adjust_opening_times",
            "line": 136,
            "column": 4,
            "path": "tests/test_useconditions.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "Test_useconditions.test_profile_adjust_weekend_profiles",
            "line": 151,
            "column": 4,
            "path": "tests/test_useconditions.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "Test_useconditions.test_profile_setback",
            "line": 169,
            "column": 4,
            "path": "tests/test_useconditions.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "Test_useconditions.test_lighting_power",
            "line": 195,
            "column": 4,
            "path": "tests/test_useconditions.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "ungrouped-imports",
            "message": "Imports from package pytest are not grouped",
            "message-id": "C0412"
        },
        {
            "type": "warning",
            "module": "test_useconditions",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "unused-import",
            "message": "Unused import pytest",
            "message-id": "W0611"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1547:1581]\n==test_tabula_th:[1426:1461]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2008,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.17 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_th_2015(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1407:1441]\n==test_tabula_th:[1277:1312]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1977,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.21 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_1983(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[968:1002]\n==test_tabula_th:[859:893]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1977,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.19 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.22 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.28 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_1983(self):\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[623:658]\n==test_tabula_th:[1241:1276]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1967,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.23 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_th_1978(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[444:479]\n==test_tabula_th:[823:858]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1967,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.19 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.23 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.31 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_th_1978(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[551:586]\n==test_tabula_th:[1169:1204]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1947,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.1 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.21 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_th_1957(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[587:622]\n==test_tabula_mfh:[1337:1371]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1956,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.11 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_ab_1968(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[408:443]\n==test_tabula_mfh:[898:932]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1956,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.23 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.23 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.33 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_ab_1968(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[659:689]\n==test_tabula_mfh:[1407:1439]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1977,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.21 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[570:594]\n==test_tabula_th:[480:504]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1982,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.5 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.65 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[529:553]\n==test_tabula_th:[445:469]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1977,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.51 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.0 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.77 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[265:289]\n==test_tabula_th:[410:434]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1967,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.51 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 1.08 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1319:1342]\n==test_tabula_th:[1180:1204]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.21 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_1957(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[424:447]\n==test_tabula_th:[351:374]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.7 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.77 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_sfh_1957(self):\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1523:1546]\n==test_tabula_sfh:[1550:1573]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.17 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_2009(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[715:738]\n==test_tabula_sfh:[721:744]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.28 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.35 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_mfh_2100(self):\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[598:622]\n==test_tabula_th:[1216:1240]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_ab_1968(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[526:550]\n==test_tabula_th:[1144:1168]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.22 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_th_1948(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[347:371]\n==test_tabula_th:[726:750]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.34 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.29 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_ab_1948(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[634:658]\n==test_tabula_mfh:[1383:1406]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.23 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_1978(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[562:586]\n==test_tabula_mfh:[1418:1441]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.21 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_1983(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[350:375]\n==test_tabula_sfh:[386:412]\n        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:\n            if \"_1_\" in floor.construction_data:\n\n                assert round(1 / (floor.r_conduc * floor.area),\n                             1) == round((1 / (1 / 0.88 - 0.34)), 1)\n\n            elif \"_2_\" in floor.construction_data:\n\n                assert round(1 / (floor.r_conduc * floor.area),\n                             1) == round((1 / (1 / 1.2 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_mfh_1918(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1509:1537]\n==test_tabula_th:[1355:1384]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.11 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.19 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_2001(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1473:1501]\n==test_tabula_th:[1319:1348]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.20 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_1994(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1021:1049]\n==test_tabula_th:[900:929]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.41 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.21 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.26 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_sfh_1994(self):\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1044:1067]\n==test_tabula_sfh:[1165:1188]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.16 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[670:689]\n==test_tabula_sfh:[1319:1340]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.21 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_1957(self):",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[230:249]\n==test_tabula_mfh:[459:478]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1956,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 1.08 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1230:1254]\n==test_tabula_sfh:[1284:1306]\n        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:\n            if \"_1_\" in floor.construction_data:\n                assert round(1 / (floor.r_conduc * floor.area),\n                             1) == round((1 / (1 / 0.22 - 0.34)), 1)\n\n            elif \"_2_\" in floor.construction_data:\n                assert round(1 / (floor.r_conduc * floor.area),\n                             1) == round((1 / (1 / 0.23 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_1948(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[1119:1145]\n==test_tabula_th_dk:[991:1014]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.34)), 1)\n# U-value of website is 1.03, but is seems to be wrong\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_adv_retrofit_sfh_dk_1849(self):\n        prj.add_residential(\n            construction_data='tabula_dk_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[875:893]\n==test_tabula_th:[875:893]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.28 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_sfh_1957(self):\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[392:411]\n==test_tabula_th:[321:339]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.88 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.7 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_mfh_1948(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1257:1274]\n==test_tabula_th:[1428:1445]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[650:668]\n==test_tabula_sfh:[656:674]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.4 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.9 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_sfh_2009(self):\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1075:1092]\n==test_tabula_sfh:[747:764]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.15 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.17 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[661:678]\n==test_tabula_th:[1243:1260]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[553:570]\n==test_tabula_th:[1135:1152]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.1 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[482:499]\n==test_tabula_th:[825:842]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.19 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.23 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[531:550]\n==test_tabula_mfh:[1271:1289]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.22 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_1948(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[388:407]\n==test_tabula_mfh:[984:1002]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.28 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_1983(self):\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[352:371]\n==test_tabula_mfh:[832:850]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.29 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_1948(self):\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[625:642]\n==test_tabula_mfh:[1409:1426]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[334:350]\n==test_tabula_sfh:[334:350]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1858,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 2.6 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 2.0 - 0.17)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[160:176]\n==test_tabula_sfh:[370:386]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1918,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.7 - 0.17)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[496:513]\n==test_tabula_mfh:[984:1001]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.28 - 0.34)), 1)\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_ab_1919(self):\n\n        prj.add_residential(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[316:334]\n==test_tabula_mfh:[545:562]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.77 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 4.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_mfh_1983(self):\n        prj.add_residential(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_data:[4161:4177]\n==test_useconditions:[56:72]\n        prj_test = Project()\n        prj_test.name = \"TestAHUProfiles\"\n\n        prj_test.add_non_residential(\n            construction_data=\"iwu_heavy\",\n            geometry_data=\"bmvbs_office\",\n            name=\"OfficeBuilding\",\n            year_of_construction=2015,\n            number_of_floors=4,\n            height_of_floors=3.5,\n            net_leased_area=1000.0,\n        )\n\n        prj_test.used_library_calc = \"AixLib\"\n        prj_test.number_of_elements_calc = 2\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1545:1573]\n==test_tabula_th:[1432:1461]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.17 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_2009(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1134:1157]\n==test_tabula_th:[1018:1042]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.15 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.17 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_sfh_2015(self):\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1170:1188]\n==test_tabula_th:[941:959]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[429:447]\n==test_tabula_th:[461:479]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.77 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_th_1983(self):\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[605:619]\n==test_tabula_th:[515:529]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1993,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.4 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1049:1072]\n==test_tabula_th:[941:965]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_2001(self):\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1108:1122]\n==test_tabula_th:[1007:1021]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2008,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[669:683]\n==test_tabula_th:[590:604]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2008,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1593:1614]\n==test_tabula_sfh:[1658:1682]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.7 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_2100(self):",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1593:1616]\n==test_tabula_sfh:[1622:1645]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.7 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_2100(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1014:1037]\n==test_tabula_sfh:[1026:1049]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.21 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.26 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_sfh_1994(self):\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[995:1018]\n==test_tabula_th_dk:[1026:1049]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.15 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_adv_retrofit_th_dk_1971(self):\n        prj.add_residential(\n            construction_data='tabula_dk_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[419:443]\n==test_tabula_th:[798:822]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.23 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.33 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_ab_1968(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[372:386]\n==test_tabula_th:[751:765]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1947,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[195:209]\n==test_tabula_th:[340:354]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1947,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.65 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[455:479]\n==test_tabula_mfh:[944:967]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.23 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.31 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_ab_1978(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[276:299]\n==test_tabula_mfh:[505:528]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 1.08 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_ab_1978(self):\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[480:494]\n==test_tabula_mfh:[968:982]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1977,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.19 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[515:529]\n==test_tabula_mfh:[1255:1269]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1918,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[160:174]\n==test_tabula_mfh:[376:390]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1918,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[345:358]\n==test_tabula_th_dk:[991:1004]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1238:1251]\n==test_tabula_th:[1432:1445]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[686:699]\n==test_tabula_th:[601:614]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.28 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1413:1426]\n==test_tabula_th_dk:[1021:1034]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[610:623]\n==test_tabula_th:[526:539]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.6 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.51 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[505:518]\n==test_tabula_th:[421:434]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 1.08 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1216:1230]\n==test_tabula_th:[1428:1442]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[575:588]\n==test_tabula_sfh:[581:594]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.65 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1060:1073]\n==test_tabula_th_dk:[985:999]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.14)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[388:401]\n==test_tabula_th:[606:619]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.28 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[241:254]\n==test_tabula_th:[386:399]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 1.29 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[171:184]\n==test_tabula_th:[316:329]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.7 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.88 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[521:534]\n==test_tabula_sfh:[1314:1327]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[211:224]\n==test_tabula_mfh:[545:558]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.77 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[1008:1028]\n==test_tabula_th_dk:[1101:1119]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_adv_retrofit_sfh_dk_1959(self):\n        prj.add_residential(\n            construction_data='tabula_dk_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[971:991]\n==test_tabula_th_dk:[925:943]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_adv_retrofit_th_dk_1929(self):\n        prj.add_residential(\n            construction_data='tabula_dk_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[736:756]\n==test_tabula_th_dk:[823:841]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_retrofit_th_dk_1997(self):\n        prj.add_residential(\n            construction_data='tabula_dk_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[699:719]\n==test_tabula_th_dk:[647:665]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_retrofit_sfh_dk_1971(self):\n        prj.add_residential(\n            construction_data='tabula_dk_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1329:1342]\n==test_tabula_th:[1447:1461]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_th_2015(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1293:1306]\n==test_tabula_th:[1411:1425]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_th_2008(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1253:1266]\n==test_tabula_th:[1370:1384]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_th_2001(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1144:1157]\n==test_tabula_th:[844:858]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_sfh_2015(self):\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1108:1121]\n==test_tabula_th:[808:822]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_sfh_2009(self):\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1072:1085]\n==test_tabula_th:[772:786]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_th_1957(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[844:857]\n==test_tabula_th:[736:750]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_sfh_1948(self):\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1568:1581]\n==test_tabula_th:[1334:1348]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_th_1994(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1533:1546]\n==test_tabula_th:[1298:1312]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_2009(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1498:1511]\n==test_tabula_th:[1262:1276]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_th_1978(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1463:1476]\n==test_tabula_th:[1190:1204]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_1994(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1428:1441]\n==test_tabula_th:[1226:1240]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_1983(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1393:1406]\n==test_tabula_th:[1154:1168]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_th_1948(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1549:1561]\n==test_tabula_th:[1351:1363]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1257:1269]\n==test_tabula_th:[1315:1327]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[777:789]\n==test_tabula_th:[896:908]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.41 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1238:1254]\n==test_tabula_sfh:[1367:1383]\n                assert round(1 / (floor.r_conduc * floor.area),\n                             1) == round((1 / (1 / 0.23 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_1968(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[837:850]\n==test_tabula_sfh:[803:816]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_1948(self):\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[791:815]\n==test_tabula_sfh:[834:857]\n        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:\n            if \"_1_\" in floor.construction_data:\n                assert round(1 / (floor.r_conduc * floor.area),\n                             1) == round((1 / (1 / 0.29 - 0.34)), 1)\n\n            elif \"_2_\" in floor.construction_data:\n\n                assert round(1 / (floor.r_conduc * floor.area),\n                             1) == round((1 / (1 / 0.32 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_sfh_1948(self):\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1199:1213]\n==test_tabula_sfh:[1216:1230]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.1 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_1859(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[760:774]\n==test_tabula_sfh:[766:780]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.1 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_1859(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1129:1142]\n==test_tabula_sfh:[1036:1049]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_2015(self):\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1094:1107]\n==test_tabula_sfh:[1000:1013]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_2009(self):\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1059:1072]\n==test_tabula_sfh:[962:975]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_sfh_1978(self):\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1024:1037]\n==test_tabula_sfh:[880:893]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_1994(self):\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[989:1002]\n==test_tabula_sfh:[921:934]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_sfh_1968(self):\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[434:448]\n==test_tabula_sfh:[545:559]\n        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:\n            if \"_1_\" in floor.construction_data:\n\n                assert round(1 / (floor.r_conduc * floor.area),\n                             1) == round((1 / (1 / 0.77 - 0.34)), 1)\n\n            elif \"_2_\" in floor.construction_data:\n\n                assert round(1 / (floor.r_conduc * floor.area),\n                             1) == round((1 / (1 / 1.0 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[671:683]\n==test_tabula_sfh:[712:724]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1112:1130]\n==test_tabula_sfh_dk:[1124:1145]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.34)), 1)\n# U-value of website is 1.03, but is seems to be wrong\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_adv_retrofit_sfh_dk_1849(self):\n        prj.add_residential(\n            construction_data='tabula_dk_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1035:1053]\n==test_tabula_sfh_dk:[1087:1107]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_adv_retrofit_ab_dk_1959(self):\n        prj.add_residential(\n            construction_data='tabula_dk_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[197:209]\n==test_tabula_th:[377:389]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.65 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[644:658]\n==test_tabula_mfh:[1358:1371]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_ab_1978(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[608:622]\n==test_tabula_mfh:[1323:1336]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_ab_1968(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[572:586]\n==test_tabula_mfh:[1276:1289]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_ab_1957(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[536:550]\n==test_tabula_mfh:[1241:1254]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_1918(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[465:479]\n==test_tabula_mfh:[919:932]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_ab_1978(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[429:443]\n==test_tabula_mfh:[954:967]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_ab_1968(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[393:407]\n==test_tabula_mfh:[884:897]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_1957(self):\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[357:371]\n==test_tabula_mfh:[802:815]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_1918(self):\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[181:194]\n==test_tabula_mfh:[361:375]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_mfh_1918(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[625:637]\n==test_tabula_mfh:[1444:1456]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[553:565]\n==test_tabula_mfh:[1145:1157]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.1 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[517:529]\n==test_tabula_mfh:[1216:1228]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[446:458]\n==test_tabula_mfh:[970:982]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.19 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[374:386]\n==test_tabula_mfh:[706:718]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[302:314]\n==test_tabula_mfh:[496:508]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.51 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[267:279]\n==test_tabula_mfh:[531:543]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.51 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[891:911]\n==test_tabula_th_dk:[647:664]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------------------------------------------------------------------------------\n#U-value adv retrofit\n\n    def test_tabula_uvalue_adv_retrofit_sfh_dk_1997(self):\n        prj.add_residential(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[710:721]\n==test_tabula_th:[625:636]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2014,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.21)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[640:651]\n==test_tabula_th:[550:561]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2000,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.35 - 0.21)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[817:827]\n==test_tabula_th:[714:724]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1918,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219\n        )\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1391:1406]\n==test_tabula_sfh:[1291:1306]\n            1) == round((1 / (1 / 0.23 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_1978(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1164:1176]\n==test_tabula_sfh:[1632:1644]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.7 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_2100(self):\n        prj.add_residential(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1199:1212]\n==test_tabula_sfh:[766:779]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.1 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_sfh_1859(self):\n\n        prj.add_residential(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[760:773]\n==test_tabula_sfh:[1216:1229]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.1 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_1859(self):\n\n        prj.add_residential(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[725:737]\n==test_tabula_sfh:[1180:1192]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_sfh_2100(self):\n        prj.add_residential(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[500:513]\n==test_tabula_mfh:[884:896]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_ab_1919(self):\n\n        prj.add_residential(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[321:334]\n==test_tabula_mfh:[585:597]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 4.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_ab_1919(self):\n\n        prj.add_residential(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_th:[596:609]\n==test_tabula_th_dk:[508:521]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[847:873]\n==test_tabula_th_dk:[713:736]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.4 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n# U-value of website is 1.03, but is seems to be wrong\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_retrofit_sfh_dk_1849(self):\n        prj.add_residential(\n            construction_data='tabula_dk_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[545:565]\n==test_tabula_th_dk:[342:360]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 1.5 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.7 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_standard_sfh_dk_1929(self):\n        prj.add_residential(\n            construction_data='tabula_dk_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[1077:1085]\n==test_tabula_th_dk:[910:918]\n        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:\n            if \"_1_\" in wall.construction_data:\n                assert round(\n                    1 / (wall.r_conduc * wall.area),\n                    1) == round((1 / (1 / 0.12 - 0.17)), 1)\n            if \"_2_\" in wall.construction_data:\n                assert round(\n                    1 / (wall.r_conduc * wall.area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[805:813]\n==test_tabula_th_dk:[632:640]\n        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:\n            if \"_1_\" in wall.construction_data:\n                assert round(\n                    1 / (wall.r_conduc * wall.area),\n                    1) == round((1 / (1 / 0.4 - 0.17)), 1)\n            if \"_2_\" in wall.construction_data:\n                assert round(\n                    1 / (wall.r_conduc * wall.area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[535:543]\n==test_tabula_th_dk:[292:300]\n        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:\n            if \"_1_\" in wall.construction_data:\n                assert round(\n                    1 / (wall.r_conduc * wall.area),\n                    1) == round((1 / (1 / 1.6 - 0.17)), 1)\n            if \"_2_\" in wall.construction_data:\n                assert round(\n                    1 / (wall.r_conduc * wall.area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[1163:1172]\n==test_tabula_th_dk:[925:941]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_adv_retrofit_th_dk_1929(self):",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[691:701]\n==test_tabula_th_dk:[753:769]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.28 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_th_dk_1971(self):",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[870:893]\n==test_tabula_th:[762:786]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.25 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.28 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_sfh_1957(self):\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[510:528]\n==test_tabula_th:[426:444]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 1.08 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_th_1978(self):\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[515:528]\n==test_tabula_th:[536:549]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_th_2001(self):\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[475:488]\n==test_tabula_th:[466:479]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_th_1983(self):\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[434:447]\n==test_tabula_th:[501:514]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_th_1994(self):\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[398:412]\n==test_tabula_th:[431:444]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_th_1978(self):\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[355:369]\n==test_tabula_th:[396:409]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_sfh_1918(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[529:538]\n==test_tabula_th:[445:454]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1977,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[489:498]\n==test_tabula_th:[410:419]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1967,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1348:1371]\n==test_tabula_th:[1216:1240]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_1968(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[832:850]\n==test_tabula_th:[731:750]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.29 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_1948(self):\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[361:375]\n==test_tabula_th:[361:374]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_mfh_1918(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1582:1591]\n==test_tabula_th:[1043:1052]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2014,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1143:1152]\n==test_tabula_th:[625:634]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2014,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1547:1556]\n==test_tabula_th:[590:599]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2008,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1108:1117]\n==test_tabula_th:[1426:1435]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2008,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1512:1521]\n==test_tabula_th:[966:975]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2000,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1073:1082]\n==test_tabula_th:[550:559]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2000,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1477:1486]\n==test_tabula_th:[930:939]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1993,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1038:1047]\n==test_tabula_th:[515:524]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1993,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1442:1451]\n==test_tabula_th:[894:903]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1982,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1003:1012]\n==test_tabula_th:[480:489]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1982,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1337:1346]\n==test_tabula_th:[375:384]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1956,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1483:1496]\n==test_tabula_sfh_dk:[1114:1127]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1378:1391]\n==test_tabula_sfh_dk:[1152:1166]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1633:1647]\n==test_tabula_sfh:[1627:1643]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.7 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_2100(self):",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1493:1511]\n==test_tabula_sfh:[1519:1537]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.19 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_2001(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1533:1546]\n==test_tabula_sfh:[1524:1537]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_2001(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1498:1511]\n==test_tabula_sfh:[1560:1573]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_2001(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1463:1476]\n==test_tabula_sfh:[1488:1501]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_1994(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1428:1441]\n==test_tabula_sfh:[1452:1465]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_1983(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1393:1406]\n==test_tabula_sfh:[1411:1424]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_1978(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1358:1371]\n==test_tabula_sfh:[1370:1383]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_1968(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1323:1336]\n==test_tabula_sfh:[1329:1342]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_1957(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1276:1289]\n==test_tabula_sfh:[1293:1306]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_1948(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1241:1254]\n==test_tabula_sfh:[1253:1266]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_1918(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1553:1581]\n==test_tabula_sfh:[1545:1573]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.17 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_2015(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1261:1274]\n==test_tabula_sfh:[1238:1251]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1220:1230]\n==test_tabula_sfh:[1238:1248]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1164:1175]\n==test_tabula_sfh:[1668:1682]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.7 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_2100(self):",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1418:1441]\n==test_tabula_sfh:[1319:1342]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.21 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_1957(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1307:1318]\n==test_tabula_sfh:[1355:1366]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:\n            if \"_1_\" in floor.construction_data:\n\n                assert round(1 / (floor.r_conduc * floor.area),\n                             1) == round((1 / (1 / 0.21 - 0.34)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1089:1107]\n==test_tabula_sfh:[1103:1121]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.21 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_sfh_2009(self):\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1054:1072]\n==test_tabula_sfh:[1067:1085]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_2001(self):\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[984:1002]\n==test_tabula_sfh:[875:893]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.28 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_1983(self):\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[781:791]\n==test_tabula_sfh:[788:798]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.41 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.35 - 0.17)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[704:713]\n==test_tabula_sfh:[710:719]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2014,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[669:678]\n==test_tabula_sfh:[675:684]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2008,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[634:643]\n==test_tabula_sfh:[640:649]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2000,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[599:608]\n==test_tabula_sfh:[605:614]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1993,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[564:573]\n==test_tabula_sfh:[570:579]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1982,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1255:1264]\n==test_tabula_sfh:[370:379]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1918,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[775:784]\n==test_tabula_sfh:[334:343]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1858,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1030:1053]\n==test_tabula_th_dk:[955:978]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_adv_retrofit_th_dk_1949(self):\n        prj.add_residential(\n            construction_data='tabula_dk_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[601:614]\n==test_tabula_th_dk:[591:604]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[941:950]\n==test_tabula_sfh_dk:[1072:1081]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.14)), 1)\n\n        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:\n            if \"_1_\" in wall.construction_data:\n                assert round(\n                    1 / (wall.r_conduc * wall.area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1000:1018]\n==test_tabula_sfh_dk:[1045:1065]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.15 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_adv_retrofit_ab_dk_1949(self):\n        prj.add_residential(\n            construction_data='tabula_dk_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[807:825]\n==test_tabula_sfh_dk:[815:835]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_retrofit_sfh_dk_1929(self):\n        prj.add_residential(\n            construction_data='tabula_dk_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[790:799]\n==test_tabula_sfh_dk:[800:809]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.14)), 1)\n\n        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:\n            if \"_1_\" in wall.construction_data:\n                assert round(\n                    1 / (wall.r_conduc * wall.area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[695:713]\n==test_tabula_sfh_dk:[773:793]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.29 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_retrofit_ab_dk_1949(self):\n        prj.add_residential(\n            construction_data='tabula_dk_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[795:805]\n==test_tabula_sfh_dk:[961:969]\n        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:\n            if \"_1_\" in wall.construction_data:\n                assert round(\n                    1 / (wall.r_conduc * wall.area),\n                    1) == round((1 / (1 / 0.1 - 0.17)), 1)\n\n            if \"_2_\" in wall.construction_data:\n\n                assert round(\n                    1 / (wall.r_conduc * wall.area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[414:430]\n==test_tabula_sfh:[429:439]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.77 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_standard_ab_dk_1971(self):",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[629:642]\n==test_tabula_th_dk:[1021:1034]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[557:570]\n==test_tabula_th_dk:[1056:1069]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.1 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[551:560]\n==test_tabula_th:[751:760]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1947,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[372:381]\n==test_tabula_th:[340:349]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1947,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[629:639]\n==test_tabula_sfh:[1432:1442]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[521:531]\n==test_tabula_sfh:[1274:1284]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[460:479]\n==test_tabula_sfh:[957:975]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.31 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_ab_1978(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[587:596]\n==test_tabula_sfh:[448:457]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1956,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[195:204]\n==test_tabula_sfh:[413:422]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1947,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[680:689]\n==test_tabula_mfh:[1241:1252]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[251:264]\n==test_tabula_mfh:[480:493]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_mfh_1968(self):\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[216:229]\n==test_tabula_mfh:[445:458]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_mfh_1957(self):\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[659:668]\n==test_tabula_mfh:[968:977]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1977,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[480:489]\n==test_tabula_mfh:[1407:1416]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1977,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[300:309]\n==test_tabula_mfh:[529:538]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1977,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[623:632]\n==test_tabula_mfh:[1372:1381]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1967,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[444:453]\n==test_tabula_mfh:[933:942]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1967,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[265:274]\n==test_tabula_mfh:[494:503]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1967,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[408:417]\n==test_tabula_mfh:[459:468]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1956,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[230:239]\n==test_tabula_mfh:[898:907]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1956,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[515:524]\n==test_tabula_mfh:[376:385]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1918,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[160:169]\n==test_tabula_mfh:[816:825]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1918,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_partial_retrofit:[27:35]\n==test_tabula_sfh:[1685:1693]\n            construction_data='tabula_de_standard',\n            geometry_data='tabula_de_single_family_house',\n            name=\"ResidentialBuilding\",\n            year_of_construction=1858,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219\n        )",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==helptest:[176:186]\n==test_data:[3736:3747]\n        win.shading_max_irr = 180.0\n        win_layer = Layer(parent=win)\n        win_layer.id = 1\n        win_layer.thickness = 0.024\n\n        win_material = Material(win_layer)\n        win_material.name = \"GlasWindow\"\n        win_material.thermal_conduc = 0.067\n        win_material.transmittance = 0.9\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_th:[1252:1260]\n==test_tabula_th_dk:[1061:1069]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_th:[1180:1188]\n==test_tabula_th_dk:[1026:1034]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_th:[941:949]\n==test_tabula_th_dk:[783:791]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_th:[946:954]\n==test_tabula_th_dk:[718:726]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_th:[601:609]\n==test_tabula_th_dk:[818:826]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_th:[531:539]\n==test_tabula_th_dk:[413:421]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.51 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[1114:1122]\n==test_tabula_th_dk:[1091:1099]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[842:850]\n==test_tabula_th_dk:[813:821]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[763:771]\n==test_tabula_th_dk:[586:594]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[572:580]\n==test_tabula_th_dk:[473:481]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.6 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[1008:1016]\n==test_tabula_th_dk:[823:831]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[971:979]\n==test_tabula_th_dk:[647:655]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[14:21]\n==test_teaser_json:[14:21]\n        prj.add_residential(\n            construction_data='tabula_de_standard',\n            geometry_data='tabula_de_single_family_house',\n            name=\"ResidentialBuilding\",\n            year_of_construction=1858,\n            number_of_floors=2,\n            height_of_floors=3.2,",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1170:1178]\n==test_tabula_th_dk:[748:756]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[686:694]\n==test_tabula_th_dk:[478:486]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1658:1666]\n==test_tabula_th:[1324:1332]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1509:1517]\n==test_tabula_th:[1319:1327]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1473:1481]\n==test_tabula_th:[1355:1363]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1391:1400]\n==test_tabula_th:[1391:1400]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:\n\n            if \"_1_\" in wall.construction_data:\n                assert round(1 / (wall.r_conduc * wall.area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1319:1327]\n==test_tabula_th:[1144:1152]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1555:1563]\n==test_tabula_th:[1023:1031]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.17 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1098:1106]\n==test_tabula_th:[1018:1026]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.15 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[865:873]\n==test_tabula_th:[900:908]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.41 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[783:791]\n==test_tabula_th:[716:724]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219\n        )\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1183:1193]\n==test_tabula_th:[1076:1087]\n                             1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_th_2100(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1057:1065]\n==test_tabula_th:[521:529]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.4 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1175:1183]\n==test_tabula_sfh_dk:[852:861]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[793:801]\n==test_tabula_sfh_dk:[768:776]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.35 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1201:1209]\n==test_tabula_sfh_dk:[726:734]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1622:1630]\n==test_tabula_sfh_dk:[1119:1127]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1663:1671]\n==test_tabula_sfh_dk:[891:899]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1627:1635]\n==test_tabula_sfh_dk:[736:744]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1149:1157]\n==test_tabula_th_dk:[1056:1064]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.1 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1266:1274]\n==test_tabula_th_dk:[955:963]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1019:1027]\n==test_tabula_th_dk:[682:690]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.26 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1375:1384]\n==test_tabula_th_dk:[1158:1167]\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.21)), 1)\n\n        assert round(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1124:1132]\n==test_tabula_th_dk:[518:526]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.18 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[675:683]\n==test_tabula_th_dk:[508:516]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1523:1546]\n==test_tabula_th:[1437:1461]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.17 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_2009(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1628:1636]\n==test_tabula_th:[1360:1368]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.11 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1271:1279]\n==test_tabula_th:[987:995]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.22 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1202:1213]\n==test_tabula_th:[1121:1132]\n            1) == round((1 / (1 / 1.1 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_1859(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[763:774]\n==test_tabula_th:[702:713]\n            1) == round((1 / (1 / 1.1 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_1859(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[728:738]\n==test_tabula_th:[658:668]\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_mfh_2100(self):\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[884:892]\n==test_tabula_th:[611:619]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[505:513]\n==test_tabula_th:[386:394]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[545:553]\n==test_tabula_th:[356:364]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.77 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1180:1189]\n==test_tabula_th:[1464:1473]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.1 - 0.21)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1040:1049]\n==test_tabula_th:[1045:1054]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.16 - 0.21)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[671:680]\n==test_tabula_th:[627:636]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.21)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1483:1491]\n==test_tabula_sfh_dk:[1152:1160]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1378:1386]\n==test_tabula_sfh_dk:[1035:1043]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1418:1426]\n==test_tabula_sfh_dk:[1157:1166]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1049:1057]\n==test_tabula_sfh_dk:[885:894]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.17)), 1)\n        # U-value of website is 0.33, but is seems to be wrong\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1054:1062]\n==test_tabula_sfh_dk:[815:823]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[755:763]\n==test_tabula_sfh_dk:[773:781]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.29 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[610:618]\n==test_tabula_sfh_dk:[461:469]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.6 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1458:1466]\n==test_tabula_sfh_dk:[429:437]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1593:1601]\n==test_tabula_sfh_dk:[345:353]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1633:1641]\n==test_tabula_sfh_dk:[699:707]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1598:1606]\n==test_tabula_sfh_dk:[313:321]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1518:1526]\n==test_tabula_sfh_dk:[303:311]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.11 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1563:1571]\n==test_tabula_sfh:[1139:1147]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.17 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1528:1536]\n==test_tabula_sfh:[761:769]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.17 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1488:1496]\n==test_tabula_sfh:[1478:1486]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1448:1456]\n==test_tabula_sfh:[1432:1440]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1553:1561]\n==test_tabula_sfh:[1350:1358]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1261:1269]\n==test_tabula_sfh:[1314:1322]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1220:1228]\n==test_tabula_sfh:[1274:1282]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1189:1197]\n==test_tabula_sfh:[1514:1522]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.11 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1623:1631]\n==test_tabula_sfh:[1653:1661]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.1 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1184:1192]\n==test_tabula_sfh:[1617:1625]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.1 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1523:1531]\n==test_tabula_sfh:[1243:1251]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1307:1316]\n==test_tabula_sfh:[1279:1287]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:\n            if \"_1_\" in floor.construction_data:\n                assert round(1 / (floor.r_conduc * floor.area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1353:1361]\n==test_tabula_sfh:[1067:1075]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[822:830]\n==test_tabula_sfh:[788:796]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.41 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[781:789]\n==test_tabula_sfh:[824:832]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.41 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[690:698]\n==test_tabula_sfh:[696:704]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[868:877]\n==test_tabula_sfh:[829:837]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.25 - 0.17)), 1)\n\n        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:\n            if \"_1_\" in floor.construction_data:\n\n                assert round(1 / (floor.r_conduc * floor.area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[680:688]\n==test_tabula_sfh:[870:878]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.25 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[615:623]\n==test_tabula_sfh:[621:629]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.51 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[429:438]\n==test_tabula_sfh:[381:391]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.7 - 0.17)), 1)\n\n        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:\n\n            if \"_1_\" in floor.construction_data:\n\n                assert round(1 / (floor.r_conduc * floor.area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[990:998]\n==test_tabula_th_dk:[985:994]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.14)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[720:728]\n==test_tabula_th_dk:[672:680]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.11 - 0.14)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1112:1120]\n==test_tabula_th_dk:[596:604]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1035:1043]\n==test_tabula_th_dk:[561:569]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[339:347]\n==test_tabula_sfh_dk:[615:624]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.62 - 0.17)), 1)\n        # U-value of website is 0.33, but is seems to be wrong\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[409:417]\n==test_tabula_sfh_dk:[577:585]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[344:352]\n==test_tabula_sfh_dk:[503:511]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.52 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[312:327]\n==test_tabula_sfh_dk:[432:449]\n                    1) == round((1 / (1 / 0.2 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.7 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_ab_dk_1929(self):\n        prj.add_residential(\n            construction_data='tabula_dk_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[606:614]\n==test_tabula_sfh_dk:[350:358]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1000:1008]\n==test_tabula_sfh:[1211:1219]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.15 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[566:574]\n==test_tabula_sfh:[651:659]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1065:1073]\n==test_tabula_mfh:[1453:1461]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1030:1038]\n==test_tabula_mfh:[1154:1162]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[760:768]\n==test_tabula_mfh:[645:653]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.4 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[536:544]\n==test_tabula_mfh:[1493:1501]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.19 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[460:468]\n==test_tabula_th_dk:[788:796]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.31 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[496:503]\n==test_tabula_th_dk:[753:761]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.28 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[357:365]\n==test_tabula_th:[576:584]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[517:526]\n==test_tabula_th:[1387:1396]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[670:678]\n==test_tabula_sfh_dk:[1003:1011]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[424:432]\n==test_tabula_sfh_dk:[387:395]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.33 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[675:683]\n==test_tabula_sfh:[1103:1111]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.21 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[521:529]\n==test_tabula_sfh:[1238:1246]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[465:473]\n==test_tabula_sfh:[1180:1188]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[429:437]\n==test_tabula_sfh:[731:739]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[388:396]\n==test_tabula_sfh:[691:699]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.28 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[281:289]\n==test_tabula_sfh:[510:518]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 1.08 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[316:324]\n==test_tabula_sfh:[429:437]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.77 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[171:179]\n==test_tabula_sfh:[424:432]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.7 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[567:575]\n==test_tabula_mfh:[1089:1097]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.21 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[634:642]\n==test_tabula_mfh:[1348:1356]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[598:606]\n==test_tabula_mfh:[1383:1391]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[562:570]\n==test_tabula_mfh:[1119:1127]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[491:499]\n==test_tabula_mfh:[944:952]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.23 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[455:463]\n==test_tabula_mfh:[909:917]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.23 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[393:401]\n==test_tabula_mfh:[725:733]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[276:284]\n==test_tabula_mfh:[470:478]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[321:329]\n==test_tabula_mfh:[445:453]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[286:294]\n==test_tabula_mfh:[620:628]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[251:259]\n==test_tabula_mfh:[550:558]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[216:224]\n==test_tabula_mfh:[585:593]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[176:184]\n==test_tabula_mfh:[392:400]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.88 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[639:647]\n==test_tabula_ab_dk:[765:773]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.23 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[603:611]\n==test_tabula_ab_dk:[807:815]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[531:539]\n==test_tabula_ab_dk:[571:579]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.22 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[526:534]\n==test_tabula_ab_dk:[995:1003]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[419:427]\n==test_tabula_ab_dk:[725:733]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.23 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[383:391]\n==test_tabula_ab_dk:[601:609]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[352:360]\n==test_tabula_ab_dk:[695:703]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.29 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[347:355]\n==test_tabula_ab_dk:[531:539]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.34 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[241:249]\n==test_tabula_ab_dk:[374:382]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[211:219]\n==test_tabula_ab_dk:[414:422]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.77 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[0:15]\n==test_tabula_ab_dk:[0:15]\nfrom teaser.project import Project\nprj = Project(False)\n\n\nclass Test_tabula_ab(object):\n    global prj\n\n    def test_tabula_de_ab_area_1919(self):\n        \"\"\"\n        Test for area estimation of tabula ab\n        \"\"\"\n        prj.set_default()\n        prj.data = None\n\n        prj.add_residential(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_partial_retrofit:[28:35]\n==test_tabula_sfh:[780:788]\n            geometry_data='tabula_de_single_family_house',\n            name=\"ResidentialBuilding\",\n            year_of_construction=1858,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219\n            )\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_th:[672:680]\n==test_tabula_th_dk:[880:894]\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.21)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_th:[628:636]\n==test_tabula_th_dk:[540:548]\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.21)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_th:[593:609]\n==test_tabula_th_dk:[540:564]\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[318:333]\n==test_tabula_th_dk:[566:579]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.5 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_standard_sfh_dk_2005(self):\n        prj.add_residential(\n            construction_data='tabula_dk_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[956:963]\n==test_tabula_th:[1468:1476]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.1 - 0.21)), 1)\n\n        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:\n            if \"_1_\" in wall.construction_data:",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1183:1192]\n==test_tabula_th:[658:667]\n                             1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_th_2100(self):\n        prj.add_residential(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[666:674]\n==test_tabula_th:[581:589]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_th_2008(self):\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[631:639]\n==test_tabula_th:[401:409]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_sfh_2001(self):\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[596:604]\n==test_tabula_th:[366:374]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_th_1957(self):\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[520:528]\n==test_tabula_th:[331:339]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_sfh_1978(self):\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[672:683]\n==test_tabula_th_dk:[540:551]\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1202:1212]\n==test_tabula_th:[702:712]\n            1) == round((1 / (1 / 1.1 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_1859(self):\n\n        prj.add_residential(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[763:773]\n==test_tabula_th:[1121:1131]\n                             1) == round((1 / (1 / 1.1 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_th_1919(self):\n\n        prj.add_residential(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1617:1626]\n==test_tabula_th:[1088:1097]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2099,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1178:1189]\n==test_tabula_th:[1507:1518]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2099,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.1 - 0.21)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1178:1187]\n==test_tabula_th:[669:678]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2099,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[728:737]\n==test_tabula_th:[1076:1086]\n                             1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_th_2100(self):\n\n        prj.add_residential(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1619:1626]\n==test_tabula_th:[517:524]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1584:1591]\n==test_tabula_th:[482:489]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1549:1556]\n==test_tabula_th:[447:454]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1514:1521]\n==test_tabula_th:[412:419]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1479:1486]\n==test_tabula_th:[377:384]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1444:1451]\n==test_tabula_th:[342:349]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1409:1416]\n==test_tabula_th:[307:314]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[873:882]\n==test_tabula_sfh:[911:919]\n        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:\n\n            if \"_1_\" in floor.construction_data:\n                assert round(1 / (floor.r_conduc * floor.area),\n                             1) == round((1 / (1 / 0.28 - 0.34)), 1)\n\n            elif \"_2_\" in floor.construction_data:\n                assert round(1 / (floor.r_conduc * floor.area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[739:748]\n==test_tabula_sfh:[745:754]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2099,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[660:668]\n==test_tabula_sfh:[701:709]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_mfh_2009(self):\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[520:528]\n==test_tabula_sfh:[480:488]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_mfh_1978(self):\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[485:493]\n==test_tabula_sfh:[439:447]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_sfh_1957(self):\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[450:458]\n==test_tabula_sfh:[403:412]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_sfh_1948(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1374:1381]\n==test_tabula_sfh:[747:754]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1339:1346]\n==test_tabula_sfh:[712:719]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1257:1264]\n==test_tabula_sfh:[677:684]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1216:1223]\n==test_tabula_sfh:[642:649]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1180:1187]\n==test_tabula_sfh:[607:614]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1145:1152]\n==test_tabula_sfh:[572:579]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1110:1117]\n==test_tabula_sfh:[531:538]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1075:1082]\n==test_tabula_sfh:[491:498]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1040:1047]\n==test_tabula_sfh:[450:457]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1005:1012]\n==test_tabula_sfh:[415:422]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[970:977]\n==test_tabula_sfh:[372:379]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[935:942]\n==test_tabula_sfh:[336:343]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[334:341]\n==test_tabula_sfh:[17:24]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1858,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1205:1219]\n==test_tabula_th_dk:[965:978]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_adv_retrofit_th_dk_1949(self):\n        prj.add_residential(\n            construction_data='tabula_dk_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1117:1130]\n==test_tabula_th_dk:[930:943]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_adv_retrofit_th_dk_1929(self):\n        prj.add_residential(\n            construction_data='tabula_dk_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[812:825]\n==test_tabula_th_dk:[652:665]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_retrofit_ab_dk_1977(self):\n        prj.add_residential(\n            construction_data='tabula_dk_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[541:554]\n==test_tabula_th_dk:[347:360]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.7 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_th_dk_1949(self):\n        prj.add_residential(\n            construction_data='tabula_dk_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[506:519]\n==test_tabula_th_dk:[312:325]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_th_dk_1929(self):\n        prj.add_residential(\n            construction_data='tabula_dk_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[444:452]\n==test_tabula_th:[561:569]\n        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:\n\n            if \"_1_\" in wall.construction_data:\n                assert round(1 / (wall.r_conduc * wall.area),\n                             1) == round((1 / (1 / 0.6 - 0.17)), 1)\n\n            if \"_2_\" in wall.construction_data:\n                assert round(1 / (wall.r_conduc * wall.area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1180:1193]\n==test_tabula_sfh_dk:[1130:1145]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n    #\n    #     # assert round(\n    #     #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n    #     #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n    #     #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_adv_retrofit_ab_dk_2005(self):\n        prj.add_residential(\n            construction_data='tabula_dk_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1154:1167]\n==test_tabula_sfh_dk:[1092:1107]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_adv_retrofit_sfh_dk_1929(self):\n        prj.add_residential(\n            construction_data='tabula_dk_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1075:1088]\n==test_tabula_sfh_dk:[1050:1065]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_adv_retrofit_sfh_dk_1949(self):\n        prj.add_residential(\n            construction_data='tabula_dk_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1040:1053]\n==test_tabula_sfh_dk:[1013:1028]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_adv_retrofit_ab_dk_1959(self):\n        prj.add_residential(\n            construction_data='tabula_dk_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1005:1018]\n==test_tabula_sfh_dk:[976:991]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_adv_retrofit_ab_dk_1949(self):\n        prj.add_residential(\n            construction_data='tabula_dk_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[970:983]\n==test_tabula_sfh_dk:[934:949]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_adv_retrofit_ab_dk_1929(self):\n        prj.add_residential(\n            construction_data='tabula_dk_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[875:888]\n==test_tabula_sfh_dk:[858:873]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n    #\n    #     # assert round(\n    #     #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n    #     #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n    #     #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_retrofit_ab_dk_2005(self):\n        prj.add_residential(\n            construction_data='tabula_dk_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[849:862]\n==test_tabula_sfh_dk:[820:835]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_retrofit_sfh_dk_1929(self):\n        prj.add_residential(\n            construction_data='tabula_dk_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[770:783]\n==test_tabula_sfh_dk:[778:793]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_retrofit_sfh_dk_1949(self):\n        prj.add_residential(\n            construction_data='tabula_dk_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[735:748]\n==test_tabula_sfh_dk:[741:756]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_retrofit_sfh_dk_1959(self):\n        prj.add_residential(\n            construction_data='tabula_dk_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[700:713]\n==test_tabula_sfh_dk:[704:719]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_retrofit_sfh_dk_1971(self):\n        prj.add_residential(\n            construction_data='tabula_dk_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[665:678]\n==test_tabula_sfh_dk:[667:682]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_retrofit_sfh_dk_1977(self):\n        prj.add_residential(\n            construction_data='tabula_dk_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[419:432]\n==test_tabula_sfh_dk:[508:523]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_standard_ab_dk_1971(self):\n        prj.add_residential(\n            construction_data='tabula_dk_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[384:397]\n==test_tabula_sfh_dk:[471:486]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_standard_ab_dk_1959(self):\n        prj.add_residential(\n            construction_data='tabula_dk_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[459:472]\n==test_tabula_sfh_dk:[588:603]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.7 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_standard_ab_dk_1977(self):\n        prj.add_residential(\n            construction_data='tabula_dk_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[349:362]\n==test_tabula_sfh_dk:[434:449]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.7 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_standard_ab_dk_1949(self):\n        prj.add_residential(\n            construction_data='tabula_dk_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[314:327]\n==test_tabula_sfh_dk:[550:565]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.7 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_standard_sfh_dk_1929(self):\n        prj.add_residential(\n            construction_data='tabula_dk_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[613:622]\n==test_tabula_th:[1497:1506]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_ab_1968(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[470:479]\n==test_tabula_th:[704:713]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_th_1919(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[577:586]\n==test_tabula_sfh:[1637:1645]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_2100(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[434:443]\n==test_tabula_sfh:[771:780]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_sfh_1859(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[291:299]\n==test_tabula_sfh:[360:369]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_sfh_1918(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[541:550]\n==test_tabula_mfh:[1608:1616]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_ab_1948(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[505:514]\n==test_tabula_mfh:[1204:1213]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_ab_1919(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[398:407]\n==test_tabula_mfh:[765:774]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_ab_1957(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[256:264]\n==test_tabula_mfh:[695:703]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_mfh_2015(self):\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[221:229]\n==test_tabula_mfh:[366:375]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_mfh_1918(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[186:194]\n==test_tabula_mfh:[402:411]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_ab_1948(self):\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[661:668]\n==test_tabula_mfh:[900:907]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[625:632]\n==test_tabula_mfh:[818:825]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[589:596]\n==test_tabula_mfh:[777:784]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[553:560]\n==test_tabula_mfh:[741:748]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[517:524]\n==test_tabula_mfh:[706:713]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[482:489]\n==test_tabula_mfh:[671:678]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[446:453]\n==test_tabula_mfh:[636:643]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[410:417]\n==test_tabula_mfh:[601:608]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[374:381]\n==test_tabula_mfh:[531:538]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[302:309]\n==test_tabula_mfh:[566:573]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[267:274]\n==test_tabula_mfh:[461:468]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[232:239]\n==test_tabula_mfh:[496:503]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[197:204]\n==test_tabula_mfh:[378:385]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[162:169]\n==test_tabula_mfh:[336:343]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_partial_retrofit:[27:33]\n==test_tabula_sfh:[15:21]\n                construction_data='tabula_de_standard',\n                geometry_data='tabula_de_single_family_house',\n                name=\"ResidentialBuilding\",\n                year_of_construction=1858,\n                number_of_floors=2,\n                height_of_floors=3.2,",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_examples:[6:15]\n==test_simulation_export:[6:15]\nfrom teaser.logic import utilities\nfrom teaser.project import Project\nimport math\nimport os\nimport warnings as warnings\n\nprj = Project(False)\n\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_data:[723:729]\n==test_tabula_sfh:[1734:1741]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1858,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n        )",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==helptest:[169:175]\n==test_data:[3729:3735]\n        win.inner_convection = 1.7\n        win.inner_radiation = 5.0\n        win.outer_convection = 20.0\n        win.outer_radiation = 5.0\n        win.g_value = 0.789\n        win.a_conv = 0.03",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[1035:1041]\n==test_tabula_th_dk:[1161:1167]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.21)), 1)\n\n        assert round(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[726:732]\n==test_tabula_th_dk:[848:864]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.21)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n        #     1) == round((1 / (1 / 0.3 - 0.17)), 1)\n        #\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n        #     1) == round((1 / (1 / 0.18 - 0.34)), 1)\n\n        assert round(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[1111:1117]\n==test_tabula_th_dk:[982:988]\n            height_of_floors=3.2,\n            net_leased_area=95)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[839:845]\n==test_tabula_th_dk:[704:710]\n            height_of_floors=3.2,\n            net_leased_area=95)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[569:575]\n==test_tabula_th_dk:[364:370]\n            height_of_floors=3.2,\n            net_leased_area=95)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[969:991]\n==test_tabula_th_dk:[1099:1119]\n            1) == round((1 / (1 / 0.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_adv_retrofit_th_dk_1997(self):\n        prj.add_residential(\n            construction_data='tabula_dk_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[969:979]\n==test_tabula_th_dk:[821:831]\n            1) == round((1 / (1 / 0.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[686:692]\n==test_tabula_th_dk:[669:675]\n            height_of_floors=3.2,\n            net_leased_area=117)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[411:417]\n==test_tabula_th_dk:[329:335]\n            height_of_floors=3.2,\n            net_leased_area=117)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[318:332]\n==test_tabula_th_dk:[601:617]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.5 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_standard_sfh_dk_2005(self):\n        prj.add_residential(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[246:251]\n==test_tabula_th_dk:[29:34]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].ground_floors), 1) == 66\n        assert round(\n            sum(wall.area for wall in",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[122:127]\n==test_tabula_th_dk:[261:266]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].ground_floors), 1) == 118\n        assert round(\n            sum(wall.area for wall in",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[780:785]\n==test_teaser_json:[16:21]\n            geometry_data='tabula_de_single_family_house',\n            name=\"ResidentialBuilding\",\n            year_of_construction=1858,\n            number_of_floors=2,\n            height_of_floors=3.2,",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[106:112]\n==test_tabula_th_dk:[164:170]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=111)\n\n        assert round(\n            sum(wall.area for wall in",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1625:1632]\n==test_tabula_th:[1526:1533]\n                             1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1291:1306]\n==test_tabula_th:[1260:1276]\n            1) == round((1 / (1 / 0.23 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_th_1978(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1209:1216]\n==test_tabula_th:[1107:1114]\n            1) == round((1 / (1 / 0.15 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.15 - 0.34)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[222:228]\n==test_tabula_th:[77:83]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=150)\n\n        assert round(\n            sum(wall.area for wall in",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[296:306]\n==test_tabula_th:[122:132]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_de_sfh_area_2015(self):\n        \"\"\"\n        Test for area estimation of tabula sfh\n        \"\"\"\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[267:277]\n==test_tabula_th:[93:103]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_de_th_area_1968(self):\n        \"\"\"\n        Test for area estimation of tabula th\n        \"\"\"\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[238:248]\n==test_tabula_th:[64:74]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_de_th_area_1956(self):\n        \"\"\"\n        Test for area estimation of tabula th\n        \"\"\"\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[209:219]\n==test_tabula_th:[35:45]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_de_th_area_1948(self):\n        \"\"\"\n        Test for area estimation of tabula th\n        \"\"\"\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[6:16]\n==test_tabula_th:[5:16]\n    global prj\n\n    def test_tabula_de_th_area_1919(self):\n        \"\"\"\n        Test for area estimation of tabula th\n        \"\"\"\n        prj.set_default()\n        prj.data = None\n\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1201:1207]\n==test_tabula_sfh_dk:[689:700]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.21)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n        #     1) == round((1 / (1 / 0.3 - 0.17)), 1)\n\n        assert round(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1378:1384]\n==test_tabula_th_dk:[1126:1142]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.21)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n        #     1) == round((1 / (1 / 0.3 - 0.17)), 1)\n        #\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n        #     1) == round((1 / (1 / 0.18 - 0.34)), 1)\n\n        assert round(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1526:1546]\n==test_tabula_th:[1404:1425]\n                             1) == round((1 / (1 / 0.14 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.17 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_th_2008(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1596:1603]\n==test_tabula_th:[1481:1488]\n                             1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[866:873]\n==test_tabula_th:[760:767]\n                             1) == round((1 / (1 / 0.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.25 - 0.17)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[718:725]\n==test_tabula_th:[644:651]\n                             1) == round((1 / (1 / 0.28 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.35 - 0.34)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[427:434]\n==test_tabula_th:[349:356]\n            1) == round((1 / (1 / 0.65 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.7 - 0.17)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1014:1020]\n==test_tabula_sfh_dk:[924:935]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.21 - 0.17)), 1)\n        #\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n        #     1) == round((1 / (1 / 0.33 - 0.34)), 1)\n\n        assert round(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[55:60]\n==test_tabula_sfh_dk:[274:279]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].outer_walls), 1) == 146\n        assert round(\n            sum(wall.area for wall in",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1321:1336]\n==test_tabula_sfh:[1409:1424]\n            1) == round((1 / (1 / 0.23 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_1978(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[296:306]\n==test_tabula_sfh:[180:190]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_de_mfh_area_2015(self):\n        \"\"\"\n        Test for area estimation of tabula mfh\n        \"\"\"\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[267:277]\n==test_tabula_sfh:[122:132]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_de_mfh_area_2009(self):\n        \"\"\"\n        Test for area estimation of tabula mfh\n        \"\"\"\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[238:248]\n==test_tabula_sfh:[93:103]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_de_mfh_area_2001(self):\n        \"\"\"\n        Test for area estimation of tabula mfh\n        \"\"\"\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[209:219]\n==test_tabula_sfh:[64:74]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_de_mfh_area_1994(self):\n        \"\"\"\n        Test for area estimation of tabula mfh\n        \"\"\"\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[180:190]\n==test_tabula_sfh:[35:45]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_de_sfh_area_1919(self):\n        \"\"\"\n        Test for area estimation of tabula sfh\n        \"\"\"\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[334:340]\n==test_tabula_sfh:[1719:1725]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1858,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1174:1181]\n==test_tabula_th_dk:[985:992]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.14)), 1)\n\n\n        assert round(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[5:16]\n==test_tabula_th_dk:[5:16]\n    global prj\n\n    def test_tabula_de_th_dk_area_1849(self):\n        \"\"\"\n        Test for area estimation of tabula th\n        \"\"\"\n        prj.set_default()\n        prj.data = None\n\n        prj.add_residential(\n            construction_data='tabula_dk_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[665:677]\n==test_tabula_sfh_dk:[896:911]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_ab_dk_1929(self):\n        prj.add_residential(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[384:396]\n==test_tabula_sfh_dk:[626:644]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#--------------------------------------------------------------------------------------------------------------------------------------------------------------\n#---------------------------------------------------------------------------------------------------------------------------------------------------------------\n#-----------------------------------------------------------------------------------------------------------------------------------------------------------------\n#test for U-value for retrofit\n\n\n    def test_tabula_uvalue_retrofit_sfh_dk_1997(self):\n        prj.add_residential(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[106:112]\n==test_tabula_mfh:[48:54]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=312)\n\n        assert round(\n            sum(wall.area for wall in",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[233:239]\n==test_tabula_th_dk:[1158:1164]\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[198:204]\n==test_tabula_th_dk:[880:886]\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[163:169]\n==test_tabula_th_dk:[540:546]\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[470:478]\n==test_tabula_th:[1123:1131]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_th_1919(self):\n\n        prj.add_residential(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[463:479]\n==test_tabula_sfh:[919:934]\n                             1) == round((1 / (1 / 0.31 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_sfh_1968(self):\n        prj.add_residential(\n            construction_data='tabula_de_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[434:442]\n==test_tabula_sfh:[1221:1229]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_ab_1968(self):\n\n        prj.add_residential(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[642:658]\n==test_tabula_mfh:[1239:1254]\n                             1) == round((1 / (1 / 0.23 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_1918(self):\n        prj.add_residential(\n            construction_data='tabula_de_adv_retrofit',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[560:567]\n==test_tabula_mfh:[1305:1312]\n                             1) == round((1 / (1 / 0.1 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[541:549]\n==test_tabula_mfh:[1169:1176]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_ab_1948(self):\n\n        prj.add_residential(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[505:513]\n==test_tabula_mfh:[765:773]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_1859(self):\n\n        prj.add_residential(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[398:406]\n==test_tabula_mfh:[1204:1212]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_ab_1957(self):\n\n        prj.add_residential(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[551:557]\n==test_tabula_mfh:[1290:1296]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1947,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[372:378]\n==test_tabula_mfh:[851:857]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1947,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[195:201]\n==test_tabula_mfh:[412:418]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1947,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[151:159]\n==test_tabula_mfh:[151:161]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_uvalue_standard_ab_1919(self):\n\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[122:132]\n==test_tabula_mfh:[122:132]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_de_mfh_area_1968(self):\n        \"\"\"\n        Test for area estimation of tabula mfh\n        \"\"\"\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[93:103]\n==test_tabula_mfh:[93:103]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_de_mfh_area_1957(self):\n        \"\"\"\n        Test for area estimation of tabula mfh\n        \"\"\"\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[64:74]\n==test_tabula_mfh:[64:74]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_de_mfh_area_1948(self):\n        \"\"\"\n        Test for area estimation of tabula mfh\n        \"\"\"\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[35:45]\n==test_tabula_mfh:[35:45]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_de_mfh_area_1919(self):\n        \"\"\"\n        Test for area estimation of tabula mfh\n        \"\"\"\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[5:16]\n==test_tabula_mfh:[6:16]\n    global prj\n\n    def test_tabula_de_ab_area_1919(self):\n        \"\"\"\n        Test for area estimation of tabula ab\n        \"\"\"\n        prj.set_default()\n        prj.data = None\n\n        prj.add_residential(\n            construction_data='tabula_de_standard',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_partial_retrofit:[28:33]\n==test_tabula_sfh:[1733:1738]\n            geometry_data='tabula_de_single_family_house',\n            name=\"ResidentialBuilding\",\n            year_of_construction=1858,\n            number_of_floors=2,\n            height_of_floors=3.2,",
            "message-id": "R0801"
        }
    ],
    "stats": {
        "bad_names": {
            "argument": 4,
            "attr": 0,
            "klass": 13,
            "class_attribute": 0,
            "class_const": 0,
            "const": 0,
            "inlinevar": 0,
            "function": 0,
            "method": 0,
            "module": 0,
            "variable": 21,
            "typevar": 0,
            "typealias": 0
        },
        "by_module": {
            "teaser.__init__": {
                "convention": 2,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 16,
                "warning": 1
            },
            "teaser.project": {
                "convention": 32,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 13,
                "statement": 293,
                "warning": 3
            },
            "helptest": {
                "convention": 3,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 6,
                "statement": 359,
                "warning": 7
            },
            "test_besmod_output": {
                "convention": 7,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 75,
                "warning": 0
            },
            "test_data": {
                "convention": 92,
                "error": 6,
                "fatal": 0,
                "info": 0,
                "refactor": 28,
                "statement": 2376,
                "warning": 98
            },
            "test_examples": {
                "convention": 14,
                "error": 5,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 36,
                "warning": 22
            },
            "test_modelicaversion": {
                "convention": 8,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 44,
                "warning": 2
            },
            "test_partial_retrofit": {
                "convention": 3,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 10,
                "warning": 0
            },
            "test_simulation_export": {
                "convention": 6,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 11,
                "warning": 7
            },
            "test_tabula_ab": {
                "convention": 18,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 146,
                "warning": 1
            },
            "test_tabula_ab_dk": {
                "convention": 34,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 257,
                "warning": 1
            },
            "test_tabula_mfh": {
                "convention": 40,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 371,
                "warning": 1
            },
            "test_tabula_sfh": {
                "convention": 40,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 396,
                "warning": 1
            },
            "test_tabula_sfh_dk": {
                "convention": 34,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 210,
                "warning": 1
            },
            "test_tabula_th": {
                "convention": 37,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 367,
                "warning": 1
            },
            "test_tabula_th_dk": {
                "convention": 32,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 213,
                "warning": 1
            },
            "test_teaser_json": {
                "convention": 4,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 78,
                "warning": 3
            },
            "test_useconditions": {
                "convention": 23,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 534,
                "statement": 120,
                "warning": 3
            }
        },
        "by_msg": {
            "missing-function-docstring": 217,
            "invalid-name": 38,
            "unspecified-encoding": 4,
            "consider-using-with": 1,
            "line-too-long": 33,
            "too-many-lines": 8,
            "consider-using-from-import": 4,
            "useless-object-inheritance": 15,
            "too-many-instance-attributes": 1,
            "too-many-arguments": 4,
            "too-many-locals": 10,
            "import-outside-toplevel": 77,
            "raise-missing-from": 1,
            "unidiomatic-typecheck": 2,
            "unused-variable": 13,
            "too-many-public-methods": 8,
            "trailing-comma-tuple": 2,
            "missing-module-docstring": 12,
            "pointless-string-statement": 7,
            "too-many-statements": 19,
            "missing-class-docstring": 9,
            "global-variable-not-assigned": 10,
            "not-an-iterable": 5,
            "implicit-str-concat": 1,
            "consider-using-generator": 2,
            "function-redefined": 1,
            "protected-access": 58,
            "redefined-outer-name": 25,
            "reimported": 16,
            "unnecessary-dunder-call": 1,
            "comparison-with-itself": 1,
            "pointless-statement": 3,
            "wrong-import-order": 12,
            "unused-import": 12,
            "useless-import-alias": 3,
            "global-statement": 2,
            "assignment-from-no-return": 5,
            "bare-except": 1,
            "inconsistent-return-statements": 1,
            "too-few-public-methods": 3,
            "superfluous-parens": 15,
            "trailing-newlines": 1,
            "ungrouped-imports": 1,
            "duplicate-code": 533
        },
        "code_type_count": {
            "code": 0,
            "comment": 0,
            "docstring": 0,
            "empty": 0,
            "total": 0
        },
        "dependencies": {
            "mako.util": [
                "teaser"
            ],
            "teaser.logic.utilities": [
                "test_data",
                "teaser.project",
                "test_examples",
                "test_simulation_export",
                "test_useconditions",
                "test_besmod_output"
            ],
            "teaser.data.utilities": [
                "teaser.project",
                "test_useconditions",
                "test_data"
            ],
            "teaser.data.input.teaserjson_input": [
                "teaser.project"
            ],
            "teaser.data.output.teaserjson_output": [
                "teaser.project"
            ],
            "teaser.data.output.aixlib_output": [
                "teaser.project"
            ],
            "teaser.data.output.besmod_output": [
                "teaser.project",
                "test_besmod_output"
            ],
            "teaser.data.output.ibpsa_output": [
                "teaser.project"
            ],
            "teaser.data.dataclass": [
                "teaser.project",
                "test_useconditions",
                "test_data"
            ],
            "teaser.logic.archetypebuildings.tabula.de.singlefamilyhouse": [
                "teaser.project"
            ],
            "teaser.logic.simulation.modelicainfo": [
                "teaser.project"
            ],
            "teaser.logic.retrofit": [
                "teaser.project"
            ],
            "teaser.data.output.reports.model_report": [
                "teaser.project"
            ],
            "teaser.logic.buildingobjects.useconditions": [
                "helptest",
                "test_data"
            ],
            "teaser.logic.buildingobjects.building": [
                "helptest",
                "test_data"
            ],
            "teaser.logic.buildingobjects.buildingphysics.groundfloor": [
                "helptest",
                "test_data"
            ],
            "teaser.logic.buildingobjects.buildingphysics.innerwall": [
                "helptest",
                "test_data"
            ],
            "teaser.logic.buildingobjects.buildingphysics.interzonalwall": [
                "helptest",
                "test_data"
            ],
            "teaser.logic.buildingobjects.buildingphysics.interzonalfloor": [
                "helptest",
                "test_data"
            ],
            "teaser.logic.buildingobjects.buildingphysics.interzonalceiling": [
                "helptest",
                "test_data"
            ],
            "teaser.logic.buildingobjects.buildingphysics.layer": [
                "helptest",
                "test_data"
            ],
            "teaser.logic.buildingobjects.buildingphysics.material": [
                "helptest",
                "test_data"
            ],
            "teaser.logic.buildingobjects.buildingphysics.outerwall": [
                "helptest",
                "test_data"
            ],
            "teaser.logic.buildingobjects.buildingphysics.rooftop": [
                "helptest",
                "test_data"
            ],
            "teaser.logic.buildingobjects.buildingphysics.window": [
                "helptest",
                "test_data"
            ],
            "teaser.logic.buildingobjects.thermalzone": [
                "helptest",
                "test_data"
            ],
            "teaser.project": [
                "test_partial_retrofit",
                "test_tabula_mfh",
                "test_data",
                "test_tabula_sfh_dk",
                "test_tabula_th_dk",
                "test_tabula_ab",
                "test_tabula_sfh",
                "test_examples",
                "test_simulation_export",
                "test_teaser_json",
                "test_useconditions",
                "test_modelicaversion",
                "test_besmod_output",
                "test_tabula_th",
                "test_tabula_ab_dk"
            ],
            "teaser.logic.buildingobjects.calculation.four_element": [
                "test_data"
            ],
            "teaser.logic.buildingobjects.calculation.three_element": [
                "test_data"
            ],
            "teaser.logic.buildingobjects.calculation.two_element": [
                "test_data"
            ],
            "helptest": [
                "test_useconditions",
                "test_data"
            ],
            "pytest": [
                "test_useconditions",
                "test_data"
            ],
            "teaser.examples.verification.verification_VDI_6007_room1": [
                "test_data"
            ],
            "teaser.examples.verification.verification_VDI_6007_room3": [
                "test_data"
            ],
            "teaser.examples.verification.verification_VDI_6007_room8": [
                "test_data"
            ],
            "teaser.logic.archetypebuildings.bmvbs.office": [
                "test_modelicaversion",
                "test_data"
            ],
            "teaser.logic.archetypebuildings.bmvbs.custom.institute4": [
                "test_data"
            ],
            "teaser.logic.archetypebuildings.bmvbs.custom.institute8": [
                "test_data"
            ],
            "teaser.logic.archetypebuildings.bmvbs.custom.institute": [
                "test_data"
            ],
            "teaser.logic.archetypebuildings.bmvbs.singlefamilydwelling": [
                "test_data"
            ],
            "teaser.logic.buildingobjects.calculation.one_element": [
                "test_data"
            ],
            "teaser.logic.buildingobjects.calculation.five_element": [
                "test_data"
            ],
            "teaser.examples.verification.verification_ASHRAE_140_600": [
                "test_data"
            ],
            "teaser.examples.verification.verification_ASHRAE_140_620": [
                "test_data"
            ],
            "teaser.examples.verification.verification_ASHRAE_140_900": [
                "test_data"
            ],
            "teaser.examples.verification.verification_ASHRAE_140_920": [
                "test_data"
            ],
            "teaser.examples.e1_generate_archetype": [
                "test_examples"
            ],
            "teaser.examples.e2_export_aixlib_models": [
                "test_simulation_export",
                "test_examples"
            ],
            "teaser.examples.e3_export_ibpsa_models": [
                "test_examples"
            ],
            "teaser.examples.e4_save": [
                "test_examples"
            ],
            "teaser.examples.e5_load": [
                "test_examples"
            ],
            "teaser.examples.e6_generate_building": [
                "test_teaser_json",
                "test_examples"
            ],
            "teaser.examples.e7_retrofit": [
                "test_examples"
            ],
            "teaser.examples.e8_change_boundary_conditions": [
                "test_examples"
            ],
            "teaser.examples.e11_export_besmod_models": [
                "test_examples"
            ],
            "teaser.logic.buildingobjects.calculation.ibpsa": [
                "test_modelicaversion"
            ],
            "pandas": [
                "test_useconditions"
            ]
        },
        "duplicated_lines": {
            "nb_duplicated_lines": 0,
            "percent_duplicated_lines": 0.0
        },
        "node_count": {
            "function": 3,
            "klass": 16,
            "method": 409,
            "module": 18
        },
        "undocumented": {
            "function": 1,
            "klass": 9,
            "method": 216,
            "module": 12
        },
        "convention": 429,
        "error": 11,
        "fatal": 0,
        "info": 0,
        "refactor": 604,
        "statement": 5378,
        "warning": 153,
        "global_note": 0,
        "nb_duplicated_lines": 4440,
        "percent_duplicated_lines": 27.458256029684602
    },
    "previous": {
        "bad_names": {
            "argument": 4,
            "attr": 0,
            "klass": 13,
            "class_attribute": 0,
            "class_const": 0,
            "const": 0,
            "inlinevar": 0,
            "function": 0,
            "method": 0,
            "module": 0,
            "variable": 21,
            "typevar": 0,
            "typealias": 0
        },
        "by_module": {
            "teaser.__init__": {
                "convention": 2,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 16,
                "warning": 1
            },
            "teaser.project": {
                "convention": 32,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 13,
                "statement": 293,
                "warning": 3
            },
            "helptest": {
                "convention": 3,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 6,
                "statement": 359,
                "warning": 7
            },
            "test_besmod_output": {
                "convention": 7,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 0,
                "statement": 75,
                "warning": 0
            },
            "test_data": {
                "convention": 92,
                "error": 6,
                "fatal": 0,
                "info": 0,
                "refactor": 28,
                "statement": 2376,
                "warning": 98
            },
            "test_examples": {
                "convention": 14,
                "error": 5,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 36,
                "warning": 22
            },
            "test_modelicaversion": {
                "convention": 8,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 44,
                "warning": 2
            },
            "test_partial_retrofit": {
                "convention": 3,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 10,
                "warning": 0
            },
            "test_simulation_export": {
                "convention": 6,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 11,
                "warning": 7
            },
            "test_tabula_ab": {
                "convention": 18,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 146,
                "warning": 1
            },
            "test_tabula_ab_dk": {
                "convention": 34,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 257,
                "warning": 1
            },
            "test_tabula_mfh": {
                "convention": 40,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 371,
                "warning": 1
            },
            "test_tabula_sfh": {
                "convention": 40,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 396,
                "warning": 1
            },
            "test_tabula_sfh_dk": {
                "convention": 34,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 210,
                "warning": 1
            },
            "test_tabula_th": {
                "convention": 37,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 367,
                "warning": 1
            },
            "test_tabula_th_dk": {
                "convention": 32,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 213,
                "warning": 1
            },
            "test_teaser_json": {
                "convention": 4,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 78,
                "warning": 3
            },
            "test_useconditions": {
                "convention": 23,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 534,
                "statement": 120,
                "warning": 3
            }
        },
        "by_msg": {
            "missing-function-docstring": 217,
            "invalid-name": 38,
            "unspecified-encoding": 4,
            "consider-using-with": 1,
            "line-too-long": 33,
            "too-many-lines": 8,
            "consider-using-from-import": 4,
            "useless-object-inheritance": 15,
            "too-many-instance-attributes": 1,
            "too-many-arguments": 4,
            "too-many-locals": 10,
            "import-outside-toplevel": 77,
            "raise-missing-from": 1,
            "unidiomatic-typecheck": 2,
            "unused-variable": 13,
            "too-many-public-methods": 8,
            "trailing-comma-tuple": 2,
            "missing-module-docstring": 12,
            "pointless-string-statement": 7,
            "too-many-statements": 19,
            "missing-class-docstring": 9,
            "global-variable-not-assigned": 10,
            "not-an-iterable": 5,
            "implicit-str-concat": 1,
            "consider-using-generator": 2,
            "function-redefined": 1,
            "protected-access": 58,
            "redefined-outer-name": 25,
            "reimported": 16,
            "unnecessary-dunder-call": 1,
            "comparison-with-itself": 1,
            "pointless-statement": 3,
            "wrong-import-order": 12,
            "unused-import": 12,
            "useless-import-alias": 3,
            "global-statement": 2,
            "assignment-from-no-return": 5,
            "bare-except": 1,
            "inconsistent-return-statements": 1,
            "too-few-public-methods": 3,
            "superfluous-parens": 15,
            "trailing-newlines": 1,
            "ungrouped-imports": 1,
            "duplicate-code": 533
        },
        "code_type_count": {
            "code": 0,
            "comment": 0,
            "docstring": 0,
            "empty": 0,
            "total": 0
        },
        "dependencies": {
            "mako.util": [
                "teaser"
            ],
            "teaser.logic.utilities": [
                "test_data",
                "teaser.project",
                "test_examples",
                "test_simulation_export",
                "test_useconditions",
                "test_besmod_output"
            ],
            "teaser.data.utilities": [
                "teaser.project",
                "test_useconditions",
                "test_data"
            ],
            "teaser.data.input.teaserjson_input": [
                "teaser.project"
            ],
            "teaser.data.output.teaserjson_output": [
                "teaser.project"
            ],
            "teaser.data.output.aixlib_output": [
                "teaser.project"
            ],
            "teaser.data.output.besmod_output": [
                "teaser.project",
                "test_besmod_output"
            ],
            "teaser.data.output.ibpsa_output": [
                "teaser.project"
            ],
            "teaser.data.dataclass": [
                "teaser.project",
                "test_useconditions",
                "test_data"
            ],
            "teaser.logic.archetypebuildings.tabula.de.singlefamilyhouse": [
                "teaser.project"
            ],
            "teaser.logic.simulation.modelicainfo": [
                "teaser.project"
            ],
            "teaser.logic.retrofit": [
                "teaser.project"
            ],
            "teaser.data.output.reports.model_report": [
                "teaser.project"
            ],
            "teaser.logic.buildingobjects.useconditions": [
                "helptest",
                "test_data"
            ],
            "teaser.logic.buildingobjects.building": [
                "helptest",
                "test_data"
            ],
            "teaser.logic.buildingobjects.buildingphysics.groundfloor": [
                "helptest",
                "test_data"
            ],
            "teaser.logic.buildingobjects.buildingphysics.innerwall": [
                "helptest",
                "test_data"
            ],
            "teaser.logic.buildingobjects.buildingphysics.interzonalwall": [
                "helptest",
                "test_data"
            ],
            "teaser.logic.buildingobjects.buildingphysics.interzonalfloor": [
                "helptest",
                "test_data"
            ],
            "teaser.logic.buildingobjects.buildingphysics.interzonalceiling": [
                "helptest",
                "test_data"
            ],
            "teaser.logic.buildingobjects.buildingphysics.layer": [
                "helptest",
                "test_data"
            ],
            "teaser.logic.buildingobjects.buildingphysics.material": [
                "helptest",
                "test_data"
            ],
            "teaser.logic.buildingobjects.buildingphysics.outerwall": [
                "helptest",
                "test_data"
            ],
            "teaser.logic.buildingobjects.buildingphysics.rooftop": [
                "helptest",
                "test_data"
            ],
            "teaser.logic.buildingobjects.buildingphysics.window": [
                "helptest",
                "test_data"
            ],
            "teaser.logic.buildingobjects.thermalzone": [
                "helptest",
                "test_data"
            ],
            "teaser.project": [
                "test_partial_retrofit",
                "test_tabula_mfh",
                "test_data",
                "test_tabula_sfh_dk",
                "test_tabula_th_dk",
                "test_tabula_sfh",
                "test_tabula_ab",
                "test_examples",
                "test_simulation_export",
                "test_teaser_json",
                "test_useconditions",
                "test_modelicaversion",
                "test_besmod_output",
                "test_tabula_th",
                "test_tabula_ab_dk"
            ],
            "teaser.logic.buildingobjects.calculation.four_element": [
                "test_data"
            ],
            "teaser.logic.buildingobjects.calculation.three_element": [
                "test_data"
            ],
            "teaser.logic.buildingobjects.calculation.two_element": [
                "test_data"
            ],
            "helptest": [
                "test_useconditions",
                "test_data"
            ],
            "pytest": [
                "test_useconditions",
                "test_data"
            ],
            "teaser.examples.verification.verification_VDI_6007_room1": [
                "test_data"
            ],
            "teaser.examples.verification.verification_VDI_6007_room3": [
                "test_data"
            ],
            "teaser.examples.verification.verification_VDI_6007_room8": [
                "test_data"
            ],
            "teaser.logic.archetypebuildings.bmvbs.office": [
                "test_modelicaversion",
                "test_data"
            ],
            "teaser.logic.archetypebuildings.bmvbs.custom.institute4": [
                "test_data"
            ],
            "teaser.logic.archetypebuildings.bmvbs.custom.institute8": [
                "test_data"
            ],
            "teaser.logic.archetypebuildings.bmvbs.custom.institute": [
                "test_data"
            ],
            "teaser.logic.archetypebuildings.bmvbs.singlefamilydwelling": [
                "test_data"
            ],
            "teaser.logic.buildingobjects.calculation.one_element": [
                "test_data"
            ],
            "teaser.logic.buildingobjects.calculation.five_element": [
                "test_data"
            ],
            "teaser.examples.verification.verification_ASHRAE_140_600": [
                "test_data"
            ],
            "teaser.examples.verification.verification_ASHRAE_140_620": [
                "test_data"
            ],
            "teaser.examples.verification.verification_ASHRAE_140_900": [
                "test_data"
            ],
            "teaser.examples.verification.verification_ASHRAE_140_920": [
                "test_data"
            ],
            "teaser.examples.e1_generate_archetype": [
                "test_examples"
            ],
            "teaser.examples.e2_export_aixlib_models": [
                "test_simulation_export",
                "test_examples"
            ],
            "teaser.examples.e3_export_ibpsa_models": [
                "test_examples"
            ],
            "teaser.examples.e4_save": [
                "test_examples"
            ],
            "teaser.examples.e5_load": [
                "test_examples"
            ],
            "teaser.examples.e6_generate_building": [
                "test_teaser_json",
                "test_examples"
            ],
            "teaser.examples.e7_retrofit": [
                "test_examples"
            ],
            "teaser.examples.e8_change_boundary_conditions": [
                "test_examples"
            ],
            "teaser.examples.e11_export_besmod_models": [
                "test_examples"
            ],
            "teaser.logic.buildingobjects.calculation.ibpsa": [
                "test_modelicaversion"
            ],
            "pandas": [
                "test_useconditions"
            ]
        },
        "duplicated_lines": {
            "nb_duplicated_lines": 0,
            "percent_duplicated_lines": 0.0
        },
        "node_count": {
            "function": 3,
            "klass": 16,
            "method": 409,
            "module": 18
        },
        "undocumented": {
            "function": 1,
            "klass": 9,
            "method": 216,
            "module": 12
        },
        "convention": 429,
        "error": 11,
        "fatal": 0,
        "info": 0,
        "refactor": 604,
        "statement": 5378,
        "warning": 153,
        "global_note": 7.692450725176645,
        "nb_duplicated_lines": 4440,
        "percent_duplicated_lines": 27.458256029684602
    }
}
