************* Module /builds/EBC/EBC_all/github_ci/TEASER/pylintrc
pylintrc:1:0: E0015: Unrecognized option found: no-space-check (unrecognized-option)
pylintrc:1:0: R0022: Useless option value for '--disable', 'print-statement' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'parameter-unpacking' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'unpacking-in-except' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'old-raise-syntax' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'backtick' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'import-star-module-level' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'apply-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'basestring-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'buffer-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'cmp-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'coerce-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'execfile-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'file-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'long-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'raw_input-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'reduce-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'standarderror-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'unicode-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'xrange-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'coerce-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'delslice-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'getslice-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'setslice-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'no-absolute-import' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'old-division' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'dict-iter-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'dict-view-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'next-method-called' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'metaclass-assignment' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'indexing-exception' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'raising-string' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'reload-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'oct-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'hex-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'nonzero-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'cmp-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'input-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'round-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'intern-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'unichr-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'map-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'zip-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'range-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'filter-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'using-cmp-argument' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'div-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'idiv-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'rdiv-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'exception-message-attribute' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'invalid-str-codec' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'sys-max-int' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'bad-python3-import' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'deprecated-string-function' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'deprecated-str-translate-call' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'deprecated-itertools-function' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'deprecated-types-field' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'next-method-defined' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'dict-items-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'dict-keys-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'dict-values-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: W0012: Unknown option value for '--disable', expected a valid pylint message and got 'long-suffix' (unknown-option-value)
pylintrc:1:0: W0012: Unknown option value for '--disable', expected a valid pylint message and got 'old-ne-operator' (unknown-option-value)
pylintrc:1:0: W0012: Unknown option value for '--disable', expected a valid pylint message and got 'old-octal-literal' (unknown-option-value)
pylintrc:1:0: W0012: Unknown option value for '--disable', expected a valid pylint message and got 'non-ascii-bytes-literal' (unknown-option-value)
pylintrc:1:0: W0012: Unknown option value for '--disable', expected a valid pylint message and got 'locally-enabled' (unknown-option-value)
pylintrc:1:0: W0012: Unknown option value for '--disable', expected a valid pylint message and got 'eq-without-hash' (unknown-option-value)
************* Module teaser
teaser/__init__.py:18:4: C0116: Missing function or method docstring (missing-function-docstring)
teaser/__init__.py:19:8: C0103: Variable name "fp" doesn't conform to snake_case naming style (invalid-name)
teaser/__init__.py:19:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
teaser/__init__.py:19:13: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
************* Module teaser.project
teaser/project.py:332:0: C0301: Line too long (104/100) (line-too-long)
teaser/project.py:522:0: C0301: Line too long (104/100) (line-too-long)
teaser/project.py:1:0: C0302: Too many lines in module (1258/1000) (too-many-lines)
teaser/project.py:6:0: R0402: Use 'from teaser.logic import utilities' instead (consider-using-from-import)
teaser/project.py:9:0: R0402: Use 'from teaser.data.output import aixlib_output' instead (consider-using-from-import)
teaser/project.py:10:0: R0402: Use 'from teaser.data.output import ibpsa_output' instead (consider-using-from-import)
teaser/project.py:48:0: R0205: Class 'Project' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
teaser/project.py:48:0: R0902: Too many instance attributes (16/7) (too-many-instance-attributes)
teaser/project.py:239:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
teaser/project.py:244:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
teaser/project.py:269:4: R0913: Too many arguments (13/5) (too-many-arguments)
teaser/project.py:269:4: R0914: Too many local variables (16/15) (too-many-locals)
teaser/project.py:357:0: W1404: Implicit string concatenation found in assignment (implicit-str-concat)
teaser/project.py:452:4: R0913: Too many arguments (17/5) (too-many-arguments)
teaser/project.py:452:4: R0914: Too many local variables (23/15) (too-many-locals)
teaser/project.py:605:12: W0105: String statement has no effect (pointless-string-statement)
teaser/project.py:606:12: W0105: String statement has no effect (pointless-string-statement)
teaser/project.py:614:12: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
teaser/project.py:687:12: W0105: String statement has no effect (pointless-string-statement)
teaser/project.py:688:12: W0105: String statement has no effect (pointless-string-statement)
teaser/project.py:695:12: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
teaser/project.py:452:4: R0911: Too many return statements (8/6) (too-many-return-statements)
teaser/project.py:452:4: R0912: Too many branches (32/12) (too-many-branches)
teaser/project.py:452:4: R0915: Too many statements (85/50) (too-many-statements)
teaser/project.py:1028:8: C0103: Argument name "corG" doesn't conform to snake_case naming style (invalid-name)
teaser/project.py:1024:4: R0913: Too many arguments (6/5) (too-many-arguments)
teaser/project.py:1173:4: C0116: Missing function or method docstring (missing-function-docstring)
teaser/project.py:1193:4: C0116: Missing function or method docstring (missing-function-docstring)
teaser/project.py:1209:4: C0116: Missing function or method docstring (missing-function-docstring)
teaser/project.py:1225:4: C0116: Missing function or method docstring (missing-function-docstring)
teaser/project.py:1241:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module helptest
tests/helptest.py:1:0: C0114: Missing module docstring (missing-module-docstring)
tests/helptest.py:13:0: R0914: Too many local variables (26/15) (too-many-locals)
tests/helptest.py:19:4: W0105: String statement has no effect (pointless-string-statement)
tests/helptest.py:28:4: W0105: String statement has no effect (pointless-string-statement)
tests/helptest.py:31:4: C0103: Variable name "tz" doesn't conform to snake_case naming style (invalid-name)
tests/helptest.py:78:8: W0105: String statement has no effect (pointless-string-statement)
tests/helptest.py:117:8: W0105: String statement has no effect (pointless-string-statement)
tests/helptest.py:13:0: R0915: Too many statements (157/50) (too-many-statements)
************* Module test_data
tests/test_data.py:1:0: C0302: Too many lines in module (3158/1000) (too-many-lines)
tests/test_data.py:12:0: C0414: Import alias does not rename original package (useless-import-alias)
tests/test_data.py:17:0: C0103: Class name "Test_teaser" doesn't conform to PascalCase naming style (invalid-name)
tests/test_data.py:17:0: R0205: Class 'Test_teaser' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/test_data.py:20:4: W0602: Using global for 'prj' but no assignment is done (global-variable-not-assigned)
tests/test_data.py:24:8: C0415: Import outside toplevel (teaser.examples.verification.verification_VDI_6007_room1) (import-outside-toplevel)
tests/test_data.py:50:8: C0415: Import outside toplevel (teaser.examples.verification.verification_VDI_6007_room3) (import-outside-toplevel)
tests/test_data.py:76:8: C0415: Import outside toplevel (teaser.examples.verification.verification_VDI_6007_room8) (import-outside-toplevel)
tests/test_data.py:142:8: C0415: Import outside toplevel (teaser.logic.archetypebuildings.bmvbs.office.Office) (import-outside-toplevel)
tests/test_data.py:162:20: E1133: Non-iterable value test_office.thermal_zones is used in an iterating context (not-an-iterable)
tests/test_data.py:137:4: R0915: Too many statements (67/50) (too-many-statements)
tests/test_data.py:278:8: C0415: Import outside toplevel (teaser.logic.archetypebuildings.bmvbs.custom.institute4.Institute4) (import-outside-toplevel)
tests/test_data.py:301:20: E1133: Non-iterable value test_institute4.thermal_zones is used in an iterating context (not-an-iterable)
tests/test_data.py:335:8: C0415: Import outside toplevel (teaser.logic.archetypebuildings.bmvbs.custom.institute8.Institute8) (import-outside-toplevel)
tests/test_data.py:358:20: E1133: Non-iterable value test_institute8.thermal_zones is used in an iterating context (not-an-iterable)
tests/test_data.py:392:8: C0415: Import outside toplevel (teaser.logic.archetypebuildings.bmvbs.custom.institute.Institute) (import-outside-toplevel)
tests/test_data.py:415:20: E1133: Non-iterable value test_institute.thermal_zones is used in an iterating context (not-an-iterable)
tests/test_data.py:449:8: C0415: Import outside toplevel (teaser.logic.archetypebuildings.bmvbs.singlefamilydwelling.SingleFamilyDwelling) (import-outside-toplevel)
tests/test_data.py:471:20: E1133: Non-iterable value test_residential.thermal_zones is used in an iterating context (not-an-iterable)
tests/test_data.py:444:4: R0915: Too many statements (57/50) (too-many-statements)
tests/test_data.py:588:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
tests/test_data.py:592:18: R1728: Consider using a generator instead 'sum(tz.area for tz in prj.buildings[-1].thermal_zones)' (consider-using-generator)
tests/test_data.py:604:18: R1728: Consider using a generator instead 'sum(tz.area for tz in prj.buildings[-1].thermal_zones)' (consider-using-generator)
tests/test_data.py:605:12: C0103: Variable name "tz" doesn't conform to snake_case naming style (invalid-name)
tests/test_data.py:695:4: R0915: Too many statements (76/50) (too-many-statements)
tests/test_data.py:1228:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.calculation.one_element.OneElement) (import-outside-toplevel)
tests/test_data.py:1248:8: W0212: Access to a protected member _sum_outer_wall_elements of a client class (protected-access)
tests/test_data.py:1249:8: W0212: Access to a protected member _sum_window_elements of a client class (protected-access)
tests/test_data.py:1284:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.calculation.one_element.OneElement) (import-outside-toplevel)
tests/test_data.py:1313:23: W0212: Access to a protected member _calc_parallel_connection of a client class (protected-access)
tests/test_data.py:1324:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.calculation.two_element.TwoElement) (import-outside-toplevel)
tests/test_data.py:1344:8: W0212: Access to a protected member _sum_outer_wall_elements of a client class (protected-access)
tests/test_data.py:1345:8: W0212: Access to a protected member _sum_inner_wall_elements of a client class (protected-access)
tests/test_data.py:1346:8: W0212: Access to a protected member _sum_window_elements of a client class (protected-access)
tests/test_data.py:1391:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.calculation.two_element.TwoElement) (import-outside-toplevel)
tests/test_data.py:1422:23: W0212: Access to a protected member _calc_parallel_connection of a client class (protected-access)
tests/test_data.py:1432:23: W0212: Access to a protected member _calc_parallel_connection of a client class (protected-access)
tests/test_data.py:1443:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.calculation.three_element.ThreeElement) (import-outside-toplevel)
tests/test_data.py:1463:8: W0212: Access to a protected member _sum_outer_wall_elements of a client class (protected-access)
tests/test_data.py:1464:8: W0212: Access to a protected member _sum_ground_floor_elements of a client class (protected-access)
tests/test_data.py:1465:8: W0212: Access to a protected member _sum_inner_wall_elements of a client class (protected-access)
tests/test_data.py:1466:8: W0212: Access to a protected member _sum_window_elements of a client class (protected-access)
tests/test_data.py:1438:4: R0915: Too many statements (55/50) (too-many-statements)
tests/test_data.py:1521:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.calculation.three_element.ThreeElement) (import-outside-toplevel)
tests/test_data.py:1547:23: W0212: Access to a protected member _calc_parallel_connection of a client class (protected-access)
tests/test_data.py:1557:23: W0212: Access to a protected member _calc_parallel_connection of a client class (protected-access)
tests/test_data.py:1568:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.calculation.four_element.FourElement) (import-outside-toplevel)
tests/test_data.py:1588:8: W0212: Access to a protected member _sum_outer_wall_elements of a client class (protected-access)
tests/test_data.py:1589:8: W0212: Access to a protected member _sum_ground_floor_elements of a client class (protected-access)
tests/test_data.py:1590:8: W0212: Access to a protected member _sum_rooftop_elements of a client class (protected-access)
tests/test_data.py:1591:8: W0212: Access to a protected member _sum_inner_wall_elements of a client class (protected-access)
tests/test_data.py:1592:8: W0212: Access to a protected member _sum_window_elements of a client class (protected-access)
tests/test_data.py:1563:4: R0915: Too many statements (70/50) (too-many-statements)
tests/test_data.py:1663:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.calculation.four_element.FourElement) (import-outside-toplevel)
tests/test_data.py:1687:23: W0212: Access to a protected member _calc_parallel_connection of a client class (protected-access)
tests/test_data.py:1697:23: W0212: Access to a protected member _calc_parallel_connection of a client class (protected-access)
tests/test_data.py:2052:4: R0915: Too many statements (52/50) (too-many-statements)
tests/test_data.py:2110:4: R0915: Too many statements (72/50) (too-many-statements)
tests/test_data.py:2217:8: C0103: Variable name "outerWalls" doesn't conform to snake_case naming style (invalid-name)
tests/test_data.py:2240:8: W0621: Redefining name 'os' from outer scope (line 10) (redefined-outer-name)
tests/test_data.py:2240:8: W0404: Reimport 'os' (imported line 10) (reimported)
tests/test_data.py:2240:8: C0415: Import outside toplevel (os) (import-outside-toplevel)
tests/test_data.py:2253:8: W0621: Redefining name 'os' from outer scope (line 10) (redefined-outer-name)
tests/test_data.py:2253:8: W0404: Reimport 'os' (imported line 10) (reimported)
tests/test_data.py:2253:8: C0415: Import outside toplevel (os) (import-outside-toplevel)
tests/test_data.py:2335:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.material.Material) (import-outside-toplevel)
tests/test_data.py:2342:8: C0415: Import outside toplevel (teaser.data.dataclass.DataClass) (import-outside-toplevel)
tests/test_data.py:2352:8: W0104: Statement seems to have no effect (pointless-statement)
tests/test_data.py:2353:8: W0104: Statement seems to have no effect (pointless-statement)
tests/test_data.py:2354:8: W0104: Statement seems to have no effect (pointless-statement)
tests/test_data.py:2361:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.building.Building) (import-outside-toplevel)
tests/test_data.py:2362:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.thermalzone.ThermalZone) (import-outside-toplevel)
tests/test_data.py:2363:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.useconditions.UseConditions) (import-outside-toplevel)
tests/test_data.py:2367:8: C0103: Variable name "tz" doesn't conform to snake_case naming style (invalid-name)
tests/test_data.py:2407:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.building.Building) (import-outside-toplevel)
tests/test_data.py:2419:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.thermalzone.ThermalZone) (import-outside-toplevel)
tests/test_data.py:2421:8: C0103: Variable name "tz" doesn't conform to snake_case naming style (invalid-name)
tests/test_data.py:2427:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.useconditions.UseConditions) (import-outside-toplevel)
tests/test_data.py:2432:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.innerwall.InnerWall) (import-outside-toplevel)
tests/test_data.py:2402:4: R0915: Too many statements (65/50) (too-many-statements)
tests/test_data.py:2502:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.building.Building) (import-outside-toplevel)
tests/test_data.py:2512:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.thermalzone.ThermalZone) (import-outside-toplevel)
tests/test_data.py:2514:8: C0103: Variable name "tz" doesn't conform to snake_case naming style (invalid-name)
tests/test_data.py:2520:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.useconditions.UseConditions) (import-outside-toplevel)
tests/test_data.py:2525:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.outerwall.OuterWall) (import-outside-toplevel)
tests/test_data.py:2497:4: R0915: Too many statements (86/50) (too-many-statements)
tests/test_data.py:2623:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.building.Building) (import-outside-toplevel)
tests/test_data.py:2633:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.thermalzone.ThermalZone) (import-outside-toplevel)
tests/test_data.py:2635:8: C0103: Variable name "tz" doesn't conform to snake_case naming style (invalid-name)
tests/test_data.py:2641:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.useconditions.UseConditions) (import-outside-toplevel)
tests/test_data.py:2646:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.window.Window) (import-outside-toplevel)
tests/test_data.py:2647:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.layer.Layer) (import-outside-toplevel)
tests/test_data.py:2648:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.material.Material) (import-outside-toplevel)
tests/test_data.py:2618:4: R0915: Too many statements (102/50) (too-many-statements)
tests/test_data.py:2754:4: R0914: Too many local variables (19/15) (too-many-locals)
tests/test_data.py:2759:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.building.Building) (import-outside-toplevel)
tests/test_data.py:2769:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.thermalzone.ThermalZone) (import-outside-toplevel)
tests/test_data.py:2771:8: C0103: Variable name "tz" doesn't conform to snake_case naming style (invalid-name)
tests/test_data.py:2777:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.useconditions.UseConditions) (import-outside-toplevel)
tests/test_data.py:2782:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.rooftop.Rooftop) (import-outside-toplevel)
tests/test_data.py:2804:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.layer.Layer) (import-outside-toplevel)
tests/test_data.py:2809:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.material.Material) (import-outside-toplevel)
tests/test_data.py:2754:4: R0915: Too many statements (107/50) (too-many-statements)
tests/test_data.py:2897:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.building.Building) (import-outside-toplevel)
tests/test_data.py:2907:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.thermalzone.ThermalZone) (import-outside-toplevel)
tests/test_data.py:2909:8: C0103: Variable name "tz" doesn't conform to snake_case naming style (invalid-name)
tests/test_data.py:2915:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.useconditions.UseConditions) (import-outside-toplevel)
tests/test_data.py:2920:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.groundfloor.GroundFloor) (import-outside-toplevel)
tests/test_data.py:2892:4: R0915: Too many statements (66/50) (too-many-statements)
tests/test_data.py:2983:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_data.py:2985:8: C0415: Import outside toplevel (teaser.examples.verification.verification_ASHRAE_140_600.main) (import-outside-toplevel)
tests/test_data.py:2994:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_data.py:2996:8: C0415: Import outside toplevel (teaser.examples.verification.verification_ASHRAE_140_620.main) (import-outside-toplevel)
tests/test_data.py:3005:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_data.py:3007:8: C0415: Import outside toplevel (teaser.examples.verification.verification_ASHRAE_140_900.main) (import-outside-toplevel)
tests/test_data.py:3016:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_data.py:3018:8: C0415: Import outside toplevel (teaser.examples.verification.verification_ASHRAE_140_920.main) (import-outside-toplevel)
tests/test_data.py:3134:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_data.py:17:0: R0904: Too many public methods (73/20) (too-many-public-methods)
tests/test_data.py:9:0: C0411: standard import "import math" should be placed before "from teaser.logic import utilities" (wrong-import-order)
tests/test_data.py:10:0: C0411: standard import "import os" should be placed before "from teaser.logic import utilities" (wrong-import-order)
tests/test_data.py:11:0: C0411: third party import "import helptest" should be placed before "from teaser.logic import utilities" (wrong-import-order)
tests/test_data.py:12:0: C0411: standard import "import warnings as warnings" should be placed before "import helptest" (wrong-import-order)
tests/test_data.py:12:0: W0611: Unused warnings imported as warnings (unused-import)
************* Module test_examples
tests/test_examples.py:11:0: C0414: Import alias does not rename original package (useless-import-alias)
tests/test_examples.py:16:0: C0103: Class name "Test_examples" doesn't conform to PascalCase naming style (invalid-name)
tests/test_examples.py:16:0: R0205: Class 'Test_examples' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/test_examples.py:19:4: W0603: Using the global statement (global-statement)
tests/test_examples.py:25:8: W0621: Redefining name 'prj' from outer scope (line 13) (redefined-outer-name)
tests/test_examples.py:23:8: C0415: Import outside toplevel (teaser.examples.e1_generate_archetype) (import-outside-toplevel)
tests/test_examples.py:33:8: W0621: Redefining name 'prj' from outer scope (line 13) (redefined-outer-name)
tests/test_examples.py:31:8: C0415: Import outside toplevel (teaser.examples.e2_export_aixlib_models) (import-outside-toplevel)
tests/test_examples.py:33:8: W0612: Unused variable 'prj' (unused-variable)
tests/test_examples.py:39:8: W0621: Redefining name 'prj' from outer scope (line 13) (redefined-outer-name)
tests/test_examples.py:37:8: C0415: Import outside toplevel (teaser.examples.e3_export_ibpsa_models) (import-outside-toplevel)
tests/test_examples.py:39:8: E1111: Assigning result of a function call, where the function has no return (assignment-from-no-return)
tests/test_examples.py:39:8: W0612: Unused variable 'prj' (unused-variable)
tests/test_examples.py:45:8: W0621: Redefining name 'prj' from outer scope (line 13) (redefined-outer-name)
tests/test_examples.py:43:8: C0415: Import outside toplevel (teaser.examples.e4_save) (import-outside-toplevel)
tests/test_examples.py:45:8: E1111: Assigning result of a function call, where the function has no return (assignment-from-no-return)
tests/test_examples.py:45:8: W0612: Unused variable 'prj' (unused-variable)
tests/test_examples.py:51:8: W0621: Redefining name 'prj' from outer scope (line 13) (redefined-outer-name)
tests/test_examples.py:49:8: C0415: Import outside toplevel (teaser.examples.e5_load) (import-outside-toplevel)
tests/test_examples.py:51:8: E1111: Assigning result of a function call, where the function has no return (assignment-from-no-return)
tests/test_examples.py:51:8: W0612: Unused variable 'prj' (unused-variable)
tests/test_examples.py:57:8: W0621: Redefining name 'prj' from outer scope (line 13) (redefined-outer-name)
tests/test_examples.py:55:8: C0415: Import outside toplevel (teaser.examples.e6_generate_building) (import-outside-toplevel)
tests/test_examples.py:57:8: E1111: Assigning result of a function call, where the function has no return (assignment-from-no-return)
tests/test_examples.py:57:8: W0612: Unused variable 'prj' (unused-variable)
tests/test_examples.py:63:8: W0621: Redefining name 'prj' from outer scope (line 13) (redefined-outer-name)
tests/test_examples.py:61:8: C0415: Import outside toplevel (teaser.examples.e7_retrofit) (import-outside-toplevel)
tests/test_examples.py:63:8: E1111: Assigning result of a function call, where the function has no return (assignment-from-no-return)
tests/test_examples.py:63:8: W0612: Unused variable 'prj' (unused-variable)
tests/test_examples.py:69:8: W0621: Redefining name 'prj' from outer scope (line 13) (redefined-outer-name)
tests/test_examples.py:67:8: C0415: Import outside toplevel (teaser.examples.e8_change_boundary_conditions) (import-outside-toplevel)
tests/test_examples.py:69:8: E1111: Assigning result of a function call, where the function has no return (assignment-from-no-return)
tests/test_examples.py:69:8: W0612: Unused variable 'prj' (unused-variable)
tests/test_examples.py:9:0: C0411: standard import "import math" should be placed before "from teaser.logic import utilities" (wrong-import-order)
tests/test_examples.py:10:0: C0411: standard import "import os" should be placed before "from teaser.logic import utilities" (wrong-import-order)
tests/test_examples.py:11:0: C0411: standard import "import warnings as warnings" should be placed before "from teaser.logic import utilities" (wrong-import-order)
tests/test_examples.py:7:0: W0611: Unused utilities imported from teaser.logic (unused-import)
tests/test_examples.py:9:0: W0611: Unused import math (unused-import)
tests/test_examples.py:10:0: W0611: Unused import os (unused-import)
tests/test_examples.py:11:0: W0611: Unused warnings imported as warnings (unused-import)
************* Module test_modelicaversion
tests/test_modelicaversion.py:1:0: C0114: Missing module docstring (missing-module-docstring)
tests/test_modelicaversion.py:2:0: C0414: Import alias does not rename original package (useless-import-alias)
tests/test_modelicaversion.py:8:0: R0205: Class 'TestModelicaVersions' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/test_modelicaversion.py:10:4: W0602: Using global for 'prj' but no assignment is done (global-variable-not-assigned)
tests/test_modelicaversion.py:12:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_modelicaversion.py:14:12: C0415: Import outside toplevel (github.Github) (import-outside-toplevel)
tests/test_modelicaversion.py:18:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.calculation.ibpsa.IBPSA) (import-outside-toplevel)
tests/test_modelicaversion.py:19:8: C0415: Import outside toplevel (teaser.logic.archetypebuildings.bmvbs.office.Office) (import-outside-toplevel)
tests/test_modelicaversion.py:33:8: W0702: No exception type(s) specified (bare-except)
tests/test_modelicaversion.py:12:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
tests/test_modelicaversion.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
tests/test_modelicaversion.py:2:0: C0411: standard import "import warnings as warnings" should be placed before "from teaser.project import Project" (wrong-import-order)
tests/test_modelicaversion.py:3:0: C0411: standard import "import os" should be placed before "from teaser.project import Project" (wrong-import-order)
************* Module test_simulation_export
tests/test_simulation_export.py:11:0: C0414: Import alias does not rename original package (useless-import-alias)
tests/test_simulation_export.py:16:0: C0103: Class name "Simulation_export" doesn't conform to PascalCase naming style (invalid-name)
tests/test_simulation_export.py:16:0: R0205: Class 'Simulation_export' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/test_simulation_export.py:19:4: W0603: Using the global statement (global-statement)
tests/test_simulation_export.py:25:8: W0621: Redefining name 'prj' from outer scope (line 13) (redefined-outer-name)
tests/test_simulation_export.py:23:8: C0415: Import outside toplevel (teaser.examples.e2_export_aixlib_models) (import-outside-toplevel)
tests/test_simulation_export.py:25:8: W0612: Unused variable 'prj' (unused-variable)
tests/test_simulation_export.py:16:0: R0903: Too few public methods (1/2) (too-few-public-methods)
tests/test_simulation_export.py:9:0: C0411: standard import "import math" should be placed before "from teaser.logic import utilities" (wrong-import-order)
tests/test_simulation_export.py:10:0: C0411: standard import "import os" should be placed before "from teaser.logic import utilities" (wrong-import-order)
tests/test_simulation_export.py:11:0: C0411: standard import "import warnings as warnings" should be placed before "from teaser.logic import utilities" (wrong-import-order)
tests/test_simulation_export.py:7:0: W0611: Unused utilities imported from teaser.logic (unused-import)
tests/test_simulation_export.py:9:0: W0611: Unused import math (unused-import)
tests/test_simulation_export.py:10:0: W0611: Unused import os (unused-import)
tests/test_simulation_export.py:11:0: W0611: Unused warnings imported as warnings (unused-import)
************* Module test_tabula_ab
tests/test_tabula_ab.py:1:0: C0114: Missing module docstring (missing-module-docstring)
tests/test_tabula_ab.py:5:0: C0115: Missing class docstring (missing-class-docstring)
tests/test_tabula_ab.py:5:0: C0103: Class name "Test_tabula_ab" doesn't conform to PascalCase naming style (invalid-name)
tests/test_tabula_ab.py:5:0: R0205: Class 'Test_tabula_ab' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/test_tabula_ab.py:6:4: W0602: Using global for 'prj' but no assignment is done (global-variable-not-assigned)
tests/test_tabula_ab.py:156:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:192:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:227:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:262:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:297:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:332:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:369:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:405:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:441:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:477:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:512:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:549:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:586:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:623:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:659:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module test_tabula_ab_dk
tests/test_tabula_ab_dk.py:272:0: C0301: Line too long (168/100) (line-too-long)
tests/test_tabula_ab_dk.py:622:0: C0301: Line too long (129/100) (line-too-long)
tests/test_tabula_ab_dk.py:927:0: C0301: Line too long (128/100) (line-too-long)
tests/test_tabula_ab_dk.py:1:0: C0302: Too many lines in module (1235/1000) (too-many-lines)
tests/test_tabula_ab_dk.py:1:0: C0114: Missing module docstring (missing-module-docstring)
tests/test_tabula_ab_dk.py:5:0: C0115: Missing class docstring (missing-class-docstring)
tests/test_tabula_ab_dk.py:5:0: C0103: Class name "Test_tabula_ab" doesn't conform to PascalCase naming style (invalid-name)
tests/test_tabula_ab_dk.py:5:0: R0205: Class 'Test_tabula_ab' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/test_tabula_ab_dk.py:6:4: W0602: Using global for 'prj' but no assignment is done (global-variable-not-assigned)
tests/test_tabula_ab_dk.py:275:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:325:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:360:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:395:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:430:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:470:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:517:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:552:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:587:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:626:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:676:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:711:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:746:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:781:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:823:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:860:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:886:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:907:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:931:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:981:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:1016:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:1051:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:1086:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:1128:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:1165:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:1191:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:1217:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:5:0: R0904: Too many public methods (36/20) (too-many-public-methods)
************* Module test_tabula_mfh
tests/test_tabula_mfh.py:1:0: C0302: Too many lines in module (1651/1000) (too-many-lines)
tests/test_tabula_mfh.py:1:0: C0114: Missing module docstring (missing-module-docstring)
tests/test_tabula_mfh.py:6:0: C0115: Missing class docstring (missing-class-docstring)
tests/test_tabula_mfh.py:6:0: C0103: Class name "Test_tabula_mfh" doesn't conform to PascalCase naming style (invalid-name)
tests/test_tabula_mfh.py:6:0: R0205: Class 'Test_tabula_mfh' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/test_tabula_mfh.py:7:4: W0602: Using global for 'prj' but no assignment is done (global-variable-not-assigned)
tests/test_tabula_mfh.py:330:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:372:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:408:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:456:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:491:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:526:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:561:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:596:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:631:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:666:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:701:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:736:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:771:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:814:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:850:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:897:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:932:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:967:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1002:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1037:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1072:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1107:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1142:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1177:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1212:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1255:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1291:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1338:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1373:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1408:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1443:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1478:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1513:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1548:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1583:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1618:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:6:0: R0904: Too many public methods (47/20) (too-many-public-methods)
************* Module test_tabula_sfh
tests/test_tabula_sfh.py:1:0: C0302: Too many lines in module (1725/1000) (too-many-lines)
tests/test_tabula_sfh.py:1:0: C0114: Missing module docstring (missing-module-docstring)
tests/test_tabula_sfh.py:6:0: C0115: Missing class docstring (missing-class-docstring)
tests/test_tabula_sfh.py:6:0: C0103: Class name "Test_tabula_sfh" doesn't conform to PascalCase naming style (invalid-name)
tests/test_tabula_sfh.py:6:0: R0205: Class 'Test_tabula_sfh' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/test_tabula_sfh.py:7:4: W0602: Using global for 'prj' but no assignment is done (global-variable-not-assigned)
tests/test_tabula_sfh.py:330:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:366:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:409:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:445:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:486:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:526:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:567:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:602:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:637:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:672:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:707:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:742:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:777:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:814:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:855:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:890:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:930:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:970:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1007:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1042:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1077:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1112:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1147:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1182:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1217:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1254:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1294:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1330:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1371:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1411:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1451:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1486:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1521:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1556:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1591:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1626:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:6:0: R0904: Too many public methods (48/20) (too-many-public-methods)
************* Module test_tabula_sfh_dk
tests/test_tabula_sfh_dk.py:289:0: C0301: Line too long (145/100) (line-too-long)
tests/test_tabula_sfh_dk.py:290:0: C0301: Line too long (146/100) (line-too-long)
tests/test_tabula_sfh_dk.py:291:0: C0301: Line too long (153/100) (line-too-long)
tests/test_tabula_sfh_dk.py:637:0: C0301: Line too long (159/100) (line-too-long)
tests/test_tabula_sfh_dk.py:638:0: C0301: Line too long (160/100) (line-too-long)
tests/test_tabula_sfh_dk.py:639:0: C0301: Line too long (162/100) (line-too-long)
tests/test_tabula_sfh_dk.py:907:0: C0301: Line too long (155/100) (line-too-long)
tests/test_tabula_sfh_dk.py:1:0: C0302: Too many lines in module (1282/1000) (too-many-lines)
tests/test_tabula_sfh_dk.py:1:0: C0114: Missing module docstring (missing-module-docstring)
tests/test_tabula_sfh_dk.py:6:0: C0115: Missing class docstring (missing-class-docstring)
tests/test_tabula_sfh_dk.py:6:0: C0103: Class name "Test_tabula_sfh_dk" doesn't conform to PascalCase naming style (invalid-name)
tests/test_tabula_sfh_dk.py:6:0: R0205: Class 'Test_tabula_sfh_dk' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/test_tabula_sfh_dk.py:7:4: W0602: Using global for 'prj' but no assignment is done (global-variable-not-assigned)
tests/test_tabula_sfh_dk.py:294:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:331:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:368:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:405:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:447:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:484:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:521:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:563:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:601:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:643:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:680:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:717:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:754:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:791:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:833:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:871:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:910:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:947:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:989:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:1026:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:1063:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:1105:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:1143:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:6:0: R0904: Too many public methods (32/20) (too-many-public-methods)
************* Module test_tabula_th
tests/test_tabula_th.py:1:0: C0302: Too many lines in module (1549/1000) (too-many-lines)
tests/test_tabula_th.py:1:0: C0114: Missing module docstring (missing-module-docstring)
tests/test_tabula_th.py:5:0: C0115: Missing class docstring (missing-class-docstring)
tests/test_tabula_th.py:5:0: C0103: Class name "Test_tabula_th" doesn't conform to PascalCase naming style (invalid-name)
tests/test_tabula_th.py:5:0: R0205: Class 'Test_tabula_th' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/test_tabula_th.py:6:4: W0602: Using global for 'prj' but no assignment is done (global-variable-not-assigned)
tests/test_tabula_th.py:301:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:337:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:372:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:407:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:442:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:477:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:512:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:547:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:587:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:622:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:666:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:710:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:747:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:783:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:819:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:855:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:890:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:926:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:962:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1003:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1039:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1084:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1129:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1166:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1203:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1240:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1276:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1312:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1348:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1384:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1425:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1461:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1506:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:5:0: R0904: Too many public methods (43/20) (too-many-public-methods)
************* Module test_tabula_th_dk
tests/test_tabula_th_dk.py:272:0: C0301: Line too long (168/100) (line-too-long)
tests/test_tabula_th_dk.py:612:0: C0301: Line too long (142/100) (line-too-long)
tests/test_tabula_th_dk.py:889:0: C0301: Line too long (132/100) (line-too-long)
tests/test_tabula_th_dk.py:1:0: C0302: Too many lines in module (1170/1000) (too-many-lines)
tests/test_tabula_th_dk.py:1:0: C0114: Missing module docstring (missing-module-docstring)
tests/test_tabula_th_dk.py:5:0: C0115: Missing class docstring (missing-class-docstring)
tests/test_tabula_th_dk.py:5:0: C0103: Class name "Test_tabula_th_dk" doesn't conform to PascalCase naming style (invalid-name)
tests/test_tabula_th_dk.py:5:0: R0205: Class 'Test_tabula_th_dk' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/test_tabula_th_dk.py:6:4: W0602: Using global for 'prj' but no assignment is done (global-variable-not-assigned)
tests/test_tabula_th_dk.py:275:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:323:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:358:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:394:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:429:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:464:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:499:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:534:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:577:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:615:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:663:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:698:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:734:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:769:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:804:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:839:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:874:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:893:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:941:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:976:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:1012:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:1047:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:1082:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:1117:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:1152:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:5:0: R0904: Too many public methods (34/20) (too-many-public-methods)
************* Module test_useconditions
tests/test_useconditions.py:11:0: C0103: Class name "Test_useconditions" doesn't conform to PascalCase naming style (invalid-name)
tests/test_useconditions.py:11:0: R0205: Class 'Test_useconditions' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/test_useconditions.py:14:4: W0602: Using global for 'prj' but no assignment is done (global-variable-not-assigned)
tests/test_useconditions.py:131:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_useconditions.py:138:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_useconditions.py:4:0: C0411: standard import "import os" should be placed before "from teaser.logic import utilities" (wrong-import-order)
tests/test_useconditions.py:5:0: C0411: third party import "import helptest" should be placed before "from teaser.logic import utilities" (wrong-import-order)
tests/test_useconditions.py:6:0: C0411: third party import "import pytest" should be placed before "from teaser.logic import utilities" (wrong-import-order)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[553:589]
==test_tabula_th:[1170:1206]
            name="ResidentialBuilding",
            year_of_construction=1947,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.1 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.21 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_th_1957(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1489:1523]
==test_tabula_th:[1352:1387]
            name="ResidentialBuilding",
            year_of_construction=1993,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.11 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.19 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_2001(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1454:1488]
==test_tabula_th:[1316:1351]
            name="ResidentialBuilding",
            year_of_construction=1982,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.20 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_1994(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1010:1044]
==test_tabula_th:[894:929]
            name="ResidentialBuilding",
            year_of_construction=1982,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.41 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.21 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.26 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_th_1994(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1411:1445]
==test_tabula_th:[1280:1315]
            name="ResidentialBuilding",
            year_of_construction=1977,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.21 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_th_1983(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[970:1004]
==test_tabula_th:[859:893]
            name="ResidentialBuilding",
            year_of_construction=1977,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.19 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.22 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.28 - 0.34)), 1)
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_th_1983(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1551:1585]
==test_tabula_sfh:[1559:1593]
            name="ResidentialBuilding",
            year_of_construction=2008,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.17 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_mfh_2015(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[627:662]
==test_tabula_th:[1244:1279]
            name="ResidentialBuilding",
            year_of_construction=1967,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.23 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_ab_1978(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[445:480]
==test_tabula_th:[823:858]
            name="ResidentialBuilding",
            year_of_construction=1967,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.19 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.23 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.31 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_ab_1978(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[409:444]
==test_tabula_mfh:[900:934]
            name="ResidentialBuilding",
            year_of_construction=1956,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.23 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.23 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.33 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_1968(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[663:693]
==test_tabula_mfh:[1411:1443]
            name="ResidentialBuilding",
            year_of_construction=1977,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.21 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1) (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[570:594]
==test_tabula_th:[480:504]
            name="ResidentialBuilding",
            year_of_construction=1982,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.5 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.65 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[529:553]
==test_tabula_th:[445:469]
            name="ResidentialBuilding",
            year_of_construction=1977,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.51 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.0 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.77 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[265:289]
==test_tabula_th:[410:434]
            name="ResidentialBuilding",
            year_of_construction=1967,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.51 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 1.08 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1042:1069]
==test_tabula_sfh:[1152:1179]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.16 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1309:1332]
==test_tabula_th:[1182:1206]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.21 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_1957(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[424:447]
==test_tabula_th:[351:374]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.7 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.77 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_sfh_1957(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[715:738]
==test_tabula_sfh:[721:744]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.28 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.35 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.8 - 0.17)), 1)

    def test_tabula_uvalue_standard_mfh_2100(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[602:626]
==test_tabula_th:[1219:1243]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_ab_1968(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[528:552]
==test_tabula_th:[1145:1169]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.22 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_ab_1948(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[348:372]
==test_tabula_th:[726:750]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.34 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.29 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_ab_1948(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[638:662]
==test_tabula_mfh:[1387:1410]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.23 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_mfh_1978(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[565:589]
==test_tabula_mfh:[1422:1445]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.21 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_ab_1957(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1597:1618]
==test_tabula_sfh:[1640:1664]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.7 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_mfh_2100(self): (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1597:1620]
==test_tabula_sfh:[1605:1628]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.7 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_2100(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[674:693]
==test_tabula_sfh:[1309:1330]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.21 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_1957(self): (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[230:249]
==test_tabula_mfh:[459:478]
            name="ResidentialBuilding",
            year_of_construction=1956,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 1.08 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1526:1558]
==test_tabula_th:[1431:1464]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.17 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_2009(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1260:1278]
==test_tabula_sfh:[1223:1241]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[555:573]
==test_tabula_th:[1135:1153]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.1 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[518:536]
==test_tabula_sfh:[1299:1317]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[1119:1145]
==test_tabula_th_dk:[991:1014]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.14 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_adv_retrofit_th_dk_1959(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[392:411]
==test_tabula_th:[321:339]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.88 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.7 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_mfh_1948(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[650:668]
==test_tabula_sfh:[656:674]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.4 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.9 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 2.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_sfh_2009(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1216:1233]
==test_tabula_sfh:[1221:1238]
            name="ResidentialBuilding",
            year_of_construction=1858,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[775:792]
==test_tabula_sfh:[781:798]
            name="ResidentialBuilding",
            year_of_construction=1858,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.41 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.35 - 0.17)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[483:500]
==test_tabula_th:[825:842]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.19 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.23 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[497:515]
==test_tabula_sfh:[874:892]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.28 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_sfh_1957(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[516:533]
==test_tabula_sfh:[1257:1274]
            name="ResidentialBuilding",
            year_of_construction=1918,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[533:552]
==test_tabula_mfh:[1275:1293]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.22 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_ab_1948(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[389:408]
==test_tabula_mfh:[986:1004]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.28 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_1983(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[353:372]
==test_tabula_mfh:[834:852]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.29 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_ab_1948(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[316:335]
==test_tabula_mfh:[545:563]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.77 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 4.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_mfh_1983(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[817:832]
==test_tabula_sfh:[817:832]
            name="ResidentialBuilding",
            year_of_construction=1918,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.41 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[334:350]
==test_tabula_sfh:[334:350]
            name="ResidentialBuilding",
            year_of_construction=1858,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 2.6 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 2.0 - 0.17)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[663:679]
==test_tabula_sfh:[1414:1430]
            name="ResidentialBuilding",
            year_of_construction=1977,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[160:176]
==test_tabula_sfh:[370:386]
            name="ResidentialBuilding",
            year_of_construction=1918,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 1.3 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.7 - 0.17)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[516:531]
==test_tabula_mfh:[1258:1273]
            name="ResidentialBuilding",
            year_of_construction=1918,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_data:[3073:3089]
==test_useconditions:[50:66]
        prj_test = Project(load_data=True)
        prj_test.name = "TestAHUProfiles"

        prj_test.add_non_residential(
            method="bmvbs",
            usage="office",
            name="OfficeBuilding",
            year_of_construction=2015,
            number_of_floors=4,
            height_of_floors=3.5,
            net_leased_area=1000.0,
        )

        prj_test.used_library_calc = "AixLib"
        prj_test.number_of_elements_calc = 2
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1126:1149]
==test_tabula_th:[1018:1042]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.15 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.17 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_th_2015(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1161:1179]
==test_tabula_th:[941:959]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[429:447]
==test_tabula_th:[461:479]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.77 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_th_1983(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1045:1059]
==test_tabula_th:[930:944]
            name="ResidentialBuilding",
            year_of_construction=1993,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.4 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[605:619]
==test_tabula_th:[515:529]
            name="ResidentialBuilding",
            year_of_construction=1993,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.4 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1051:1074]
==test_tabula_th:[941:965]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_2001(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1016:1039]
==test_tabula_th:[905:929]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.21 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.26 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_1994(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1110:1124]
==test_tabula_th:[1007:1021]
            name="ResidentialBuilding",
            year_of_construction=2008,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.2 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[669:683]
==test_tabula_th:[590:604]
            name="ResidentialBuilding",
            year_of_construction=2008,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.2 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1637:1651]
==test_tabula_sfh:[1610:1626]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.7 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_2100(self): (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[995:1018]
==test_tabula_th_dk:[1026:1049]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.15 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_adv_retrofit_ab_dk_1949(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[420:444]
==test_tabula_th:[798:822]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.23 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.33 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_ab_1968(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[373:387]
==test_tabula_th:[751:765]
            name="ResidentialBuilding",
            year_of_construction=1947,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[195:209]
==test_tabula_th:[340:354]
            name="ResidentialBuilding",
            year_of_construction=1947,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.65 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[518:533]
==test_tabula_sfh:[1335:1350]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[456:480]
==test_tabula_mfh:[946:969]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.23 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.31 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_ab_1978(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[276:299]
==test_tabula_mfh:[505:528]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 1.08 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_mfh_1978(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[481:495]
==test_tabula_mfh:[970:984]
            name="ResidentialBuilding",
            year_of_construction=1977,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.19 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[160:174]
==test_tabula_mfh:[376:390]
            name="ResidentialBuilding",
            year_of_construction=1918,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 1.3 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[345:358]
==test_tabula_th_dk:[991:1004]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.14 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[686:699]
==test_tabula_th:[601:614]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.28 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1417:1430]
==test_tabula_th_dk:[1021:1034]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[610:623]
==test_tabula_th:[526:539]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.6 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.51 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[575:588]
==test_tabula_th:[491:504]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.65 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[505:518]
==test_tabula_th:[421:434]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 1.08 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1233:1257]
==test_tabula_sfh:[1274:1296]
        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:
            if "_1_" in floor.construction_type:
                assert round(1 / (floor.r_conduc * floor.area),
                             1) == round((1 / (1 / 0.22 - 0.34)), 1)

            elif "_2_" in floor.construction_type:
                assert round(1 / (floor.r_conduc * floor.area),
                             1) == round((1 / (1 / 0.23 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_1948(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1557:1570]
==test_tabula_sfh:[1228:1241]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1265:1278]
==test_tabula_sfh:[1530:1543]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1260:1273]
==test_tabula_sfh:[1299:1312]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[792:816]
==test_tabula_sfh:[834:857]
        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:
            if "_1_" in floor.construction_type:

                assert round(1 / (floor.r_conduc * floor.area),
                             1) == round((1 / (1 / 0.29 - 0.34)), 1)

            elif "_2_" in floor.construction_type:

                assert round(1 / (floor.r_conduc * floor.area),
                             1) == round((1 / (1 / 0.32 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_1918(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[819:832]
==test_tabula_sfh:[783:796]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.41 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[777:790]
==test_tabula_sfh:[819:832]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.41 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1081:1094]
==test_tabula_sfh:[751:764]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.15 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.17 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[350:375]
==test_tabula_sfh:[386:412]
        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:
            if "_1_" in floor.construction_type:

                assert round(1 / (floor.r_conduc * floor.area),
                             1) == round((1 / (1 / 0.88 - 0.34)), 1)

            elif "_2_" in floor.construction_type:

                assert round(1 / (floor.r_conduc * floor.area),
                             1) == round((1 / (1 / 1.2 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_mfh_1918(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1060:1073]
==test_tabula_th_dk:[985:999]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.14)), 1)


        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[665:682]
==test_tabula_th:[1246:1263]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[389:402]
==test_tabula_th:[606:619]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.28 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[241:254]
==test_tabula_th:[386:399]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 1.29 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[171:184]
==test_tabula_th:[316:329]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.7 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.88 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[629:643]
==test_tabula_sfh:[1416:1430]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[629:646]
==test_tabula_mfh:[1413:1430]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[518:531]
==test_tabula_mfh:[1218:1231]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[211:224]
==test_tabula_mfh:[545:558]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.77 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[1008:1028]
==test_tabula_th_dk:[1101:1119]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_adv_retrofit_th_dk_1997(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[971:991]
==test_tabula_th_dk:[925:943]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_adv_retrofit_th_dk_1929(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[736:756]
==test_tabula_th_dk:[823:841]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_retrofit_sfh_dk_1959(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[699:719]
==test_tabula_th_dk:[647:665]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_retrofit_sfh_dk_1971(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1491:1503]
==test_tabula_th:[1431:1443]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1456:1468]
==test_tabula_th:[1354:1366]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1376:1389]
==test_tabula_th:[1390:1403]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:

            if "_1_" in wall.construction_type:
                assert round(1 / (wall.r_conduc * wall.area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1580:1593]
==test_tabula_th:[1265:1279]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_2015(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1545:1558]
==test_tabula_th:[1229:1243]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_2009(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1510:1523]
==test_tabula_th:[1192:1206]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_th_1957(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1475:1488]
==test_tabula_th:[1155:1169]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_th_1948(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[860:872]
==test_tabula_th:[896:908]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.41 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1136:1149]
==test_tabula_th:[879:893]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_th_1983(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1101:1114]
==test_tabula_th:[844:858]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_th_1978(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1066:1079]
==test_tabula_th:[808:822]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_sfh_2001(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1031:1044]
==test_tabula_th:[772:786]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_sfh_1994(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[844:857]
==test_tabula_th:[736:750]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_sfh_1948(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1553:1565]
==test_tabula_th:[1318:1330]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1623:1635]
==test_tabula_sfh:[1596:1608]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.1 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1572:1585]
==test_tabula_sfh:[1440:1453]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_mfh_2015(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1537:1550]
==test_tabula_sfh:[1400:1413]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_mfh_2009(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1502:1515]
==test_tabula_sfh:[1360:1373]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_1968(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1467:1480]
==test_tabula_sfh:[1319:1332]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_1957(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1432:1445]
==test_tabula_sfh:[1283:1296]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_1948(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1397:1410]
==test_tabula_sfh:[1243:1256]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_1918(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[839:852]
==test_tabula_sfh:[803:816]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_sfh_1918(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1201:1215]
==test_tabula_sfh:[1206:1220]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.1 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_1859(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[760:774]
==test_tabula_sfh:[766:780]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.1 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_sfh_1859(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1131:1144]
==test_tabula_sfh:[996:1009]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_2015(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1096:1109]
==test_tabula_sfh:[959:972]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_2009(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1061:1074]
==test_tabula_sfh:[879:892]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_2001(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[991:1004]
==test_tabula_sfh:[919:932]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_sfh_1968(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[725:738]
==test_tabula_sfh:[1171:1184]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_sfh_2100(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[434:448]
==test_tabula_sfh:[545:559]
        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:
            if "_1_" in floor.construction_type:

                assert round(1 / (floor.r_conduc * floor.area),
                             1) == round((1 / (1 / 0.77 - 0.34)), 1)

            elif "_2_" in floor.construction_type:

                assert round(1 / (floor.r_conduc * floor.area),
                             1) == round((1 / (1 / 1.0 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[671:683]
==test_tabula_sfh:[712:724]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.2 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1112:1130]
==test_tabula_sfh_dk:[1124:1145]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.14 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_adv_retrofit_ab_dk_1977(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1035:1053]
==test_tabula_sfh_dk:[1087:1107]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.14 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_adv_retrofit_ab_dk_1959(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[375:387]
==test_tabula_th:[789:801]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[197:209]
==test_tabula_th:[377:389]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.65 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[629:641]
==test_tabula_mfh:[1448:1460]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[648:662]
==test_tabula_mfh:[1362:1375]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_ab_1978(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[612:626]
==test_tabula_mfh:[1327:1340]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_mfh_1957(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[575:589]
==test_tabula_mfh:[1280:1293]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_ab_1957(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[538:552]
==test_tabula_mfh:[1244:1257]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_ab_1948(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[501:515]
==test_tabula_mfh:[1026:1039]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_ab_1919(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[466:480]
==test_tabula_mfh:[921:934]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_ab_1978(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[430:444]
==test_tabula_mfh:[956:969]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_ab_1968(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[394:408]
==test_tabula_mfh:[886:899]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_1957(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[447:459]
==test_tabula_mfh:[972:984]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.19 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[358:372]
==test_tabula_mfh:[803:816]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_1918(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[321:335]
==test_tabula_mfh:[585:598]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 4.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_mfh_1994(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[181:194]
==test_tabula_mfh:[361:375]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_ab_1948(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[302:314]
==test_tabula_mfh:[496:508]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.51 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[267:279]
==test_tabula_mfh:[531:543]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.51 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1185:1196]
==test_tabula_th:[1088:1099]
            name="ResidentialBuilding",
            year_of_construction=2099,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.13 - 0.21)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1594:1605]
==test_tabula_th:[1465:1476]
            name="ResidentialBuilding",
            year_of_construction=2014,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.1 - 0.21)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1150:1161]
==test_tabula_th:[1043:1054]
            name="ResidentialBuilding",
            year_of_construction=2014,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.16 - 0.21)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[710:721]
==test_tabula_th:[625:636]
            name="ResidentialBuilding",
            year_of_construction=2014,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.2 - 0.21)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1524:1535]
==test_tabula_th:[1388:1399]
            name="ResidentialBuilding",
            year_of_construction=2000,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1080:1091]
==test_tabula_th:[966:977]
            name="ResidentialBuilding",
            year_of_construction=2000,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.35 - 0.21)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[640:651]
==test_tabula_th:[550:561]
            name="ResidentialBuilding",
            year_of_construction=2000,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.35 - 0.21)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[817:827]
==test_tabula_th:[714:724]
            name="ResidentialBuilding",
            year_of_construction=1918,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1621:1632]
==test_tabula_th:[1510:1521]
            name="ResidentialBuilding",
            year_of_construction=2099,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.1 - 0.21)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[516:526]
==test_tabula_th:[1133:1143]
            name="ResidentialBuilding",
            year_of_construction=1918,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[590:600]
==test_tabula_sfh:[1333:1343]
            name="ResidentialBuilding",
            year_of_construction=1956,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[553:563]
==test_tabula_sfh:[1297:1307]
            name="ResidentialBuilding",
            year_of_construction=1947,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[336:346]
==test_tabula_mfh:[817:827]
            name="ResidentialBuilding",
            year_of_construction=1918,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_th:[596:609]
==test_tabula_th_dk:[508:521]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.2 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[847:873]
==test_tabula_th_dk:[713:736]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.4 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_th_dk_1959(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[545:565]
==test_tabula_th_dk:[342:360]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 1.5 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.7 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_standard_sfh_dk_1929(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[1077:1085]
==test_tabula_th_dk:[910:918]
        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:
            if "_1_" in wall.construction_type:
                assert round(
                    1 / (wall.r_conduc * wall.area),
                    1) == round((1 / (1 / 0.12 - 0.17)), 1)
            if "_2_" in wall.construction_type:
                assert round(
                    1 / (wall.r_conduc * wall.area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[805:813]
==test_tabula_th_dk:[632:640]
        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:
            if "_1_" in wall.construction_type:
                assert round(
                    1 / (wall.r_conduc * wall.area),
                    1) == round((1 / (1 / 0.4 - 0.17)), 1)
            if "_2_" in wall.construction_type:
                assert round(
                    1 / (wall.r_conduc * wall.area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[535:543]
==test_tabula_th_dk:[292:300]
        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:
            if "_1_" in wall.construction_type:
                assert round(
                    1 / (wall.r_conduc * wall.area),
                    1) == round((1 / (1 / 1.6 - 0.17)), 1)
            if "_2_" in wall.construction_type:
                assert round(
                    1 / (wall.r_conduc * wall.area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[1163:1172]
==test_tabula_th_dk:[925:941]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_adv_retrofit_th_dk_1929(self): (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1420:1430]
==test_tabula_th_dk:[1021:1031]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[691:701]
==test_tabula_th_dk:[753:769]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.28 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[869:892]
==test_tabula_th:[762:786]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.25 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.28 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_th_1957(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[510:528]
==test_tabula_th:[426:444]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 1.08 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_sfh_1978(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[515:528]
==test_tabula_th:[536:549]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_th_2001(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[475:488]
==test_tabula_th:[466:479]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_sfh_1968(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[434:447]
==test_tabula_th:[501:514]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_sfh_1957(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[398:412]
==test_tabula_th:[431:444]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_sfh_1948(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[355:369]
==test_tabula_th:[396:409]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_th_1968(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[675:684]
==test_tabula_th:[590:599]
            name="ResidentialBuilding",
            year_of_construction=2008,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[529:538]
==test_tabula_th:[445:454]
            name="ResidentialBuilding",
            year_of_construction=1977,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1374:1383]
==test_tabula_th:[1244:1253]
            name="ResidentialBuilding",
            year_of_construction=1967,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[933:942]
==test_tabula_th:[823:832]
            name="ResidentialBuilding",
            year_of_construction=1967,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[489:498]
==test_tabula_th:[410:419]
            name="ResidentialBuilding",
            year_of_construction=1967,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1352:1375]
==test_tabula_th:[1219:1243]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_th_1968(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[834:852]
==test_tabula_th:[731:750]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.29 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_th_1948(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[361:375]
==test_tabula_th:[361:374]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_th_1957(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[704:713]
==test_tabula_th:[625:634]
            name="ResidentialBuilding",
            year_of_construction=2014,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[634:643]
==test_tabula_th:[550:559]
            name="ResidentialBuilding",
            year_of_construction=2000,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[599:608]
==test_tabula_th:[515:524]
            name="ResidentialBuilding",
            year_of_construction=1993,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[564:573]
==test_tabula_th:[480:489]
            name="ResidentialBuilding",
            year_of_construction=1982,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[900:909]
==test_tabula_th:[787:796]
            name="ResidentialBuilding",
            year_of_construction=1956,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[459:468]
==test_tabula_th:[375:384]
            name="ResidentialBuilding",
            year_of_construction=1956,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1487:1500]
==test_tabula_sfh_dk:[1114:1127]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1382:1395]
==test_tabula_sfh_dk:[1152:1166]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1166:1177]
==test_tabula_sfh:[1650:1664]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.7 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_2100(self): (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1166:1179]
==test_tabula_sfh:[1615:1628]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.7 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_2100(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1497:1515]
==test_tabula_sfh:[1505:1523]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.19 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_2001(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1422:1445]
==test_tabula_sfh:[1309:1332]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.21 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_1957(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1311:1322]
==test_tabula_sfh:[1345:1356]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:
            if "_1_" in floor.construction_type:

                assert round(1 / (floor.r_conduc * floor.area),
                             1) == round((1 / (1 / 0.21 - 0.34)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1527:1550]
==test_tabula_sfh:[1535:1558]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.17 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_2009(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1223:1233]
==test_tabula_sfh:[1530:1540]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1091:1109]
==test_tabula_sfh:[1096:1114]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.21 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_2009(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1056:1074]
==test_tabula_sfh:[1061:1079]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_2001(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1180:1189]
==test_tabula_sfh:[1185:1194]
            name="ResidentialBuilding",
            year_of_construction=2099,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1586:1595]
==test_tabula_sfh:[1594:1603]
            name="ResidentialBuilding",
            year_of_construction=2014,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1145:1154]
==test_tabula_sfh:[1150:1159]
            name="ResidentialBuilding",
            year_of_construction=2014,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1110:1119]
==test_tabula_sfh:[1115:1124]
            name="ResidentialBuilding",
            year_of_construction=2008,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1516:1525]
==test_tabula_sfh:[1524:1533]
            name="ResidentialBuilding",
            year_of_construction=2000,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1075:1084]
==test_tabula_sfh:[1080:1089]
            name="ResidentialBuilding",
            year_of_construction=2000,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1481:1490]
==test_tabula_sfh:[1489:1498]
            name="ResidentialBuilding",
            year_of_construction=1993,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1040:1049]
==test_tabula_sfh:[1045:1054]
            name="ResidentialBuilding",
            year_of_construction=1993,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1446:1455]
==test_tabula_sfh:[1454:1463]
            name="ResidentialBuilding",
            year_of_construction=1982,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1005:1014]
==test_tabula_sfh:[1010:1019]
            name="ResidentialBuilding",
            year_of_construction=1982,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1030:1053]
==test_tabula_th_dk:[955:978]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.14 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_adv_retrofit_th_dk_1949(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[601:614]
==test_tabula_th_dk:[591:604]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.24 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.14 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[941:950]
==test_tabula_sfh_dk:[1072:1081]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.14)), 1)

        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:
            if "_1_" in wall.construction_type:
                assert round(
                    1 / (wall.r_conduc * wall.area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1000:1018]
==test_tabula_sfh_dk:[1045:1065]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.15 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_adv_retrofit_ab_dk_1949(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[807:825]
==test_tabula_sfh_dk:[815:835]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_retrofit_sfh_dk_1929(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[790:799]
==test_tabula_sfh_dk:[800:809]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.12 - 0.14)), 1)

        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:
            if "_1_" in wall.construction_type:
                assert round(
                    1 / (wall.r_conduc * wall.area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[695:713]
==test_tabula_sfh_dk:[773:793]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.29 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_retrofit_sfh_dk_1949(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[795:805]
==test_tabula_sfh_dk:[961:969]
        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:
            if "_1_" in wall.construction_type:
                assert round(
                    1 / (wall.r_conduc * wall.area),
                    1) == round((1 / (1 / 0.1 - 0.17)), 1)

            if "_2_" in wall.construction_type:

                assert round(
                    1 / (wall.r_conduc * wall.area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[414:430]
==test_tabula_sfh:[429:439]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.77 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[633:646]
==test_tabula_th_dk:[1021:1034]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[560:573]
==test_tabula_th_dk:[1056:1069]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.1 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[160:169]
==test_tabula_th:[305:314]
            name="ResidentialBuilding",
            year_of_construction=1918,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[461:480]
==test_tabula_sfh:[954:972]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.31 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_ab_1978(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[481:490]
==test_tabula_sfh:[973:982]
            name="ResidentialBuilding",
            year_of_construction=1977,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[409:418]
==test_tabula_sfh:[893:902]
            name="ResidentialBuilding",
            year_of_construction=1956,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[230:239]
==test_tabula_sfh:[448:457]
            name="ResidentialBuilding",
            year_of_construction=1956,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[373:382]
==test_tabula_sfh:[858:867]
            name="ResidentialBuilding",
            year_of_construction=1947,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[195:204]
==test_tabula_sfh:[413:422]
            name="ResidentialBuilding",
            year_of_construction=1947,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[597:626]
==test_tabula_mfh:[1347:1375]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.11 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_ab_1968(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[684:693]
==test_tabula_mfh:[1244:1255]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1) (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[251:264]
==test_tabula_mfh:[480:493]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_ab_1968(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[216:229]
==test_tabula_mfh:[445:458]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_ab_1957(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[300:309]
==test_tabula_mfh:[529:538]
            name="ResidentialBuilding",
            year_of_construction=1977,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[627:636]
==test_tabula_mfh:[1376:1385]
            name="ResidentialBuilding",
            year_of_construction=1967,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[445:454]
==test_tabula_mfh:[935:944]
            name="ResidentialBuilding",
            year_of_construction=1967,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[265:274]
==test_tabula_mfh:[494:503]
            name="ResidentialBuilding",
            year_of_construction=1967,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==helptest:[167:177]
==test_data:[2670:2681]
            win.shading_max_irr = 180.0

            win_layer = Layer(parent=win)
            win_layer.id = 1
            win_layer.thickness = 0.024

            win_material = Material(win_layer)
            win_material.name = "GlasWindow"
            win_material.thermal_conduc = 0.067
            win_material.transmittance = 0.9
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_th:[1255:1263]
==test_tabula_th_dk:[1061:1069]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_th:[1182:1190]
==test_tabula_th_dk:[1026:1034]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_th:[941:949]
==test_tabula_th_dk:[783:791]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_th:[946:954]
==test_tabula_th_dk:[718:726]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_th:[601:609]
==test_tabula_th_dk:[818:826]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_th:[531:539]
==test_tabula_th_dk:[413:421]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.51 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[1114:1122]
==test_tabula_th_dk:[1091:1099]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[842:850]
==test_tabula_th_dk:[813:821]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.12 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[763:771]
==test_tabula_th_dk:[586:594]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.12 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[572:580]
==test_tabula_th_dk:[473:481]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.6 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[1008:1016]
==test_tabula_th_dk:[823:831]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[971:979]
==test_tabula_th_dk:[647:655]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1161:1169]
==test_tabula_th_dk:[748:756]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[686:694]
==test_tabula_th_dk:[478:486]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1640:1648]
==test_tabula_th:[1327:1335]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1304:1312]
==test_tabula_th:[1435:1443]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1264:1272]
==test_tabula_th:[1358:1366]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1228:1236]
==test_tabula_th:[1322:1330]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1596:1605]
==test_tabula_th:[1512:1521]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.1 - 0.21)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1456:1465]
==test_tabula_th:[1390:1399]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1309:1317]
==test_tabula_th:[1145:1153]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1259:1267]
==test_tabula_th:[1209:1217]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1223:1231]
==test_tabula_th:[1135:1143]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1540:1548]
==test_tabula_th:[1023:1031]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.17 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1091:1099]
==test_tabula_th:[1018:1026]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.15 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[788:796]
==test_tabula_th:[900:908]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.41 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[935:944]
==test_tabula_th:[896:905]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.41 - 0.21)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[783:791]
==test_tabula_th:[716:724]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[734:744]
==test_tabula_th:[1076:1087]
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.8 - 0.17)), 1)

    def test_tabula_uvalue_standard_sfh_2100(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1051:1059]
==test_tabula_th:[521:529]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.4 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[611:619]
==test_tabula_th:[936:944]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.4 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1166:1174]
==test_tabula_sfh_dk:[852:861]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[793:801]
==test_tabula_sfh_dk:[768:776]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.35 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1191:1199]
==test_tabula_sfh_dk:[726:734]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.13 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1605:1613]
==test_tabula_sfh_dk:[1119:1127]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1645:1653]
==test_tabula_sfh_dk:[891:899]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1610:1618]
==test_tabula_sfh_dk:[736:744]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1270:1278]
==test_tabula_th_dk:[955:963]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1452:1460]
==test_tabula_th_dk:[1021:1029]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1021:1029]
==test_tabula_th_dk:[682:690]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.26 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1126:1134]
==test_tabula_th_dk:[518:526]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.18 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1527:1550]
==test_tabula_th:[1440:1464]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.17 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_mfh_2009(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1632:1640]
==test_tabula_th:[1363:1371]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.11 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1623:1632]
==test_tabula_th:[1467:1476]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.1 - 0.21)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1275:1283]
==test_tabula_th:[987:995]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.22 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1042:1051]
==test_tabula_th:[1045:1054]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.16 - 0.21)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1204:1215]
==test_tabula_th:[1121:1132]
                             1) == round((1 / (1 / 1.1 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_th_1919(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[763:774]
==test_tabula_th:[702:713]
                             1) == round((1 / (1 / 1.1 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_th_1919(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[728:738]
==test_tabula_th:[658:668]
                             1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.8 - 0.17)), 1)

    def test_tabula_uvalue_standard_th_2100(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[886:894]
==test_tabula_th:[611:619]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[675:683]
==test_tabula_th:[1013:1021]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.2 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[505:513]
==test_tabula_th:[386:394]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[545:553]
==test_tabula_th:[356:364]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.77 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[671:680]
==test_tabula_th:[627:636]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.2 - 0.21)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1487:1495]
==test_tabula_sfh_dk:[1152:1160]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1382:1390]
==test_tabula_sfh_dk:[1035:1043]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1422:1430]
==test_tabula_sfh_dk:[1157:1166]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1627:1635]
==test_tabula_sfh_dk:[998:1006]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.1 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1051:1059]
==test_tabula_sfh_dk:[885:894]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1056:1064]
==test_tabula_sfh_dk:[815:823]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[755:763]
==test_tabula_sfh_dk:[773:781]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.29 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[610:618]
==test_tabula_sfh_dk:[461:469]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.6 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1462:1470]
==test_tabula_sfh_dk:[429:437]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.2 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1597:1605]
==test_tabula_sfh_dk:[345:353]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1637:1645]
==test_tabula_sfh_dk:[699:707]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1602:1610]
==test_tabula_sfh_dk:[313:321]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1522:1530]
==test_tabula_sfh_dk:[303:311]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.11 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1186:1194]
==test_tabula_sfh:[1600:1608]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.1 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1191:1199]
==test_tabula_sfh:[1500:1508]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.11 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1492:1500]
==test_tabula_sfh:[1465:1473]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1553:1585]
==test_tabula_sfh:[1526:1558]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.17 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_2009(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1553:1565]
==test_tabula_sfh:[1456:1468]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1553:1562]
==test_tabula_sfh:[1376:1385]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1311:1320]
==test_tabula_sfh:[1269:1277]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:
            if "_1_" in floor.construction_type:

                assert round(1 / (floor.r_conduc * floor.area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1527:1535]
==test_tabula_sfh:[1233:1241]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1265:1273]
==test_tabula_sfh:[1495:1503]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1223:1231]
==test_tabula_sfh:[1460:1468]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1357:1365]
==test_tabula_sfh:[1061:1069]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1016:1039]
==test_tabula_sfh:[1021:1044]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.21 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.26 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_1994(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[951:969]
==test_tabula_sfh:[954:972]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.31 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_1978(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[870:879]
==test_tabula_sfh:[829:837]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.25 - 0.17)), 1)

        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:
            if "_1_" in floor.construction_type:
                assert round(1 / (floor.r_conduc * floor.area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[680:688]
==test_tabula_sfh:[869:877]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.25 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[824:832]
==test_tabula_sfh:[899:907]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.41 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[782:790]
==test_tabula_sfh:[864:872]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.41 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1567:1575]
==test_tabula_sfh:[1131:1139]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.17 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1532:1540]
==test_tabula_sfh:[761:769]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.17 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1116:1124]
==test_tabula_sfh:[716:724]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.2 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[690:698]
==test_tabula_sfh:[696:704]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[615:623]
==test_tabula_sfh:[621:629]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.51 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[575:588]
==test_tabula_sfh:[581:594]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.65 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[429:438]
==test_tabula_sfh:[381:391]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.7 - 0.17)), 1)

        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:
            if "_1_" in floor.construction_type:

                assert round(1 / (floor.r_conduc * floor.area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[990:998]
==test_tabula_th_dk:[985:994]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.14)), 1)


        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[720:728]
==test_tabula_th_dk:[672:680]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.11 - 0.14)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1112:1120]
==test_tabula_th_dk:[596:604]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.14 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1035:1043]
==test_tabula_th_dk:[561:569]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.14 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[339:347]
==test_tabula_sfh_dk:[615:624]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.62 - 0.17)), 1)
        # U-value of website is 0.33, but is seems to be wrong

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[409:417]
==test_tabula_sfh_dk:[577:585]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[344:352]
==test_tabula_sfh_dk:[503:511]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.52 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[312:327]
==test_tabula_sfh_dk:[432:449]
                    1) == round((1 / (1 / 0.2 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.7 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_ab_dk_1929(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[606:614]
==test_tabula_sfh_dk:[350:358]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.14 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1000:1008]
==test_tabula_sfh:[1201:1209]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.15 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[566:574]
==test_tabula_sfh:[651:659]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1065:1073]
==test_tabula_mfh:[1457:1465]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1030:1038]
==test_tabula_mfh:[1156:1164]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[760:768]
==test_tabula_mfh:[645:653]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.4 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[536:544]
==test_tabula_mfh:[1497:1505]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.19 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[461:469]
==test_tabula_th_dk:[788:796]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.31 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[497:504]
==test_tabula_th_dk:[753:761]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.28 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[518:526]
==test_tabula_th:[1172:1180]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[358:366]
==test_tabula_th:[576:584]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[674:682]
==test_tabula_sfh_dk:[1003:1011]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[425:433]
==test_tabula_sfh_dk:[387:395]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.33 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[679:687]
==test_tabula_sfh:[1096:1104]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.21 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[466:474]
==test_tabula_sfh:[1171:1179]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[430:438]
==test_tabula_sfh:[731:739]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[389:397]
==test_tabula_sfh:[691:699]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.28 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[281:289]
==test_tabula_sfh:[510:518]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 1.08 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[316:324]
==test_tabula_sfh:[429:437]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.77 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[171:179]
==test_tabula_sfh:[424:432]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.7 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[570:578]
==test_tabula_mfh:[1091:1099]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.21 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[560:568]
==test_tabula_mfh:[1151:1159]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.1 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[638:646]
==test_tabula_mfh:[1352:1360]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[602:610]
==test_tabula_mfh:[1387:1395]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[565:573]
==test_tabula_mfh:[1121:1129]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[523:531]
==test_tabula_mfh:[1557:1565]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[592:600]
==test_tabula_mfh:[1260:1268]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[555:563]
==test_tabula_mfh:[1218:1226]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[492:500]
==test_tabula_mfh:[946:954]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.23 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[456:464]
==test_tabula_mfh:[911:919]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.23 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[394:402]
==test_tabula_mfh:[725:733]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[379:387]
==test_tabula_mfh:[710:718]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[338:346]
==test_tabula_mfh:[777:785]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[276:284]
==test_tabula_mfh:[470:478]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[321:329]
==test_tabula_mfh:[445:453]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[286:294]
==test_tabula_mfh:[620:628]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[251:259]
==test_tabula_mfh:[550:558]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[216:224]
==test_tabula_mfh:[585:593]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[176:184]
==test_tabula_mfh:[392:400]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.88 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[643:651]
==test_tabula_ab_dk:[765:773]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.23 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[607:615]
==test_tabula_ab_dk:[807:815]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[533:541]
==test_tabula_ab_dk:[571:579]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.22 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[528:536]
==test_tabula_ab_dk:[995:1003]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[420:428]
==test_tabula_ab_dk:[725:733]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.23 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[384:392]
==test_tabula_ab_dk:[601:609]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.24 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[353:361]
==test_tabula_ab_dk:[695:703]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.29 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[348:356]
==test_tabula_ab_dk:[531:539]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.34 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[241:249]
==test_tabula_ab_dk:[374:382]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[211:219]
==test_tabula_ab_dk:[414:422]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.77 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[0:15]
==test_tabula_ab_dk:[0:15]
from teaser.project import Project
prj = Project(False)


class Test_tabula_ab(object):
    global prj

    def test_tabula_de_ab_area_1919(self):
        """
        Test for area estimation of tabula ab
        """
        prj.set_default()
        prj.data = None

        prj.add_residential( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_th:[628:636]
==test_tabula_th_dk:[540:548]
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.2 - 0.21)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_th:[593:609]
==test_tabula_th_dk:[540:564]
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.2 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.3 - 0.17)), 1)

            # if "_1_" in wall.construction_type:
            #     assert round(1 / (wall.r_conduc * wall.area),
            #                  1) == round((1 / (1 / 0.6 - 0.17)), 1)
            #
            # if "_2_" in wall.construction_type:
            #     assert round(1 / (wall.r_conduc * wall.area),
            #                  1) == round((1 / (1 / 0.6 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[392:407]
==test_tabula_th_dk:[601:618]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.5 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#--------------------------------------------------------------------------------------------------------------------------------------------S
#test for U-value retrofit

    def test_tabula_uvalue_retrofit_th_dk_1849(self):

        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[318:333]
==test_tabula_th_dk:[566:579]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.5 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_th_dk_2009(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[956:963]
==test_tabula_th:[1471:1479]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.1 - 0.21)), 1)

        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:
            if "_1_" in wall.construction_type: (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1188:1196]
==test_tabula_th_dk:[880:894]
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.13 - 0.21)), 1)

#-----------------------------------------------------------------------------------------------------------------------------------

#test for U-value adv retrofit

    def test_tabula_uvalue_adv_retrofit_th_dk_1849(self):
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1631:1638]
==test_tabula_th:[1246:1253]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1187:1194]
==test_tabula_th:[896:903]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1152:1159]
==test_tabula_th:[861:868]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1117:1124]
==test_tabula_th:[825:832]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1082:1089]
==test_tabula_th:[789:796]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1047:1054]
==test_tabula_th:[753:760]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[666:674]
==test_tabula_th:[581:589]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 2.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_sfh_2009(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[631:639]
==test_tabula_th:[401:409]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_sfh_2001(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[596:604]
==test_tabula_th:[366:374]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_th_1957(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[520:528]
==test_tabula_th:[331:339]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_th_1948(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[747:754]
==test_tabula_th:[482:489]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[712:719]
==test_tabula_th:[447:454]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[677:684]
==test_tabula_th:[412:419]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[642:649]
==test_tabula_th:[377:384]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[607:614]
==test_tabula_th:[342:349]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[572:579]
==test_tabula_th:[307:314]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1379:1388]
==test_tabula_th_dk:[1158:1167]
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.21)), 1)

        assert round( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[672:683]
==test_tabula_th_dk:[540:551]
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.2 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[926:934]
==test_tabula_th:[1123:1132]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_th_1919(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[891:899]
==test_tabula_th:[704:713]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_1957(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1623:1630]
==test_tabula_sfh:[1561:1568]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1588:1595]
==test_tabula_sfh:[1526:1533]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1553:1560]
==test_tabula_sfh:[1596:1603]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1518:1525]
==test_tabula_sfh:[1456:1463]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1483:1490]
==test_tabula_sfh:[1416:1423]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1448:1455]
==test_tabula_sfh:[1491:1498]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1413:1420]
==test_tabula_sfh:[1376:1383]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1241:1257]
==test_tabula_sfh:[1357:1373]
                assert round(1 / (floor.r_conduc * floor.area),
                             1) == round((1 / (1 / 0.23 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_1968(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[875:884]
==test_tabula_sfh:[909:917]
        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:

            if "_1_" in floor.construction_type:
                assert round(1 / (floor.r_conduc * floor.area),
                             1) == round((1 / (1 / 0.28 - 0.34)), 1)

            elif "_2_" in floor.construction_type:
                assert round(1 / (floor.r_conduc * floor.area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1182:1189]
==test_tabula_sfh:[1012:1019]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1147:1154]
==test_tabula_sfh:[975:982]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1112:1119]
==test_tabula_sfh:[935:942]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1077:1084]
==test_tabula_sfh:[895:902]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[972:979]
==test_tabula_sfh:[860:867]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[739:748]
==test_tabula_sfh:[745:754]
            name="ResidentialBuilding",
            year_of_construction=2099,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[660:668]
==test_tabula_sfh:[701:709]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 2.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_sfh_2015(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[520:528]
==test_tabula_sfh:[480:488]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_sfh_1968(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[485:493]
==test_tabula_sfh:[439:447]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_sfh_1957(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[450:458]
==test_tabula_sfh:[403:412]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_sfh_1948(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[704:713]
==test_tabula_sfh:[710:719]
            name="ResidentialBuilding",
            year_of_construction=2014,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[669:678]
==test_tabula_sfh:[675:684]
            name="ResidentialBuilding",
            year_of_construction=2008,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[634:643]
==test_tabula_sfh:[640:649]
            name="ResidentialBuilding",
            year_of_construction=2000,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[599:608]
==test_tabula_sfh:[605:614]
            name="ResidentialBuilding",
            year_of_construction=1993,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[564:573]
==test_tabula_sfh:[570:579]
            name="ResidentialBuilding",
            year_of_construction=1982,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[529:538]
==test_tabula_sfh:[529:538]
            name="ResidentialBuilding",
            year_of_construction=1977,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[494:503]
==test_tabula_sfh:[489:498]
            name="ResidentialBuilding",
            year_of_construction=1967,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[459:468]
==test_tabula_sfh:[448:457]
            name="ResidentialBuilding",
            year_of_construction=1956,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[376:390]
==test_tabula_sfh:[370:384]
            name="ResidentialBuilding",
            year_of_construction=1918,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 1.3 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[741:748]
==test_tabula_sfh:[531:538]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[706:713]
==test_tabula_sfh:[491:498]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[671:678]
==test_tabula_sfh:[450:457]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[636:643]
==test_tabula_sfh:[415:422]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[601:608]
==test_tabula_sfh:[372:379]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[531:538]
==test_tabula_sfh:[336:343]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[775:782]
==test_tabula_sfh:[1716:1723]
            name="ResidentialBuilding",
            year_of_construction=1858,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            construction_type="tabula_retrofit")
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[334:341]
==test_tabula_sfh:[17:24]
            name="ResidentialBuilding",
            year_of_construction=1858,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1205:1219]
==test_tabula_th_dk:[965:978]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_adv_retrofit_th_dk_1949(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1117:1130]
==test_tabula_th_dk:[930:943]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_adv_retrofit_ab_dk_1977(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[541:554]
==test_tabula_th_dk:[347:360]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.7 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_th_dk_1949(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[444:452]
==test_tabula_th:[561:569]
        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:

            if "_1_" in wall.construction_type:
                assert round(1 / (wall.r_conduc * wall.area),
                             1) == round((1 / (1 / 0.6 - 0.17)), 1)

            if "_2_" in wall.construction_type:
                assert round(1 / (wall.r_conduc * wall.area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1180:1193]
==test_tabula_sfh_dk:[1130:1145]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)
    #
    #     # assert round(
    #     #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
    #     #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
    #     #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_adv_retrofit_ab_dk_2005(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1154:1167]
==test_tabula_sfh_dk:[1092:1107]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_adv_retrofit_sfh_dk_1929(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1075:1088]
==test_tabula_sfh_dk:[1050:1065]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_adv_retrofit_ab_dk_1971(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1040:1053]
==test_tabula_sfh_dk:[1013:1028]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_adv_retrofit_ab_dk_1959(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1005:1018]
==test_tabula_sfh_dk:[976:991]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_adv_retrofit_ab_dk_1949(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[970:983]
==test_tabula_sfh_dk:[934:949]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_adv_retrofit_ab_dk_1929(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[875:888]
==test_tabula_sfh_dk:[858:873]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)
    #
    #     # assert round(
    #     #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
    #     #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
    #     #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_retrofit_ab_dk_2005(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[849:862]
==test_tabula_sfh_dk:[820:835]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_retrofit_sfh_dk_1929(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[812:825]
==test_tabula_sfh_dk:[896:912]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------------------------------------------------------------------------------
#U-value adv retrofit

    def test_tabula_uvalue_adv_retrofit_sfh_dk_1997(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[770:783]
==test_tabula_sfh_dk:[778:793]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_retrofit_sfh_dk_1949(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[735:748]
==test_tabula_sfh_dk:[741:756]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_retrofit_sfh_dk_1959(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[700:713]
==test_tabula_sfh_dk:[704:719]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_retrofit_sfh_dk_1971(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[665:678]
==test_tabula_sfh_dk:[667:682]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_retrofit_sfh_dk_1977(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[506:519]
==test_tabula_sfh_dk:[626:645]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#--------------------------------------------------------------------------------------------------------------------------------------------------------------
#---------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------
#test for U-value for retrofit


    def test_tabula_uvalue_retrofit_sfh_dk_1997(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[419:432]
==test_tabula_sfh_dk:[508:523]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_standard_ab_dk_1971(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[384:397]
==test_tabula_sfh_dk:[471:486]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_standard_ab_dk_1959(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[459:472]
==test_tabula_sfh_dk:[588:603]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.7 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_standard_ab_dk_1977(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[349:362]
==test_tabula_sfh_dk:[434:449]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.7 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_standard_ab_dk_1949(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[314:327]
==test_tabula_sfh_dk:[550:565]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.7 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_standard_sfh_dk_1929(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[653:662]
==test_tabula_th:[1500:1509]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_ab_1978(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[617:626]
==test_tabula_sfh:[1620:1628]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_2100(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[506:515]
==test_tabula_sfh:[1211:1220]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_1859(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[471:480]
==test_tabula_sfh:[771:780]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_sfh_1859(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[291:299]
==test_tabula_sfh:[360:369]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_sfh_1918(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[665:672]
==test_tabula_mfh:[1378:1385]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[629:636]
==test_tabula_mfh:[1343:1350]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[580:589]
==test_tabula_mfh:[1612:1620]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_ab_1957(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[543:552]
==test_tabula_mfh:[1171:1179]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_2100(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[435:444]
==test_tabula_mfh:[1206:1215]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_ab_1968(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[399:408]
==test_tabula_mfh:[765:774]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_1859(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[483:490]
==test_tabula_mfh:[1042:1049]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[447:454]
==test_tabula_mfh:[1007:1014]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[411:418]
==test_tabula_mfh:[937:944]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[375:382]
==test_tabula_mfh:[902:909]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[256:264]
==test_tabula_mfh:[695:703]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_ab_1968(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[221:229]
==test_tabula_mfh:[366:375]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_ab_1957(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[186:194]
==test_tabula_mfh:[402:411]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_mfh_1948(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[302:309]
==test_tabula_mfh:[566:573]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[267:274]
==test_tabula_mfh:[461:468]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[232:239]
==test_tabula_mfh:[496:503]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[197:204]
==test_tabula_mfh:[378:385]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[162:169]
==test_tabula_mfh:[336:343]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_examples:[6:15]
==test_simulation_export:[6:15]
from teaser.logic import utilities
from teaser.project import Project
import math
import os
import warnings as warnings

prj = Project(True)

 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==helptest:[160:166]
==test_data:[2663:2669]
        win.inner_convection = 1.7
        win.inner_radiation = 5.0
        win.outer_convection = 20.0
        win.outer_radiation = 5.0
        win.g_value = 0.789
        win.a_conv = 0.03 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_th:[1279:1284]
==test_tabula_th_dk:[1084:1089]
            usage='terraced_house',
            name="ResidentialBuilding",
            year_of_construction=1977,
            number_of_floors=2,
            height_of_floors=3.2, (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_th:[858:863]
==test_tabula_th_dk:[806:811]
            usage='terraced_house',
            name="ResidentialBuilding",
            year_of_construction=1977,
            number_of_floors=2,
            height_of_floors=3.2, (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_th:[444:449]
==test_tabula_th_dk:[466:471]
            usage='terraced_house',
            name="ResidentialBuilding",
            year_of_construction=1977,
            number_of_floors=2,
            height_of_floors=3.2, (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_th:[132:137]
==test_tabula_th_dk:[161:166]
            usage='terraced_house',
            name="ResidentialBuilding",
            year_of_construction=1977,
            number_of_floors=2,
            height_of_floors=3.2, (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[1111:1117]
==test_tabula_th_dk:[982:988]
            height_of_floors=3.2,
            net_leased_area=95, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[1035:1041]
==test_tabula_th_dk:[1161:1167]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.21)), 1)

        assert round( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[953:959]
==test_tabula_th_dk:[947:953]
            height_of_floors=3.2,
            net_leased_area=117, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[839:845]
==test_tabula_th_dk:[704:710]
            height_of_floors=3.2,
            net_leased_area=95, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[726:732]
==test_tabula_th_dk:[848:864]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.13 - 0.21)), 1)

        assert round( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[686:692]
==test_tabula_th_dk:[669:675]
            height_of_floors=3.2,
            net_leased_area=117, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[569:575]
==test_tabula_th_dk:[364:370]
            height_of_floors=3.2,
            net_leased_area=95)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[969:991]
==test_tabula_th_dk:[1099:1119]
            1) == round((1 / (1 / 0.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_adv_retrofit_th_dk_1997(self):
        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[969:979]
==test_tabula_th_dk:[821:831]
                    1) == round((1 / (1 / 0.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[411:417]
==test_tabula_th_dk:[329:335]
            height_of_floors=3.2,
            net_leased_area=117)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[246:251]
==test_tabula_th_dk:[29:34]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].ground_floors), 1) == 66
        assert round(
            sum(wall.area for wall in (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[122:127]
==test_tabula_th_dk:[261:266]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].ground_floors), 1) == 118
        assert round(
            sum(wall.area for wall in (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[106:112]
==test_tabula_th_dk:[164:170]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=111)

        assert round(
            sum(wall.area for wall in (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1608:1615]
==test_tabula_th:[1529:1536]
                             1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1358:1373]
==test_tabula_th:[1263:1279]
            1) == round((1 / (1 / 0.23 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_th_1978(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1199:1206]
==test_tabula_th:[1107:1114]
            1) == round((1 / (1 / 0.15 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.15 - 0.34)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[222:228]
==test_tabula_th:[77:83]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=150)

        assert round(
            sum(wall.area for wall in (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[296:306]
==test_tabula_th:[122:132]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_de_th_area_1977(self):
        """
        Test for area estimation of tabula th
        """
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[267:277]
==test_tabula_th:[93:103]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_de_th_area_1968(self):
        """
        Test for area estimation of tabula th
        """
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[238:248]
==test_tabula_th:[64:74]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_de_sfh_area_2001(self):
        """
        Test for area estimation of tabula sfh
        """
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[209:219]
==test_tabula_th:[35:45]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_de_sfh_area_1994(self):
        """
        Test for area estimation of tabula sfh
        """
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1257:1262]
==test_tabula_th:[714:719]
            name="ResidentialBuilding",
            year_of_construction=1918,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[817:822]
==test_tabula_th:[1133:1138]
            name="ResidentialBuilding",
            year_of_construction=1918,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[6:16]
==test_tabula_th:[5:16]
    global prj

    def test_tabula_de_sfh_area_1859(self):
        """
        Test for area estimation of tabula sfh
        """
        prj.set_default()
        prj.data = None
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1191:1197]
==test_tabula_sfh_dk:[689:700]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.13 - 0.21)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
        #     1) == round((1 / (1 / 0.3 - 0.17)), 1)

        assert round( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1382:1388]
==test_tabula_th_dk:[1126:1142]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.21)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
        #     1) == round((1 / (1 / 0.3 - 0.17)), 1)
        #
        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
        #     1) == round((1 / (1 / 0.18 - 0.34)), 1)

        assert round( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1530:1550]
==test_tabula_th:[1407:1428]
            1) == round((1 / (1 / 0.14 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.17 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_mfh_2009(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1600:1607]
==test_tabula_th:[1484:1491]
            1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[868:875]
==test_tabula_th:[760:767]
            1) == round((1 / (1 / 0.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.25 - 0.17)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[718:725]
==test_tabula_th:[644:651]
                             1) == round((1 / (1 / 0.28 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.35 - 0.34)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[427:434]
==test_tabula_th:[349:356]
            1) == round((1 / (1 / 0.65 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.7 - 0.17)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1016:1022]
==test_tabula_sfh_dk:[924:935]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.21 - 0.17)), 1)
        #
        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
        #     1) == round((1 / (1 / 0.33 - 0.34)), 1)

        assert round( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[55:60]
==test_tabula_sfh_dk:[274:279]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].outer_walls), 1) == 146
        assert round(
            sum(wall.area for wall in (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1325:1340]
==test_tabula_sfh:[1398:1413]
            1) == round((1 / (1 / 0.23 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_1978(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1395:1410]
==test_tabula_sfh:[1281:1296]
                             1) == round((1 / (1 / 0.23 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_1948(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[296:306]
==test_tabula_sfh:[180:190]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_de_sfh_area_1983(self):
        """
        Test for area estimation of tabula sfh
        """
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[267:277]
==test_tabula_sfh:[122:132]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_de_mfh_area_2009(self):
        """
        Test for area estimation of tabula mfh
        """
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[238:248]
==test_tabula_sfh:[93:103]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_de_mfh_area_2001(self):
        """
        Test for area estimation of tabula mfh
        """
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[209:219]
==test_tabula_sfh:[64:74]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_de_mfh_area_1994(self):
        """
        Test for area estimation of tabula mfh
        """
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[180:190]
==test_tabula_sfh:[35:45]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_de_sfh_area_1919(self):
        """
        Test for area estimation of tabula sfh
        """
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[334:340]
==test_tabula_sfh:[1701:1707]
            name="ResidentialBuilding",
            year_of_construction=1858,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1174:1181]
==test_tabula_th_dk:[985:992]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.14)), 1)


        assert round( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[5:16]
==test_tabula_th_dk:[5:16]
    global prj

    def test_tabula_de_th_dk_area_1849(self):
        """
        Test for area estimation of tabula th
        """
        prj.set_default()
        prj.data = None

        prj.add_residential(
            method='tabula_dk', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[106:112]
==test_tabula_mfh:[48:54]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=312)

        assert round(
            sum(wall.area for wall in (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[630:636]
==test_tabula_th_dk:[1158:1164]
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_adv_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[376:382]
==test_tabula_th_dk:[880:886]
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[163:169]
==test_tabula_th_dk:[540:546]
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[464:480]
==test_tabula_sfh:[917:932]
            1) == round((1 / (1 / 0.31 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_ab_1978(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[646:662]
==test_tabula_mfh:[1242:1257]
                             1) == round((1 / (1 / 0.23 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_mfh_1918(self):
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[563:570]
==test_tabula_mfh:[1309:1316]
                             1) == round((1 / (1 / 0.1 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[373:379]
==test_tabula_mfh:[853:859]
            name="ResidentialBuilding",
            year_of_construction=1947,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, construction_type="tabula_retrofit")
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[195:201]
==test_tabula_mfh:[412:418]
            name="ResidentialBuilding",
            year_of_construction=1947,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[151:159]
==test_tabula_mfh:[151:161]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_uvalue_standard_ab_1919(self):

        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[122:132]
==test_tabula_mfh:[122:132]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_de_ab_area_1978(self):
        """
        Test for area estimation of tabula ab
        """
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[93:103]
==test_tabula_mfh:[93:103]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_de_mfh_area_1957(self):
        """
        Test for area estimation of tabula mfh
        """
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[64:74]
==test_tabula_mfh:[64:74]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_de_mfh_area_1948(self):
        """
        Test for area estimation of tabula mfh
        """
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[35:45]
==test_tabula_mfh:[35:45]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_de_mfh_area_1919(self):
        """
        Test for area estimation of tabula mfh
        """
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[516:521]
==test_tabula_mfh:[817:822]
            name="ResidentialBuilding",
            year_of_construction=1918,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[336:341]
==test_tabula_mfh:[1258:1263]
            name="ResidentialBuilding",
            year_of_construction=1918,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[5:16]
==test_tabula_mfh:[6:16]
    global prj

    def test_tabula_de_mfh_area_1859(self):
        """
        Test for area estimation of tabula mfh
        """
        prj.set_default()
        prj.data = None
        prj.add_residential(
            method='tabula_de', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[662:667]
==test_tabula_ab_dk:[1130:1135]
            usage='apartment_block',
            name="ResidentialBuilding",
            year_of_construction=1977,
            number_of_floors=2,
            height_of_floors=3.2, (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[480:485]
==test_tabula_ab_dk:[825:830]
            usage='apartment_block',
            name="ResidentialBuilding",
            year_of_construction=1977,
            number_of_floors=2,
            height_of_floors=3.2, (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[299:304]
==test_tabula_ab_dk:[472:477]
            usage='apartment_block',
            name="ResidentialBuilding",
            year_of_construction=1977,
            number_of_floors=2,
            height_of_floors=3.2, (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[132:137]
==test_tabula_ab_dk:[161:166]
            usage='apartment_block',
            name="ResidentialBuilding",
            year_of_construction=1977,
            number_of_floors=2,
            height_of_floors=3.2, (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_data:[641:646]
==test_tabula_mfh:[1216:1221]
            name="ResidentialBuilding",
            year_of_construction=1858,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_data:[632:637]
==test_tabula_mfh:[775:780]
            name="ResidentialBuilding",
            year_of_construction=1858,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219, (duplicate-code)

-----------------------------------
Your code has been rated at 7.43/10

