{
    "messages": [
        {
            "type": "error",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "unrecognized-option",
            "message": "Unrecognized option found: no-space-check",
            "message-id": "E0015"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'print-statement' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'parameter-unpacking' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'unpacking-in-except' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'old-raise-syntax' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'backtick' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'import-star-module-level' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'apply-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'basestring-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'buffer-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'cmp-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'coerce-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'execfile-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'file-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'long-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'raw_input-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'reduce-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'standarderror-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'unicode-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'xrange-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'coerce-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'delslice-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'getslice-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'setslice-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'no-absolute-import' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'old-division' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'dict-iter-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'dict-view-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'next-method-called' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'metaclass-assignment' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'indexing-exception' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'raising-string' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'reload-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'oct-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'hex-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'nonzero-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'cmp-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'input-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'round-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'intern-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'unichr-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'map-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'zip-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'range-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'filter-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'using-cmp-argument' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'div-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'idiv-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'rdiv-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'exception-message-attribute' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'invalid-str-codec' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'sys-max-int' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'bad-python3-import' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'deprecated-string-function' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'deprecated-str-translate-call' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'deprecated-itertools-function' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'deprecated-types-field' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'next-method-defined' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'dict-items-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'dict-keys-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "refactor",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "useless-option-value",
            "message": "Useless option value for '--disable', 'dict-values-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942.",
            "message-id": "R0022"
        },
        {
            "type": "warning",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "unknown-option-value",
            "message": "Unknown option value for '--disable', expected a valid pylint message and got 'long-suffix'",
            "message-id": "W0012"
        },
        {
            "type": "warning",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "unknown-option-value",
            "message": "Unknown option value for '--disable', expected a valid pylint message and got 'old-ne-operator'",
            "message-id": "W0012"
        },
        {
            "type": "warning",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "unknown-option-value",
            "message": "Unknown option value for '--disable', expected a valid pylint message and got 'old-octal-literal'",
            "message-id": "W0012"
        },
        {
            "type": "warning",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "unknown-option-value",
            "message": "Unknown option value for '--disable', expected a valid pylint message and got 'non-ascii-bytes-literal'",
            "message-id": "W0012"
        },
        {
            "type": "warning",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "unknown-option-value",
            "message": "Unknown option value for '--disable', expected a valid pylint message and got 'locally-enabled'",
            "message-id": "W0012"
        },
        {
            "type": "warning",
            "module": "/builds/EBC/EBC_all/github_ci/TEASER/pylintrc",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "pylintrc",
            "symbol": "unknown-option-value",
            "message": "Unknown option value for '--disable', expected a valid pylint message and got 'eq-without-hash'",
            "message-id": "W0012"
        },
        {
            "type": "convention",
            "module": "teaser",
            "obj": "read_file",
            "line": 18,
            "column": 4,
            "path": "teaser/__init__.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "teaser",
            "obj": "read_file",
            "line": 19,
            "column": 8,
            "path": "teaser/__init__.py",
            "symbol": "invalid-name",
            "message": "Variable name \"fp\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "teaser",
            "obj": "read_file",
            "line": 19,
            "column": 13,
            "path": "teaser/__init__.py",
            "symbol": "unspecified-encoding",
            "message": "Using open without explicitly specifying an encoding",
            "message-id": "W1514"
        },
        {
            "type": "refactor",
            "module": "teaser",
            "obj": "read_file",
            "line": 19,
            "column": 13,
            "path": "teaser/__init__.py",
            "symbol": "consider-using-with",
            "message": "Consider using 'with' for resource-allocating operations",
            "message-id": "R1732"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "",
            "line": 332,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "",
            "line": 522,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "line-too-long",
            "message": "Line too long (104/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "too-many-lines",
            "message": "Too many lines in module (1258/1000)",
            "message-id": "C0302"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "consider-using-from-import",
            "message": "Use 'from teaser.logic import utilities' instead",
            "message-id": "R0402"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "consider-using-from-import",
            "message": "Use 'from teaser.data.output import aixlib_output' instead",
            "message-id": "R0402"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "consider-using-from-import",
            "message": "Use 'from teaser.data.output import ibpsa_output' instead",
            "message-id": "R0402"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "Project",
            "line": 48,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'Project' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "Project",
            "line": 48,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "too-many-instance-attributes",
            "message": "Too many instance attributes (16/7)",
            "message-id": "R0902"
        },
        {
            "type": "warning",
            "module": "teaser.project",
            "obj": "",
            "line": 239,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "implicit-str-concat",
            "message": "Implicit string concatenation found in call",
            "message-id": "W1404"
        },
        {
            "type": "warning",
            "module": "teaser.project",
            "obj": "",
            "line": 244,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "implicit-str-concat",
            "message": "Implicit string concatenation found in call",
            "message-id": "W1404"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "Project.add_non_residential",
            "line": 269,
            "column": 4,
            "path": "teaser/project.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (13/5)",
            "message-id": "R0913"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "Project.add_non_residential",
            "line": 269,
            "column": 4,
            "path": "teaser/project.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (16/15)",
            "message-id": "R0914"
        },
        {
            "type": "warning",
            "module": "teaser.project",
            "obj": "",
            "line": 357,
            "column": 0,
            "path": "teaser/project.py",
            "symbol": "implicit-str-concat",
            "message": "Implicit string concatenation found in assignment",
            "message-id": "W1404"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "Project.add_residential",
            "line": 452,
            "column": 4,
            "path": "teaser/project.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (17/5)",
            "message-id": "R0913"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "Project.add_residential",
            "line": 452,
            "column": 4,
            "path": "teaser/project.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (23/15)",
            "message-id": "R0914"
        },
        {
            "type": "warning",
            "module": "teaser.project",
            "obj": "Project.add_residential",
            "line": 605,
            "column": 12,
            "path": "teaser/project.py",
            "symbol": "pointless-string-statement",
            "message": "String statement has no effect",
            "message-id": "W0105"
        },
        {
            "type": "warning",
            "module": "teaser.project",
            "obj": "Project.add_residential",
            "line": 606,
            "column": 12,
            "path": "teaser/project.py",
            "symbol": "pointless-string-statement",
            "message": "String statement has no effect",
            "message-id": "W0105"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "Project.add_residential",
            "line": 614,
            "column": 12,
            "path": "teaser/project.py",
            "symbol": "no-else-return",
            "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
            "message-id": "R1705"
        },
        {
            "type": "warning",
            "module": "teaser.project",
            "obj": "Project.add_residential",
            "line": 687,
            "column": 12,
            "path": "teaser/project.py",
            "symbol": "pointless-string-statement",
            "message": "String statement has no effect",
            "message-id": "W0105"
        },
        {
            "type": "warning",
            "module": "teaser.project",
            "obj": "Project.add_residential",
            "line": 688,
            "column": 12,
            "path": "teaser/project.py",
            "symbol": "pointless-string-statement",
            "message": "String statement has no effect",
            "message-id": "W0105"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "Project.add_residential",
            "line": 695,
            "column": 12,
            "path": "teaser/project.py",
            "symbol": "no-else-return",
            "message": "Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\"",
            "message-id": "R1705"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "Project.add_residential",
            "line": 452,
            "column": 4,
            "path": "teaser/project.py",
            "symbol": "too-many-return-statements",
            "message": "Too many return statements (8/6)",
            "message-id": "R0911"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "Project.add_residential",
            "line": 452,
            "column": 4,
            "path": "teaser/project.py",
            "symbol": "too-many-branches",
            "message": "Too many branches (32/12)",
            "message-id": "R0912"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "Project.add_residential",
            "line": 452,
            "column": 4,
            "path": "teaser/project.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (85/50)",
            "message-id": "R0915"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "Project.export_aixlib",
            "line": 1028,
            "column": 8,
            "path": "teaser/project.py",
            "symbol": "invalid-name",
            "message": "Argument name \"corG\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "teaser.project",
            "obj": "Project.export_aixlib",
            "line": 1024,
            "column": 4,
            "path": "teaser/project.py",
            "symbol": "too-many-arguments",
            "message": "Too many arguments (6/5)",
            "message-id": "R0913"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "Project.weather_file_path",
            "line": 1173,
            "column": 4,
            "path": "teaser/project.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "Project.number_of_elements_calc",
            "line": 1193,
            "column": 4,
            "path": "teaser/project.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "Project.merge_windows_calc",
            "line": 1209,
            "column": 4,
            "path": "teaser/project.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "Project.used_library_calc",
            "line": 1225,
            "column": 4,
            "path": "teaser/project.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "teaser.project",
            "obj": "Project.name",
            "line": 1241,
            "column": 4,
            "path": "teaser/project.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "helptest",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/helptest.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "refactor",
            "module": "helptest",
            "obj": "building_test2",
            "line": 13,
            "column": 0,
            "path": "tests/helptest.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (26/15)",
            "message-id": "R0914"
        },
        {
            "type": "warning",
            "module": "helptest",
            "obj": "building_test2",
            "line": 19,
            "column": 4,
            "path": "tests/helptest.py",
            "symbol": "pointless-string-statement",
            "message": "String statement has no effect",
            "message-id": "W0105"
        },
        {
            "type": "warning",
            "module": "helptest",
            "obj": "building_test2",
            "line": 28,
            "column": 4,
            "path": "tests/helptest.py",
            "symbol": "pointless-string-statement",
            "message": "String statement has no effect",
            "message-id": "W0105"
        },
        {
            "type": "convention",
            "module": "helptest",
            "obj": "building_test2",
            "line": 31,
            "column": 4,
            "path": "tests/helptest.py",
            "symbol": "invalid-name",
            "message": "Variable name \"tz\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "helptest",
            "obj": "building_test2",
            "line": 78,
            "column": 8,
            "path": "tests/helptest.py",
            "symbol": "pointless-string-statement",
            "message": "String statement has no effect",
            "message-id": "W0105"
        },
        {
            "type": "warning",
            "module": "helptest",
            "obj": "building_test2",
            "line": 117,
            "column": 8,
            "path": "tests/helptest.py",
            "symbol": "pointless-string-statement",
            "message": "String statement has no effect",
            "message-id": "W0105"
        },
        {
            "type": "refactor",
            "module": "helptest",
            "obj": "building_test2",
            "line": 13,
            "column": 0,
            "path": "tests/helptest.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (157/50)",
            "message-id": "R0915"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_data.py",
            "symbol": "too-many-lines",
            "message": "Too many lines in module (3158/1000)",
            "message-id": "C0302"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "tests/test_data.py",
            "symbol": "useless-import-alias",
            "message": "Import alias does not rename original package",
            "message-id": "C0414"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser",
            "line": 17,
            "column": 0,
            "path": "tests/test_data.py",
            "symbol": "invalid-name",
            "message": "Class name \"Test_teaser\" doesn't conform to PascalCase naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser",
            "line": 17,
            "column": 0,
            "path": "tests/test_data.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'Test_teaser' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser",
            "line": 20,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "global-variable-not-assigned",
            "message": "Using global for 'prj' but no assignment is done",
            "message-id": "W0602"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_vdi_room1",
            "line": 24,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.verification.verification_VDI_6007_room1)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_vdi_room3",
            "line": 50,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.verification.verification_VDI_6007_room3)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_vdi_room8",
            "line": 76,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.verification.verification_VDI_6007_room8)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_type_bldg_office_with_calc",
            "line": 142,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.archetypebuildings.bmvbs.office.Office)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "test_data",
            "obj": "Test_teaser.test_type_bldg_office_with_calc",
            "line": 162,
            "column": 20,
            "path": "tests/test_data.py",
            "symbol": "not-an-iterable",
            "message": "Non-iterable value test_office.thermal_zones is used in an iterating context",
            "message-id": "E1133"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_type_bldg_office_with_calc",
            "line": 137,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (67/50)",
            "message-id": "R0915"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_type_bldg_institute4_with_calc",
            "line": 278,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.archetypebuildings.bmvbs.custom.institute4.Institute4)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "test_data",
            "obj": "Test_teaser.test_type_bldg_institute4_with_calc",
            "line": 301,
            "column": 20,
            "path": "tests/test_data.py",
            "symbol": "not-an-iterable",
            "message": "Non-iterable value test_institute4.thermal_zones is used in an iterating context",
            "message-id": "E1133"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_type_bldg_institute8_with_calc",
            "line": 335,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.archetypebuildings.bmvbs.custom.institute8.Institute8)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "test_data",
            "obj": "Test_teaser.test_type_bldg_institute8_with_calc",
            "line": 358,
            "column": 20,
            "path": "tests/test_data.py",
            "symbol": "not-an-iterable",
            "message": "Non-iterable value test_institute8.thermal_zones is used in an iterating context",
            "message-id": "E1133"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_type_bldg_institute_with_calc",
            "line": 392,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.archetypebuildings.bmvbs.custom.institute.Institute)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "test_data",
            "obj": "Test_teaser.test_type_bldg_institute_with_calc",
            "line": 415,
            "column": 20,
            "path": "tests/test_data.py",
            "symbol": "not-an-iterable",
            "message": "Non-iterable value test_institute.thermal_zones is used in an iterating context",
            "message-id": "E1133"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_type_bldg_residential_with_calc",
            "line": 449,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.archetypebuildings.bmvbs.singlefamilydwelling.SingleFamilyDwelling)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "test_data",
            "obj": "Test_teaser.test_type_bldg_residential_with_calc",
            "line": 471,
            "column": 20,
            "path": "tests/test_data.py",
            "symbol": "not-an-iterable",
            "message": "Non-iterable value test_residential.thermal_zones is used in an iterating context",
            "message-id": "E1133"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_type_bldg_residential_with_calc",
            "line": 444,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (57/50)",
            "message-id": "R0915"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "",
            "line": 588,
            "column": 0,
            "path": "tests/test_data.py",
            "symbol": "implicit-str-concat",
            "message": "Implicit string concatenation found in call",
            "message-id": "W1404"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_load_save_project",
            "line": 592,
            "column": 18,
            "path": "tests/test_data.py",
            "symbol": "consider-using-generator",
            "message": "Consider using a generator instead 'sum(tz.area for tz in prj.buildings[-1].thermal_zones)'",
            "message-id": "R1728"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_load_save_project_new",
            "line": 604,
            "column": 18,
            "path": "tests/test_data.py",
            "symbol": "consider-using-generator",
            "message": "Consider using a generator instead 'sum(tz.area for tz in prj.buildings[-1].thermal_zones)'",
            "message-id": "R1728"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_load_save_project_new",
            "line": 605,
            "column": 12,
            "path": "tests/test_data.py",
            "symbol": "invalid-name",
            "message": "Variable name \"tz\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_export_ibpsa",
            "line": 695,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (76/50)",
            "message-id": "R0915"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_one",
            "line": 1228,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.one_element.OneElement)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_one",
            "line": 1248,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_outer_wall_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_one",
            "line": 1249,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_window_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_one",
            "line": 1284,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.one_element.OneElement)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_one",
            "line": 1313,
            "column": 23,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_two",
            "line": 1324,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.two_element.TwoElement)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_two",
            "line": 1344,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_outer_wall_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_two",
            "line": 1345,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_inner_wall_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_two",
            "line": 1346,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_window_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_two",
            "line": 1391,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.two_element.TwoElement)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_two",
            "line": 1422,
            "column": 23,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_two",
            "line": 1432,
            "column": 23,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_three",
            "line": 1443,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.three_element.ThreeElement)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_three",
            "line": 1463,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_outer_wall_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_three",
            "line": 1464,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_ground_floor_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_three",
            "line": 1465,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_inner_wall_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_three",
            "line": 1466,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_window_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_three",
            "line": 1438,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (55/50)",
            "message-id": "R0915"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_three",
            "line": 1521,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.three_element.ThreeElement)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_three",
            "line": 1547,
            "column": 23,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_three",
            "line": 1557,
            "column": 23,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_four",
            "line": 1568,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.four_element.FourElement)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_four",
            "line": 1588,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_outer_wall_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_four",
            "line": 1589,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_ground_floor_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_four",
            "line": 1590,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_rooftop_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_four",
            "line": 1591,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_inner_wall_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_four",
            "line": 1592,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _sum_window_elements of a client class",
            "message-id": "W0212"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_sum_building_elements_four",
            "line": 1563,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (70/50)",
            "message-id": "R0915"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_four",
            "line": 1663,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.four_element.FourElement)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_four",
            "line": 1687,
            "column": 23,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_chain_matrix_four",
            "line": 1697,
            "column": 23,
            "path": "tests/test_data.py",
            "symbol": "protected-access",
            "message": "Access to a protected member _calc_parallel_connection of a client class",
            "message-id": "W0212"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_three_element",
            "line": 2052,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (52/50)",
            "message-id": "R0915"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_calc_four_element",
            "line": 2110,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (72/50)",
            "message-id": "R0915"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_gather_element_properties",
            "line": 2217,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "invalid-name",
            "message": "Variable name \"outerWalls\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_save_type_element",
            "line": 2240,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'os' from outer scope (line 10)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_save_type_element",
            "line": 2240,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "reimported",
            "message": "Reimport 'os' (imported line 10)",
            "message-id": "W0404"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_save_type_element",
            "line": 2240,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (os)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_delete_type_element",
            "line": 2253,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'os' from outer scope (line 10)",
            "message-id": "W0621"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_delete_type_element",
            "line": 2253,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "reimported",
            "message": "Reimport 'os' (imported line 10)",
            "message-id": "W0404"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_delete_type_element",
            "line": 2253,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (os)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_load_save_material",
            "line": 2335,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.material.Material)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_load_save_material",
            "line": 2342,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.data.dataclass.DataClass)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_properties_project",
            "line": 2352,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "pointless-statement",
            "message": "Statement seems to have no effect",
            "message-id": "W0104"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_properties_project",
            "line": 2353,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "pointless-statement",
            "message": "Statement seems to have no effect",
            "message-id": "W0104"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "Test_teaser.test_properties_project",
            "line": 2354,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "pointless-statement",
            "message": "Statement seems to have no effect",
            "message-id": "W0104"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_warnings_prj",
            "line": 2361,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.building.Building)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_warnings_prj",
            "line": 2362,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.thermalzone.ThermalZone)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_warnings_prj",
            "line": 2363,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.useconditions.UseConditions)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_warnings_prj",
            "line": 2367,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "invalid-name",
            "message": "Variable name \"tz\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_aixlib_only_iw",
            "line": 2407,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.building.Building)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_aixlib_only_iw",
            "line": 2419,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.thermalzone.ThermalZone)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_aixlib_only_iw",
            "line": 2421,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "invalid-name",
            "message": "Variable name \"tz\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_aixlib_only_iw",
            "line": 2427,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.useconditions.UseConditions)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_aixlib_only_iw",
            "line": 2432,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.innerwall.InnerWall)",
            "message-id": "C0415"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_export_aixlib_only_iw",
            "line": 2402,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (65/50)",
            "message-id": "R0915"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_ow",
            "line": 2502,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.building.Building)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_ow",
            "line": 2512,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.thermalzone.ThermalZone)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_ow",
            "line": 2514,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "invalid-name",
            "message": "Variable name \"tz\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_ow",
            "line": 2520,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.useconditions.UseConditions)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_ow",
            "line": 2525,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.outerwall.OuterWall)",
            "message-id": "C0415"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_ow",
            "line": 2497,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (86/50)",
            "message-id": "R0915"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_win",
            "line": 2623,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.building.Building)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_win",
            "line": 2633,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.thermalzone.ThermalZone)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_win",
            "line": 2635,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "invalid-name",
            "message": "Variable name \"tz\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_win",
            "line": 2641,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.useconditions.UseConditions)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_win",
            "line": 2646,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.window.Window)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_win",
            "line": 2647,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.layer.Layer)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_win",
            "line": 2648,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.material.Material)",
            "message-id": "C0415"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_win",
            "line": 2618,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (102/50)",
            "message-id": "R0915"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_rt",
            "line": 2754,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-locals",
            "message": "Too many local variables (19/15)",
            "message-id": "R0914"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_rt",
            "line": 2759,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.building.Building)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_rt",
            "line": 2769,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.thermalzone.ThermalZone)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_rt",
            "line": 2771,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "invalid-name",
            "message": "Variable name \"tz\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_rt",
            "line": 2777,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.useconditions.UseConditions)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_rt",
            "line": 2782,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.rooftop.Rooftop)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_rt",
            "line": 2804,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.layer.Layer)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_rt",
            "line": 2809,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.material.Material)",
            "message-id": "C0415"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_rt",
            "line": 2754,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (107/50)",
            "message-id": "R0915"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_gf",
            "line": 2897,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.building.Building)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_gf",
            "line": 2907,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.thermalzone.ThermalZone)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_gf",
            "line": 2909,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "invalid-name",
            "message": "Variable name \"tz\" doesn't conform to snake_case naming style",
            "message-id": "C0103"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_gf",
            "line": 2915,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.useconditions.UseConditions)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_gf",
            "line": 2920,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.groundfloor.GroundFloor)",
            "message-id": "C0415"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser.test_export_only_gf",
            "line": 2892,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "too-many-statements",
            "message": "Too many statements (66/50)",
            "message-id": "R0915"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_ashrae_140_600",
            "line": 2983,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_ashrae_140_600",
            "line": 2985,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.verification.verification_ASHRAE_140_600.main)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_ashrae_140_620",
            "line": 2994,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_ashrae_140_620",
            "line": 2996,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.verification.verification_ASHRAE_140_620.main)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_ashrae_140_900",
            "line": 3005,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_ashrae_140_900",
            "line": 3007,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.verification.verification_ASHRAE_140_900.main)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_ashrae_140_920",
            "line": 3016,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_ashrae_140_920",
            "line": 3018,
            "column": 8,
            "path": "tests/test_data.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.verification.verification_ASHRAE_140_920.main)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "Test_teaser.test_export_bldg_threshold",
            "line": 3134,
            "column": 4,
            "path": "tests/test_data.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "test_data",
            "obj": "Test_teaser",
            "line": 17,
            "column": 0,
            "path": "tests/test_data.py",
            "symbol": "too-many-public-methods",
            "message": "Too many public methods (73/20)",
            "message-id": "R0904"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "tests/test_data.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import math\" should be placed before \"from teaser.logic import utilities\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "tests/test_data.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import os\" should be placed before \"from teaser.logic import utilities\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "tests/test_data.py",
            "symbol": "wrong-import-order",
            "message": "third party import \"import helptest\" should be placed before \"from teaser.logic import utilities\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "test_data",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "tests/test_data.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import warnings as warnings\" should be placed before \"import helptest\"",
            "message-id": "C0411"
        },
        {
            "type": "warning",
            "module": "test_data",
            "obj": "",
            "line": 12,
            "column": 0,
            "path": "tests/test_data.py",
            "symbol": "unused-import",
            "message": "Unused warnings imported as warnings",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "test_examples",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "tests/test_examples.py",
            "symbol": "useless-import-alias",
            "message": "Import alias does not rename original package",
            "message-id": "C0414"
        },
        {
            "type": "convention",
            "module": "test_examples",
            "obj": "Test_examples",
            "line": 16,
            "column": 0,
            "path": "tests/test_examples.py",
            "symbol": "invalid-name",
            "message": "Class name \"Test_examples\" doesn't conform to PascalCase naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "test_examples",
            "obj": "Test_examples",
            "line": 16,
            "column": 0,
            "path": "tests/test_examples.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'Test_examples' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples",
            "line": 19,
            "column": 4,
            "path": "tests/test_examples.py",
            "symbol": "global-statement",
            "message": "Using the global statement",
            "message-id": "W0603"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e1_example_generate_archetype",
            "line": 25,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'prj' from outer scope (line 13)",
            "message-id": "W0621"
        },
        {
            "type": "convention",
            "module": "test_examples",
            "obj": "Test_examples.test_e1_example_generate_archetype",
            "line": 23,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.e1_generate_archetype)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e2_example_export_aixlib",
            "line": 33,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'prj' from outer scope (line 13)",
            "message-id": "W0621"
        },
        {
            "type": "convention",
            "module": "test_examples",
            "obj": "Test_examples.test_e2_example_export_aixlib",
            "line": 31,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.e2_export_aixlib_models)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e2_example_export_aixlib",
            "line": 33,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'prj'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e3_example_export_ibpsa",
            "line": 39,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'prj' from outer scope (line 13)",
            "message-id": "W0621"
        },
        {
            "type": "convention",
            "module": "test_examples",
            "obj": "Test_examples.test_e3_example_export_ibpsa",
            "line": 37,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.e3_export_ibpsa_models)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "test_examples",
            "obj": "Test_examples.test_e3_example_export_ibpsa",
            "line": 39,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "assignment-from-no-return",
            "message": "Assigning result of a function call, where the function has no return",
            "message-id": "E1111"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e3_example_export_ibpsa",
            "line": 39,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'prj'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e4_example_save",
            "line": 45,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'prj' from outer scope (line 13)",
            "message-id": "W0621"
        },
        {
            "type": "convention",
            "module": "test_examples",
            "obj": "Test_examples.test_e4_example_save",
            "line": 43,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.e4_save)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "test_examples",
            "obj": "Test_examples.test_e4_example_save",
            "line": 45,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "assignment-from-no-return",
            "message": "Assigning result of a function call, where the function has no return",
            "message-id": "E1111"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e4_example_save",
            "line": 45,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'prj'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e5_example_load",
            "line": 51,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'prj' from outer scope (line 13)",
            "message-id": "W0621"
        },
        {
            "type": "convention",
            "module": "test_examples",
            "obj": "Test_examples.test_e5_example_load",
            "line": 49,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.e5_load)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "test_examples",
            "obj": "Test_examples.test_e5_example_load",
            "line": 51,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "assignment-from-no-return",
            "message": "Assigning result of a function call, where the function has no return",
            "message-id": "E1111"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e5_example_load",
            "line": 51,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'prj'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e6_example_create_building",
            "line": 57,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'prj' from outer scope (line 13)",
            "message-id": "W0621"
        },
        {
            "type": "convention",
            "module": "test_examples",
            "obj": "Test_examples.test_e6_example_create_building",
            "line": 55,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.e6_generate_building)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "test_examples",
            "obj": "Test_examples.test_e6_example_create_building",
            "line": 57,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "assignment-from-no-return",
            "message": "Assigning result of a function call, where the function has no return",
            "message-id": "E1111"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e6_example_create_building",
            "line": 57,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'prj'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e7_example_retrofit_building",
            "line": 63,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'prj' from outer scope (line 13)",
            "message-id": "W0621"
        },
        {
            "type": "convention",
            "module": "test_examples",
            "obj": "Test_examples.test_e7_example_retrofit_building",
            "line": 61,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.e7_retrofit)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "test_examples",
            "obj": "Test_examples.test_e7_example_retrofit_building",
            "line": 63,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "assignment-from-no-return",
            "message": "Assigning result of a function call, where the function has no return",
            "message-id": "E1111"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e7_example_retrofit_building",
            "line": 63,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'prj'",
            "message-id": "W0612"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e8_example_change_boundary_conditions",
            "line": 69,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'prj' from outer scope (line 13)",
            "message-id": "W0621"
        },
        {
            "type": "convention",
            "module": "test_examples",
            "obj": "Test_examples.test_e8_example_change_boundary_conditions",
            "line": 67,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.e8_change_boundary_conditions)",
            "message-id": "C0415"
        },
        {
            "type": "error",
            "module": "test_examples",
            "obj": "Test_examples.test_e8_example_change_boundary_conditions",
            "line": 69,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "assignment-from-no-return",
            "message": "Assigning result of a function call, where the function has no return",
            "message-id": "E1111"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "Test_examples.test_e8_example_change_boundary_conditions",
            "line": 69,
            "column": 8,
            "path": "tests/test_examples.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'prj'",
            "message-id": "W0612"
        },
        {
            "type": "convention",
            "module": "test_examples",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "tests/test_examples.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import math\" should be placed before \"from teaser.logic import utilities\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "test_examples",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "tests/test_examples.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import os\" should be placed before \"from teaser.logic import utilities\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "test_examples",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "tests/test_examples.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import warnings as warnings\" should be placed before \"from teaser.logic import utilities\"",
            "message-id": "C0411"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "tests/test_examples.py",
            "symbol": "unused-import",
            "message": "Unused utilities imported from teaser.logic",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "tests/test_examples.py",
            "symbol": "unused-import",
            "message": "Unused import math",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "tests/test_examples.py",
            "symbol": "unused-import",
            "message": "Unused import os",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "test_examples",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "tests/test_examples.py",
            "symbol": "unused-import",
            "message": "Unused warnings imported as warnings",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "test_modelicaversion",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_modelicaversion.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "test_modelicaversion",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "tests/test_modelicaversion.py",
            "symbol": "useless-import-alias",
            "message": "Import alias does not rename original package",
            "message-id": "C0414"
        },
        {
            "type": "refactor",
            "module": "test_modelicaversion",
            "obj": "TestModelicaVersions",
            "line": 8,
            "column": 0,
            "path": "tests/test_modelicaversion.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'TestModelicaVersions' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "warning",
            "module": "test_modelicaversion",
            "obj": "TestModelicaVersions",
            "line": 10,
            "column": 4,
            "path": "tests/test_modelicaversion.py",
            "symbol": "global-variable-not-assigned",
            "message": "Using global for 'prj' but no assignment is done",
            "message-id": "W0602"
        },
        {
            "type": "convention",
            "module": "test_modelicaversion",
            "obj": "TestModelicaVersions.test_modelica_export_version",
            "line": 12,
            "column": 4,
            "path": "tests/test_modelicaversion.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_modelicaversion",
            "obj": "TestModelicaVersions.test_modelica_export_version",
            "line": 14,
            "column": 12,
            "path": "tests/test_modelicaversion.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (github.Github)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_modelicaversion",
            "obj": "TestModelicaVersions.test_modelica_export_version",
            "line": 18,
            "column": 8,
            "path": "tests/test_modelicaversion.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.buildingobjects.calculation.ibpsa.IBPSA)",
            "message-id": "C0415"
        },
        {
            "type": "convention",
            "module": "test_modelicaversion",
            "obj": "TestModelicaVersions.test_modelica_export_version",
            "line": 19,
            "column": 8,
            "path": "tests/test_modelicaversion.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.logic.archetypebuildings.bmvbs.office.Office)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_modelicaversion",
            "obj": "TestModelicaVersions.test_modelica_export_version",
            "line": 33,
            "column": 8,
            "path": "tests/test_modelicaversion.py",
            "symbol": "bare-except",
            "message": "No exception type(s) specified",
            "message-id": "W0702"
        },
        {
            "type": "refactor",
            "module": "test_modelicaversion",
            "obj": "TestModelicaVersions.test_modelica_export_version",
            "line": 12,
            "column": 4,
            "path": "tests/test_modelicaversion.py",
            "symbol": "inconsistent-return-statements",
            "message": "Either all return statements in a function should return an expression, or none of them should.",
            "message-id": "R1710"
        },
        {
            "type": "refactor",
            "module": "test_modelicaversion",
            "obj": "TestModelicaVersions",
            "line": 8,
            "column": 0,
            "path": "tests/test_modelicaversion.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "test_modelicaversion",
            "obj": "",
            "line": 2,
            "column": 0,
            "path": "tests/test_modelicaversion.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import warnings as warnings\" should be placed before \"from teaser.project import Project\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "test_modelicaversion",
            "obj": "",
            "line": 3,
            "column": 0,
            "path": "tests/test_modelicaversion.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import os\" should be placed before \"from teaser.project import Project\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "test_simulation_export",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "tests/test_simulation_export.py",
            "symbol": "useless-import-alias",
            "message": "Import alias does not rename original package",
            "message-id": "C0414"
        },
        {
            "type": "convention",
            "module": "test_simulation_export",
            "obj": "Simulation_export",
            "line": 16,
            "column": 0,
            "path": "tests/test_simulation_export.py",
            "symbol": "invalid-name",
            "message": "Class name \"Simulation_export\" doesn't conform to PascalCase naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "test_simulation_export",
            "obj": "Simulation_export",
            "line": 16,
            "column": 0,
            "path": "tests/test_simulation_export.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'Simulation_export' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "warning",
            "module": "test_simulation_export",
            "obj": "Simulation_export",
            "line": 19,
            "column": 4,
            "path": "tests/test_simulation_export.py",
            "symbol": "global-statement",
            "message": "Using the global statement",
            "message-id": "W0603"
        },
        {
            "type": "warning",
            "module": "test_simulation_export",
            "obj": "Simulation_export.export_e2_example_export_aixlib",
            "line": 25,
            "column": 8,
            "path": "tests/test_simulation_export.py",
            "symbol": "redefined-outer-name",
            "message": "Redefining name 'prj' from outer scope (line 13)",
            "message-id": "W0621"
        },
        {
            "type": "convention",
            "module": "test_simulation_export",
            "obj": "Simulation_export.export_e2_example_export_aixlib",
            "line": 23,
            "column": 8,
            "path": "tests/test_simulation_export.py",
            "symbol": "import-outside-toplevel",
            "message": "Import outside toplevel (teaser.examples.e2_export_aixlib_models)",
            "message-id": "C0415"
        },
        {
            "type": "warning",
            "module": "test_simulation_export",
            "obj": "Simulation_export.export_e2_example_export_aixlib",
            "line": 25,
            "column": 8,
            "path": "tests/test_simulation_export.py",
            "symbol": "unused-variable",
            "message": "Unused variable 'prj'",
            "message-id": "W0612"
        },
        {
            "type": "refactor",
            "module": "test_simulation_export",
            "obj": "Simulation_export",
            "line": 16,
            "column": 0,
            "path": "tests/test_simulation_export.py",
            "symbol": "too-few-public-methods",
            "message": "Too few public methods (1/2)",
            "message-id": "R0903"
        },
        {
            "type": "convention",
            "module": "test_simulation_export",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "tests/test_simulation_export.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import math\" should be placed before \"from teaser.logic import utilities\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "test_simulation_export",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "tests/test_simulation_export.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import os\" should be placed before \"from teaser.logic import utilities\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "test_simulation_export",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "tests/test_simulation_export.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import warnings as warnings\" should be placed before \"from teaser.logic import utilities\"",
            "message-id": "C0411"
        },
        {
            "type": "warning",
            "module": "test_simulation_export",
            "obj": "",
            "line": 7,
            "column": 0,
            "path": "tests/test_simulation_export.py",
            "symbol": "unused-import",
            "message": "Unused utilities imported from teaser.logic",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "test_simulation_export",
            "obj": "",
            "line": 9,
            "column": 0,
            "path": "tests/test_simulation_export.py",
            "symbol": "unused-import",
            "message": "Unused import math",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "test_simulation_export",
            "obj": "",
            "line": 10,
            "column": 0,
            "path": "tests/test_simulation_export.py",
            "symbol": "unused-import",
            "message": "Unused import os",
            "message-id": "W0611"
        },
        {
            "type": "warning",
            "module": "test_simulation_export",
            "obj": "",
            "line": 11,
            "column": 0,
            "path": "tests/test_simulation_export.py",
            "symbol": "unused-import",
            "message": "Unused warnings imported as warnings",
            "message-id": "W0611"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_ab.py",
            "symbol": "invalid-name",
            "message": "Class name \"Test_tabula_ab\" doesn't conform to PascalCase naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_ab.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'Test_tabula_ab' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "warning",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab",
            "line": 6,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "global-variable-not-assigned",
            "message": "Using global for 'prj' but no assignment is done",
            "message-id": "W0602"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_1919",
            "line": 156,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_1948",
            "line": 192,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_1957",
            "line": 227,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_1968",
            "line": 262,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_1978",
            "line": 297,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_1919",
            "line": 332,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_1948",
            "line": 369,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_1957",
            "line": 405,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_1968",
            "line": 441,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_1978",
            "line": 477,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_adv_ab_1919",
            "line": 512,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_adv_ab_1948",
            "line": 549,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_adv_ab_1957",
            "line": 586,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_adv_ab_1968",
            "line": 623,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_adv_ab_1978",
            "line": 659,
            "column": 4,
            "path": "tests/test_tabula_ab.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "",
            "line": 272,
            "column": 0,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "line-too-long",
            "message": "Line too long (168/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "",
            "line": 622,
            "column": 0,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "line-too-long",
            "message": "Line too long (129/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "",
            "line": 927,
            "column": 0,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "line-too-long",
            "message": "Line too long (128/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "too-many-lines",
            "message": "Too many lines in module (1235/1000)",
            "message-id": "C0302"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "invalid-name",
            "message": "Class name \"Test_tabula_ab\" doesn't conform to PascalCase naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'Test_tabula_ab' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "warning",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab",
            "line": 6,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "global-variable-not-assigned",
            "message": "Using global for 'prj' but no assignment is done",
            "message-id": "W0602"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_dk_1849",
            "line": 275,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_dk_1929",
            "line": 325,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_dk_1949",
            "line": 360,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_dk_1959",
            "line": 395,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_dk_1971",
            "line": 430,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_dk_1977",
            "line": 470,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_dk_1997",
            "line": 517,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_dk_2005",
            "line": 552,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_standard_ab_dk_2009",
            "line": 587,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_dk_1849",
            "line": 626,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_dk_1929",
            "line": 676,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_dk_1949",
            "line": 711,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_dk_1959",
            "line": 746,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_dk_1971",
            "line": 781,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_dk_1977",
            "line": 823,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_dk_1997",
            "line": 860,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_dk_2005",
            "line": 886,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_retrofit_ab_dk_2009",
            "line": 907,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_adv_retrofit_ab_dk_1849",
            "line": 931,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_adv_retrofit_ab_dk_1929",
            "line": 981,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_adv_retrofit_ab_dk_1949",
            "line": 1016,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_adv_retrofit_ab_dk_1959",
            "line": 1051,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_adv_retrofit_ab_dk_1971",
            "line": 1086,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_adv_retrofit_ab_dk_1977",
            "line": 1128,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_adv_retrofit_ab_dk_1997",
            "line": 1165,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_adv_retrofit_ab_dk_2005",
            "line": 1191,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab.test_tabula_uvalue_adv_retrofit_ab_dk_2009",
            "line": 1217,
            "column": 4,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "test_tabula_ab_dk",
            "obj": "Test_tabula_ab",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_ab_dk.py",
            "symbol": "too-many-public-methods",
            "message": "Too many public methods (36/20)",
            "message-id": "R0904"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "too-many-lines",
            "message": "Too many lines in module (1651/1000)",
            "message-id": "C0302"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh",
            "line": 6,
            "column": 0,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh",
            "line": 6,
            "column": 0,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "invalid-name",
            "message": "Class name \"Test_tabula_mfh\" doesn't conform to PascalCase naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh",
            "line": 6,
            "column": 0,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'Test_tabula_mfh' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "warning",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh",
            "line": 7,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "global-variable-not-assigned",
            "message": "Using global for 'prj' but no assignment is done",
            "message-id": "W0602"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_standard_mfh_1859",
            "line": 330,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_standard_mfh_1918",
            "line": 372,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_standard_mfh_1948",
            "line": 408,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_standard_mfh_1957",
            "line": 456,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_standard_mfh_1968",
            "line": 491,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_standard_mfh_1978",
            "line": 526,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_standard_mfh_1983",
            "line": 561,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_standard_mfh_1994",
            "line": 596,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_standard_mfh_2001",
            "line": 631,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_standard_mfh_2009",
            "line": 666,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_standard_mfh_2015",
            "line": 701,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_standard_mfh_2100",
            "line": 736,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_mfh_1859",
            "line": 771,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_mfh_1918",
            "line": 814,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_mfh_1948",
            "line": 850,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_mfh_1957",
            "line": 897,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_mfh_1968",
            "line": 932,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_mfh_1978",
            "line": 967,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_mfh_1983",
            "line": 1002,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_mfh_1994",
            "line": 1037,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_mfh_2001",
            "line": 1072,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_mfh_2009",
            "line": 1107,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_mfh_2015",
            "line": 1142,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_mfh_2100",
            "line": 1177,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_adv_mfh_1859",
            "line": 1212,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_adv_mfh_1918",
            "line": 1255,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_adv_mfh_1948",
            "line": 1291,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_adv_mfh_1957",
            "line": 1338,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_adv_mfh_1968",
            "line": 1373,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_adv_mfh_1978",
            "line": 1408,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_adv_mfh_1983",
            "line": 1443,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_adv_mfh_1994",
            "line": 1478,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_adv_mfh_2001",
            "line": 1513,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_adv_mfh_2009",
            "line": 1548,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_adv_mfh_2015",
            "line": 1583,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh.test_tabula_uvalue_retrofit_adv_mfh_2100",
            "line": 1618,
            "column": 4,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "test_tabula_mfh",
            "obj": "Test_tabula_mfh",
            "line": 6,
            "column": 0,
            "path": "tests/test_tabula_mfh.py",
            "symbol": "too-many-public-methods",
            "message": "Too many public methods (47/20)",
            "message-id": "R0904"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "too-many-lines",
            "message": "Too many lines in module (1725/1000)",
            "message-id": "C0302"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh",
            "line": 6,
            "column": 0,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh",
            "line": 6,
            "column": 0,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "invalid-name",
            "message": "Class name \"Test_tabula_sfh\" doesn't conform to PascalCase naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh",
            "line": 6,
            "column": 0,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'Test_tabula_sfh' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "warning",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh",
            "line": 7,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "global-variable-not-assigned",
            "message": "Using global for 'prj' but no assignment is done",
            "message-id": "W0602"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_standard_sfh_1859",
            "line": 330,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_standard_sfh_1918",
            "line": 366,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_standard_sfh_1948",
            "line": 409,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_standard_sfh_1957",
            "line": 445,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_standard_sfh_1968",
            "line": 486,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_standard_sfh_1978",
            "line": 526,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_standard_sfh_1983",
            "line": 567,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_standard_sfh_1994",
            "line": 602,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_standard_sfh_2001",
            "line": 637,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_standard_sfh_2009",
            "line": 672,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_standard_sfh_2015",
            "line": 707,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_standard_sfh_2100",
            "line": 742,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_sfh_1859",
            "line": 777,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_sfh_1918",
            "line": 814,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_sfh_1948",
            "line": 855,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_sfh_1957",
            "line": 890,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_sfh_1968",
            "line": 930,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_sfh_1978",
            "line": 970,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_sfh_1983",
            "line": 1007,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_sfh_1994",
            "line": 1042,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_sfh_2001",
            "line": 1077,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_sfh_2009",
            "line": 1112,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_sfh_2015",
            "line": 1147,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_sfh_2100",
            "line": 1182,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_adv_sfh_1859",
            "line": 1217,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_adv_sfh_1918",
            "line": 1254,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_adv_sfh_1948",
            "line": 1294,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_adv_sfh_1957",
            "line": 1330,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_adv_sfh_1968",
            "line": 1371,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_adv_sfh_1978",
            "line": 1411,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_adv_sfh_1983",
            "line": 1451,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_adv_sfh_1994",
            "line": 1486,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_adv_sfh_2001",
            "line": 1521,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_adv_sfh_2009",
            "line": 1556,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_adv_sfh_2015",
            "line": 1591,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh.test_tabula_uvalue_retrofit_adv_sfh_2100",
            "line": 1626,
            "column": 4,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "test_tabula_sfh",
            "obj": "Test_tabula_sfh",
            "line": 6,
            "column": 0,
            "path": "tests/test_tabula_sfh.py",
            "symbol": "too-many-public-methods",
            "message": "Too many public methods (48/20)",
            "message-id": "R0904"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "",
            "line": 289,
            "column": 0,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "line-too-long",
            "message": "Line too long (145/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "",
            "line": 290,
            "column": 0,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "line-too-long",
            "message": "Line too long (146/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "",
            "line": 291,
            "column": 0,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "line-too-long",
            "message": "Line too long (153/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "",
            "line": 637,
            "column": 0,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "line-too-long",
            "message": "Line too long (159/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "",
            "line": 638,
            "column": 0,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "line-too-long",
            "message": "Line too long (160/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "",
            "line": 639,
            "column": 0,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "line-too-long",
            "message": "Line too long (162/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "",
            "line": 907,
            "column": 0,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "line-too-long",
            "message": "Line too long (155/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "too-many-lines",
            "message": "Too many lines in module (1282/1000)",
            "message-id": "C0302"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk",
            "line": 6,
            "column": 0,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk",
            "line": 6,
            "column": 0,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "invalid-name",
            "message": "Class name \"Test_tabula_sfh_dk\" doesn't conform to PascalCase naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk",
            "line": 6,
            "column": 0,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'Test_tabula_sfh_dk' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "warning",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk",
            "line": 7,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "global-variable-not-assigned",
            "message": "Using global for 'prj' but no assignment is done",
            "message-id": "W0602"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_standard_sfh_dk_2009",
            "line": 294,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_standard_sfh_dk_2005",
            "line": 331,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_standard_sfh_dk_1997",
            "line": 368,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_standard_sfh_dk_1977",
            "line": 405,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_standard_sfh_dk_1971",
            "line": 447,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_standard_sfh_dk_1959",
            "line": 484,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_standard_sfh_dk_1949",
            "line": 521,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_standard_sfh_dk_1929",
            "line": 563,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_standard_sfh_dk_1849",
            "line": 601,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_retrofit_sfh_dk_1997",
            "line": 643,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_retrofit_sfh_dk_1977",
            "line": 680,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_retrofit_sfh_dk_1971",
            "line": 717,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_retrofit_sfh_dk_1959",
            "line": 754,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_retrofit_sfh_dk_1949",
            "line": 791,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_retrofit_sfh_dk_1929",
            "line": 833,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_retrofit_sfh_dk_1849",
            "line": 871,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_adv_retrofit_sfh_dk_1997",
            "line": 910,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_adv_retrofit_sfh_dk_1977",
            "line": 947,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_adv_retrofit_sfh_dk_1971",
            "line": 989,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_adv_retrofit_sfh_dk_1959",
            "line": 1026,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_adv_retrofit_sfh_dk_1949",
            "line": 1063,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_adv_retrofit_sfh_dk_1929",
            "line": 1105,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk.test_tabula_uvalue_adv_retrofit_sfh_dk_1849",
            "line": 1143,
            "column": 4,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "test_tabula_sfh_dk",
            "obj": "Test_tabula_sfh_dk",
            "line": 6,
            "column": 0,
            "path": "tests/test_tabula_sfh_dk.py",
            "symbol": "too-many-public-methods",
            "message": "Too many public methods (32/20)",
            "message-id": "R0904"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_tabula_th.py",
            "symbol": "too-many-lines",
            "message": "Too many lines in module (1549/1000)",
            "message-id": "C0302"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_th.py",
            "symbol": "invalid-name",
            "message": "Class name \"Test_tabula_th\" doesn't conform to PascalCase naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_th.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'Test_tabula_th' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "warning",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th",
            "line": 6,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "global-variable-not-assigned",
            "message": "Using global for 'prj' but no assignment is done",
            "message-id": "W0602"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_standard_th_1919",
            "line": 301,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_standard_th_1948",
            "line": 337,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_standard_th_1957",
            "line": 372,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_standard_th_1968",
            "line": 407,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_standard_th_1978",
            "line": 442,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_standard_th_1983",
            "line": 477,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_standard_th_1994",
            "line": 512,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_standard_th_2001",
            "line": 547,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_standard_th_2008",
            "line": 587,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_standard_th_2015",
            "line": 622,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_standard_th_2100",
            "line": 666,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_th_1919",
            "line": 710,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_th_1948",
            "line": 747,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_th_1957",
            "line": 783,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_th_1968",
            "line": 819,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_th_1978",
            "line": 855,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_th_1983",
            "line": 890,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_th_1994",
            "line": 926,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_th_2001",
            "line": 962,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_th_2009",
            "line": 1003,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_th_2015",
            "line": 1039,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_th_2100",
            "line": 1084,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_adv_th_1919",
            "line": 1129,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_adv_th_1948",
            "line": 1166,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_adv_th_1957",
            "line": 1203,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_adv_th_1968",
            "line": 1240,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_adv_th_1978",
            "line": 1276,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_adv_th_1983",
            "line": 1312,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_adv_th_1994",
            "line": 1348,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_adv_th_2001",
            "line": 1384,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_adv_th_2008",
            "line": 1425,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_adv_th_2015",
            "line": 1461,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th.test_tabula_uvalue_retrofit_adv_th_2100",
            "line": 1506,
            "column": 4,
            "path": "tests/test_tabula_th.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "test_tabula_th",
            "obj": "Test_tabula_th",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_th.py",
            "symbol": "too-many-public-methods",
            "message": "Too many public methods (43/20)",
            "message-id": "R0904"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "",
            "line": 272,
            "column": 0,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "line-too-long",
            "message": "Line too long (168/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "",
            "line": 612,
            "column": 0,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "line-too-long",
            "message": "Line too long (142/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "",
            "line": 889,
            "column": 0,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "line-too-long",
            "message": "Line too long (132/100)",
            "message-id": "C0301"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "too-many-lines",
            "message": "Too many lines in module (1170/1000)",
            "message-id": "C0302"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-module-docstring",
            "message": "Missing module docstring",
            "message-id": "C0114"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-class-docstring",
            "message": "Missing class docstring",
            "message-id": "C0115"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "invalid-name",
            "message": "Class name \"Test_tabula_th_dk\" doesn't conform to PascalCase naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'Test_tabula_th_dk' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "warning",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk",
            "line": 6,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "global-variable-not-assigned",
            "message": "Using global for 'prj' but no assignment is done",
            "message-id": "W0602"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_standard_th_dk_1849",
            "line": 275,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_standard_th_dk_1929",
            "line": 323,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_standard_th_dk_1949",
            "line": 358,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_standard_th_dk_1959",
            "line": 394,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_standard_th_dk_1971",
            "line": 429,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_standard_th_dk_1977",
            "line": 464,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_standard_th_dk_1997",
            "line": 499,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_standard_th_dk_2005",
            "line": 534,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_standard_th_dk_2009",
            "line": 577,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_retrofit_th_dk_1849",
            "line": 615,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_retrofit_th_dk_1929",
            "line": 663,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_retrofit_th_dk_1949",
            "line": 698,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_retrofit_th_dk_1959",
            "line": 734,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_retrofit_th_dk_1971",
            "line": 769,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_retrofit_th_dk_1977",
            "line": 804,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_retrofit_th_dk_1997",
            "line": 839,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_retrofit_th_dk_2005",
            "line": 874,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_adv_retrofit_th_dk_1849",
            "line": 893,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_adv_retrofit_th_dk_1929",
            "line": 941,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_adv_retrofit_th_dk_1949",
            "line": 976,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_adv_retrofit_th_dk_1959",
            "line": 1012,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_adv_retrofit_th_dk_1971",
            "line": 1047,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_adv_retrofit_th_dk_1977",
            "line": 1082,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_adv_retrofit_th_dk_1997",
            "line": 1117,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk.test_tabula_uvalue_adv_retrofit_th_dk_2005",
            "line": 1152,
            "column": 4,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "refactor",
            "module": "test_tabula_th_dk",
            "obj": "Test_tabula_th_dk",
            "line": 5,
            "column": 0,
            "path": "tests/test_tabula_th_dk.py",
            "symbol": "too-many-public-methods",
            "message": "Too many public methods (34/20)",
            "message-id": "R0904"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "Test_useconditions",
            "line": 11,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "invalid-name",
            "message": "Class name \"Test_useconditions\" doesn't conform to PascalCase naming style",
            "message-id": "C0103"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "Test_useconditions",
            "line": 11,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "useless-object-inheritance",
            "message": "Class 'Test_useconditions' inherits from object, can be safely removed from bases in python3",
            "message-id": "R0205"
        },
        {
            "type": "warning",
            "module": "test_useconditions",
            "obj": "Test_useconditions",
            "line": 14,
            "column": 4,
            "path": "tests/test_useconditions.py",
            "symbol": "global-variable-not-assigned",
            "message": "Using global for 'prj' but no assignment is done",
            "message-id": "W0602"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "Test_useconditions.test_ahu_threshold_true",
            "line": 131,
            "column": 4,
            "path": "tests/test_useconditions.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "Test_useconditions.test_ahu_threshold_false",
            "line": 138,
            "column": 4,
            "path": "tests/test_useconditions.py",
            "symbol": "missing-function-docstring",
            "message": "Missing function or method docstring",
            "message-id": "C0116"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "",
            "line": 4,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "wrong-import-order",
            "message": "standard import \"import os\" should be placed before \"from teaser.logic import utilities\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "",
            "line": 5,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "wrong-import-order",
            "message": "third party import \"import helptest\" should be placed before \"from teaser.logic import utilities\"",
            "message-id": "C0411"
        },
        {
            "type": "convention",
            "module": "test_useconditions",
            "obj": "",
            "line": 6,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "wrong-import-order",
            "message": "third party import \"import pytest\" should be placed before \"from teaser.logic import utilities\"",
            "message-id": "C0411"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[553:589]\n==test_tabula_th:[1170:1206]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1947,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n            construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.1 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.21 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_th_1957(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1489:1523]\n==test_tabula_th:[1352:1387]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1993,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.11 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.19 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_2001(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1454:1488]\n==test_tabula_th:[1316:1351]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1982,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.20 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_1994(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1010:1044]\n==test_tabula_th:[894:929]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1982,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.41 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.21 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.26 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_th_1994(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1411:1445]\n==test_tabula_th:[1280:1315]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1977,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.21 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_1983(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[970:1004]\n==test_tabula_th:[859:893]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1977,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.19 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.22 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.28 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_1983(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1551:1585]\n==test_tabula_sfh:[1559:1593]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2008,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.17 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_2015(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[627:662]\n==test_tabula_th:[1244:1279]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1967,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.23 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_th_1978(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[445:480]\n==test_tabula_th:[823:858]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1967,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.19 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.23 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.31 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_th_1978(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[409:444]\n==test_tabula_mfh:[900:934]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1956,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.23 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.23 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.33 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_1968(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[663:693]\n==test_tabula_mfh:[1411:1443]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1977,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.21 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[570:594]\n==test_tabula_th:[480:504]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1982,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.5 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.65 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[529:553]\n==test_tabula_th:[445:469]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1977,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.51 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.0 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.77 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[265:289]\n==test_tabula_th:[410:434]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1967,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.51 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 1.08 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1042:1069]\n==test_tabula_sfh:[1152:1179]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.16 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1309:1332]\n==test_tabula_th:[1182:1206]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.21 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_th_1957(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[424:447]\n==test_tabula_th:[351:374]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.7 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.77 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_th_1957(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[715:738]\n==test_tabula_sfh:[721:744]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.28 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.35 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_mfh_2100(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[602:626]\n==test_tabula_th:[1219:1243]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_ab_1968(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[528:552]\n==test_tabula_th:[1145:1169]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.22 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_th_1948(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[348:372]\n==test_tabula_th:[726:750]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.34 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.29 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_th_1948(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[638:662]\n==test_tabula_mfh:[1387:1410]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.23 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_ab_1978(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[565:589]\n==test_tabula_mfh:[1422:1445]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.21 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_ab_1957(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1597:1618]\n==test_tabula_sfh:[1640:1664]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.7 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_2100(self):",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1597:1620]\n==test_tabula_sfh:[1605:1628]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.7 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_2100(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[674:693]\n==test_tabula_sfh:[1309:1330]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.21 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[230:249]\n==test_tabula_mfh:[459:478]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1956,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 1.08 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1526:1558]\n==test_tabula_th:[1431:1464]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.17 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_2009(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1260:1278]\n==test_tabula_sfh:[1223:1241]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n            construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[555:573]\n==test_tabula_th:[1135:1153]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n            construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.1 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[518:536]\n==test_tabula_sfh:[1299:1317]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n            construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[1119:1145]\n==test_tabula_th_dk:[991:1014]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.34)), 1)\n# U-value of website is 1.03, but is seems to be wrong\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_adv_retrofit_sfh_dk_1849(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[392:411]\n==test_tabula_th:[321:339]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.88 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.7 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_mfh_1948(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[650:668]\n==test_tabula_sfh:[656:674]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.4 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.9 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_sfh_2009(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1216:1233]\n==test_tabula_sfh:[1221:1238]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1858,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n            construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[775:792]\n==test_tabula_sfh:[781:798]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1858,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n            construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.41 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.35 - 0.17)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[483:500]\n==test_tabula_th:[825:842]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.19 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.23 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[497:515]\n==test_tabula_sfh:[874:892]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.28 - 0.34)), 1)\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_ab_1919(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[516:533]\n==test_tabula_sfh:[1257:1274]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1918,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n            construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[533:552]\n==test_tabula_mfh:[1275:1293]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.22 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_1948(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[389:408]\n==test_tabula_mfh:[986:1004]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.28 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_ab_1957(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[353:372]\n==test_tabula_mfh:[834:852]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.29 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_1948(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[316:335]\n==test_tabula_mfh:[545:563]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.77 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 4.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_ab_1919(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[817:832]\n==test_tabula_sfh:[817:832]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1918,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n            construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.41 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[334:350]\n==test_tabula_sfh:[334:350]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1858,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 2.6 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 2.0 - 0.17)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[663:679]\n==test_tabula_sfh:[1414:1430]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1977,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[160:176]\n==test_tabula_sfh:[370:386]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1918,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.7 - 0.17)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[516:531]\n==test_tabula_mfh:[1258:1273]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1918,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n            construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_data:[3073:3089]\n==test_useconditions:[50:66]\n        prj_test = Project(load_data=True)\n        prj_test.name = \"TestAHUProfiles\"\n\n        prj_test.add_non_residential(\n            method=\"bmvbs\",\n            usage=\"office\",\n            name=\"OfficeBuilding\",\n            year_of_construction=2015,\n            number_of_floors=4,\n            height_of_floors=3.5,\n            net_leased_area=1000.0,\n        )\n\n        prj_test.used_library_calc = \"AixLib\"\n        prj_test.number_of_elements_calc = 2\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1126:1149]\n==test_tabula_th:[1018:1042]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.15 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.17 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_sfh_2015(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1161:1179]\n==test_tabula_th:[941:959]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[429:447]\n==test_tabula_th:[461:479]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.77 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_sfh_1957(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1045:1059]\n==test_tabula_th:[930:944]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1993,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.4 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[605:619]\n==test_tabula_th:[515:529]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1993,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.4 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1051:1074]\n==test_tabula_th:[941:965]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_2001(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1016:1039]\n==test_tabula_th:[905:929]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.21 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.26 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_1994(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1110:1124]\n==test_tabula_th:[1007:1021]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2008,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[669:683]\n==test_tabula_th:[590:604]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2008,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1637:1651]\n==test_tabula_sfh:[1610:1626]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.7 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[995:1018]\n==test_tabula_th_dk:[1026:1049]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.15 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_adv_retrofit_th_dk_1971(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[420:444]\n==test_tabula_th:[798:822]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.23 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.33 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_ab_1968(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[373:387]\n==test_tabula_th:[751:765]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1947,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[195:209]\n==test_tabula_th:[340:354]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1947,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.65 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[518:533]\n==test_tabula_sfh:[1335:1350]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n            construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[456:480]\n==test_tabula_mfh:[946:969]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.23 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.31 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_1978(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[276:299]\n==test_tabula_mfh:[505:528]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 1.08 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_ab_1978(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[481:495]\n==test_tabula_mfh:[970:984]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1977,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.19 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[160:174]\n==test_tabula_mfh:[376:390]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1918,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[345:358]\n==test_tabula_th_dk:[991:1004]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[686:699]\n==test_tabula_th:[601:614]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.28 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1417:1430]\n==test_tabula_th_dk:[1021:1034]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[610:623]\n==test_tabula_th:[526:539]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.6 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.51 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[575:588]\n==test_tabula_th:[491:504]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.65 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[505:518]\n==test_tabula_th:[421:434]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 1.08 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1233:1257]\n==test_tabula_sfh:[1274:1296]\n        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:\n            if \"_1_\" in floor.construction_type:\n\n                assert round(1 / (floor.r_conduc * floor.area),\n                             1) == round((1 / (1 / 0.22 - 0.34)), 1)\n\n            elif \"_2_\" in floor.construction_type:\n\n                assert round(1 / (floor.r_conduc * floor.area),\n                             1) == round((1 / (1 / 0.23 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_1918(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1557:1570]\n==test_tabula_sfh:[1228:1241]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1265:1278]\n==test_tabula_sfh:[1530:1543]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1260:1273]\n==test_tabula_sfh:[1299:1312]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n            construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[792:816]\n==test_tabula_sfh:[834:857]\n        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:\n            if \"_1_\" in floor.construction_type:\n\n                assert round(1 / (floor.r_conduc * floor.area),\n                             1) == round((1 / (1 / 0.29 - 0.34)), 1)\n\n            elif \"_2_\" in floor.construction_type:\n\n                assert round(1 / (floor.r_conduc * floor.area),\n                             1) == round((1 / (1 / 0.32 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_1918(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[819:832]\n==test_tabula_sfh:[783:796]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n            construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.41 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[777:790]\n==test_tabula_sfh:[819:832]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n            construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.41 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1081:1094]\n==test_tabula_sfh:[751:764]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.15 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.17 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[350:375]\n==test_tabula_sfh:[386:412]\n        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:\n            if \"_1_\" in floor.construction_type:\n\n                assert round(1 / (floor.r_conduc * floor.area),\n                             1) == round((1 / (1 / 0.88 - 0.34)), 1)\n\n            elif \"_2_\" in floor.construction_type:\n\n                assert round(1 / (floor.r_conduc * floor.area),\n                             1) == round((1 / (1 / 1.2 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_mfh_1918(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1060:1073]\n==test_tabula_th_dk:[985:999]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.14)), 1)\n\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[665:682]\n==test_tabula_th:[1246:1263]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[389:402]\n==test_tabula_th:[606:619]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.28 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[241:254]\n==test_tabula_th:[386:399]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 1.29 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[171:184]\n==test_tabula_th:[316:329]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.7 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.88 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[629:643]\n==test_tabula_sfh:[1416:1430]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[629:646]\n==test_tabula_mfh:[1413:1430]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[518:531]\n==test_tabula_mfh:[1218:1231]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n            construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[211:224]\n==test_tabula_mfh:[545:558]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.77 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[1008:1028]\n==test_tabula_th_dk:[1101:1119]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_adv_retrofit_sfh_dk_1959(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[971:991]\n==test_tabula_th_dk:[925:943]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_adv_retrofit_sfh_dk_1971(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[736:756]\n==test_tabula_th_dk:[823:841]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_retrofit_th_dk_1997(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[699:719]\n==test_tabula_th_dk:[647:665]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_th_dk_1929(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1491:1503]\n==test_tabula_th:[1431:1443]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1456:1468]\n==test_tabula_th:[1354:1366]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1376:1389]\n==test_tabula_th:[1390:1403]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:\n\n            if \"_1_\" in wall.construction_type:\n                assert round(1 / (wall.r_conduc * wall.area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1580:1593]\n==test_tabula_th:[1265:1279]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_2015(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1545:1558]\n==test_tabula_th:[1229:1243]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_2009(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1510:1523]\n==test_tabula_th:[1192:1206]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_2001(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1475:1488]\n==test_tabula_th:[1155:1169]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_1994(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[860:872]\n==test_tabula_th:[896:908]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.41 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1136:1149]\n==test_tabula_th:[879:893]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_th_1983(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1101:1114]\n==test_tabula_th:[844:858]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_th_1978(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1066:1079]\n==test_tabula_th:[808:822]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_th_1968(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1031:1044]\n==test_tabula_th:[772:786]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_th_1957(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[844:857]\n==test_tabula_th:[736:750]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_sfh_1948(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1553:1565]\n==test_tabula_th:[1318:1330]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1623:1635]\n==test_tabula_sfh:[1596:1608]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.1 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1572:1585]\n==test_tabula_sfh:[1440:1453]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_2015(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1537:1550]\n==test_tabula_sfh:[1400:1413]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_2009(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1502:1515]\n==test_tabula_sfh:[1360:1373]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_2001(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1467:1480]\n==test_tabula_sfh:[1319:1332]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_1994(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1432:1445]\n==test_tabula_sfh:[1283:1296]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_1948(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1397:1410]\n==test_tabula_sfh:[1243:1256]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_1918(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[839:852]\n==test_tabula_sfh:[803:816]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_1948(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1201:1215]\n==test_tabula_sfh:[1206:1220]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.1 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_1859(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[760:774]\n==test_tabula_sfh:[766:780]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.1 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_1859(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1131:1144]\n==test_tabula_sfh:[996:1009]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_sfh_1983(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1096:1109]\n==test_tabula_sfh:[959:972]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_2009(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1061:1074]\n==test_tabula_sfh:[879:892]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_2001(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[991:1004]\n==test_tabula_sfh:[919:932]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_sfh_1968(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[725:738]\n==test_tabula_sfh:[1171:1184]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_sfh_2100(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[434:448]\n==test_tabula_sfh:[545:559]\n        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:\n            if \"_1_\" in floor.construction_type:\n\n                assert round(1 / (floor.r_conduc * floor.area),\n                             1) == round((1 / (1 / 0.77 - 0.34)), 1)\n\n            elif \"_2_\" in floor.construction_type:\n\n                assert round(1 / (floor.r_conduc * floor.area),\n                             1) == round((1 / (1 / 1.0 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[671:683]\n==test_tabula_sfh:[712:724]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1112:1130]\n==test_tabula_sfh_dk:[1124:1145]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_adv_retrofit_ab_dk_1977(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1035:1053]\n==test_tabula_sfh_dk:[1087:1107]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_adv_retrofit_ab_dk_1959(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[375:387]\n==test_tabula_th:[789:801]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[197:209]\n==test_tabula_th:[377:389]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.65 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[629:641]\n==test_tabula_mfh:[1448:1460]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[648:662]\n==test_tabula_mfh:[1362:1375]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_ab_1978(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[612:626]\n==test_tabula_mfh:[1327:1340]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_ab_1968(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[575:589]\n==test_tabula_mfh:[1280:1293]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_ab_1957(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[538:552]\n==test_tabula_mfh:[1244:1257]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_1918(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[501:515]\n==test_tabula_mfh:[1026:1039]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_ab_1919(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[466:480]\n==test_tabula_mfh:[921:934]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_ab_1978(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[430:444]\n==test_tabula_mfh:[956:969]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_1978(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[394:408]\n==test_tabula_mfh:[886:899]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_ab_1957(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[447:459]\n==test_tabula_mfh:[972:984]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.19 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[358:372]\n==test_tabula_mfh:[803:816]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_ab_1948(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[321:335]\n==test_tabula_mfh:[585:598]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 4.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_mfh_1994(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[181:194]\n==test_tabula_mfh:[361:375]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_mfh_1918(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[302:314]\n==test_tabula_mfh:[496:508]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.51 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[267:279]\n==test_tabula_mfh:[531:543]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.51 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1185:1196]\n==test_tabula_th:[1088:1099]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2099,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.21)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1594:1605]\n==test_tabula_th:[1465:1476]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2014,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.1 - 0.21)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1150:1161]\n==test_tabula_th:[1043:1054]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2014,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.16 - 0.21)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[710:721]\n==test_tabula_th:[625:636]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2014,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.21)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1524:1535]\n==test_tabula_th:[1388:1399]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2000,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1080:1091]\n==test_tabula_th:[966:977]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2000,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.35 - 0.21)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[640:651]\n==test_tabula_th:[550:561]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2000,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.35 - 0.21)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[817:827]\n==test_tabula_th:[714:724]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1918,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n            construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1621:1632]\n==test_tabula_th:[1510:1521]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2099,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.1 - 0.21)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[516:526]\n==test_tabula_th:[1133:1143]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1918,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n            construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[590:600]\n==test_tabula_sfh:[1333:1343]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1956,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n            construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[553:563]\n==test_tabula_sfh:[1297:1307]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1947,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n            construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[336:346]\n==test_tabula_mfh:[817:827]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1918,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n            construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_th:[596:609]\n==test_tabula_th_dk:[508:521]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[847:873]\n==test_tabula_th_dk:[713:736]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.4 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n# U-value of website is 1.03, but is seems to be wrong\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_retrofit_sfh_dk_1849(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[545:565]\n==test_tabula_th_dk:[342:360]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 1.5 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.7 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_standard_sfh_dk_1929(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[1077:1085]\n==test_tabula_th_dk:[910:918]\n        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:\n            if \"_1_\" in wall.construction_type:\n                assert round(\n                    1 / (wall.r_conduc * wall.area),\n                    1) == round((1 / (1 / 0.12 - 0.17)), 1)\n            if \"_2_\" in wall.construction_type:\n                assert round(\n                    1 / (wall.r_conduc * wall.area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[805:813]\n==test_tabula_th_dk:[632:640]\n        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:\n            if \"_1_\" in wall.construction_type:\n                assert round(\n                    1 / (wall.r_conduc * wall.area),\n                    1) == round((1 / (1 / 0.4 - 0.17)), 1)\n            if \"_2_\" in wall.construction_type:\n                assert round(\n                    1 / (wall.r_conduc * wall.area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[535:543]\n==test_tabula_th_dk:[292:300]\n        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:\n            if \"_1_\" in wall.construction_type:\n                assert round(\n                    1 / (wall.r_conduc * wall.area),\n                    1) == round((1 / (1 / 1.6 - 0.17)), 1)\n            if \"_2_\" in wall.construction_type:\n                assert round(\n                    1 / (wall.r_conduc * wall.area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[1163:1172]\n==test_tabula_th_dk:[925:941]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1420:1430]\n==test_tabula_th_dk:[1021:1031]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[691:701]\n==test_tabula_th_dk:[753:769]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.28 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[869:892]\n==test_tabula_th:[762:786]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.25 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.28 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_th_1957(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[510:528]\n==test_tabula_th:[426:444]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 1.08 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_sfh_1978(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[515:528]\n==test_tabula_th:[536:549]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_sfh_1978(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[475:488]\n==test_tabula_th:[466:479]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_th_1983(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[434:447]\n==test_tabula_th:[501:514]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_th_1994(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[398:412]\n==test_tabula_th:[431:444]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_th_1978(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[355:369]\n==test_tabula_th:[396:409]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_th_1968(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[675:684]\n==test_tabula_th:[590:599]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2008,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[529:538]\n==test_tabula_th:[445:454]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1977,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1374:1383]\n==test_tabula_th:[1244:1253]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1967,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[933:942]\n==test_tabula_th:[823:832]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1967,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[489:498]\n==test_tabula_th:[410:419]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1967,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1352:1375]\n==test_tabula_th:[1219:1243]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_1968(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[834:852]\n==test_tabula_th:[731:750]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.29 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_1948(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[361:375]\n==test_tabula_th:[361:374]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_mfh_1918(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[704:713]\n==test_tabula_th:[625:634]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2014,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[634:643]\n==test_tabula_th:[550:559]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2000,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[599:608]\n==test_tabula_th:[515:524]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1993,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[564:573]\n==test_tabula_th:[480:489]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1982,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[900:909]\n==test_tabula_th:[787:796]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1956,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[459:468]\n==test_tabula_th:[375:384]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1956,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1487:1500]\n==test_tabula_sfh_dk:[1114:1127]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1382:1395]\n==test_tabula_sfh_dk:[1152:1166]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n        # U-value of website is 0.33, but is seems to be wrong\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1166:1177]\n==test_tabula_sfh:[1650:1664]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.7 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_2100(self):",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1166:1179]\n==test_tabula_sfh:[1615:1628]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.7 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_2100(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1497:1515]\n==test_tabula_sfh:[1505:1523]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.19 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_2001(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1422:1445]\n==test_tabula_sfh:[1309:1332]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.21 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_1983(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1311:1322]\n==test_tabula_sfh:[1345:1356]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:\n\n            if \"_1_\" in floor.construction_type:\n                assert round(1 / (floor.r_conduc * floor.area),\n                             1) == round((1 / (1 / 0.21 - 0.34)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1527:1550]\n==test_tabula_sfh:[1535:1558]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.17 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_2009(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1223:1233]\n==test_tabula_sfh:[1530:1540]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1091:1109]\n==test_tabula_sfh:[1096:1114]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.21 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_2009(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1056:1074]\n==test_tabula_sfh:[1061:1079]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_sfh_2001(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1180:1189]\n==test_tabula_sfh:[1185:1194]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2099,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1586:1595]\n==test_tabula_sfh:[1594:1603]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2014,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1145:1154]\n==test_tabula_sfh:[1150:1159]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2014,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1110:1119]\n==test_tabula_sfh:[1115:1124]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2008,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1516:1525]\n==test_tabula_sfh:[1524:1533]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2000,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1075:1084]\n==test_tabula_sfh:[1080:1089]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2000,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1481:1490]\n==test_tabula_sfh:[1489:1498]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1993,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1040:1049]\n==test_tabula_sfh:[1045:1054]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1993,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1446:1455]\n==test_tabula_sfh:[1454:1463]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1982,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1005:1014]\n==test_tabula_sfh:[1010:1019]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1982,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1030:1053]\n==test_tabula_th_dk:[955:978]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_adv_retrofit_th_dk_1949(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[601:614]\n==test_tabula_th_dk:[591:604]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[941:950]\n==test_tabula_sfh_dk:[1072:1081]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.14)), 1)\n\n        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:\n            if \"_1_\" in wall.construction_type:\n                assert round(\n                    1 / (wall.r_conduc * wall.area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1000:1018]\n==test_tabula_sfh_dk:[1045:1065]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.15 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_adv_retrofit_ab_dk_1949(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[807:825]\n==test_tabula_sfh_dk:[815:835]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_retrofit_ab_dk_1977(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[790:799]\n==test_tabula_sfh_dk:[800:809]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.14)), 1)\n\n        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:\n            if \"_1_\" in wall.construction_type:\n                assert round(\n                    1 / (wall.r_conduc * wall.area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[695:713]\n==test_tabula_sfh_dk:[773:793]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.29 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_retrofit_ab_dk_1949(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[795:805]\n==test_tabula_sfh_dk:[961:969]\n        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:\n            if \"_1_\" in wall.construction_type:\n                assert round(\n                    1 / (wall.r_conduc * wall.area),\n                    1) == round((1 / (1 / 0.1 - 0.17)), 1)\n\n            if \"_2_\" in wall.construction_type:\n\n                assert round(\n                    1 / (wall.r_conduc * wall.area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[414:430]\n==test_tabula_sfh:[429:439]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.77 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_standard_ab_dk_1971(self):",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[633:646]\n==test_tabula_th_dk:[1021:1034]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[560:573]\n==test_tabula_th_dk:[1056:1069]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.1 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[160:169]\n==test_tabula_th:[305:314]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1918,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[461:480]\n==test_tabula_sfh:[954:972]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.31 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_sfh_1978(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[481:490]\n==test_tabula_sfh:[973:982]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1977,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[409:418]\n==test_tabula_sfh:[893:902]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1956,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[230:239]\n==test_tabula_sfh:[448:457]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1956,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[373:382]\n==test_tabula_sfh:[858:867]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1947,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[195:204]\n==test_tabula_sfh:[413:422]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1947,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[597:626]\n==test_tabula_mfh:[1347:1375]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.11 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_ab_1968(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[684:693]\n==test_tabula_mfh:[1244:1255]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_1918(self):",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[251:264]\n==test_tabula_mfh:[480:493]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_mfh_1968(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[216:229]\n==test_tabula_mfh:[445:458]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_mfh_1957(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[300:309]\n==test_tabula_mfh:[529:538]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1977,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[627:636]\n==test_tabula_mfh:[1376:1385]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1967,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[445:454]\n==test_tabula_mfh:[935:944]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1967,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[265:274]\n==test_tabula_mfh:[494:503]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1967,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==helptest:[167:177]\n==test_data:[2670:2681]\n            win.shading_max_irr = 180.0\n\n            win_layer = Layer(parent=win)\n            win_layer.id = 1\n            win_layer.thickness = 0.024\n\n            win_material = Material(win_layer)\n            win_material.name = \"GlasWindow\"\n            win_material.thermal_conduc = 0.067\n            win_material.transmittance = 0.9\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_th:[1255:1263]\n==test_tabula_th_dk:[1061:1069]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_th:[1182:1190]\n==test_tabula_th_dk:[1026:1034]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_th:[941:949]\n==test_tabula_th_dk:[783:791]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_th:[946:954]\n==test_tabula_th_dk:[718:726]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_th:[601:609]\n==test_tabula_th_dk:[818:826]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_th:[531:539]\n==test_tabula_th_dk:[413:421]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.51 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[1114:1122]\n==test_tabula_th_dk:[1091:1099]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[842:850]\n==test_tabula_th_dk:[813:821]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[763:771]\n==test_tabula_th_dk:[586:594]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[572:580]\n==test_tabula_th_dk:[473:481]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.6 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[1008:1016]\n==test_tabula_th_dk:[823:831]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[971:979]\n==test_tabula_th_dk:[647:655]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1161:1169]\n==test_tabula_th_dk:[748:756]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[686:694]\n==test_tabula_th_dk:[478:486]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1640:1648]\n==test_tabula_th:[1327:1335]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1304:1312]\n==test_tabula_th:[1435:1443]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1264:1272]\n==test_tabula_th:[1358:1366]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1228:1236]\n==test_tabula_th:[1322:1330]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1596:1605]\n==test_tabula_th:[1512:1521]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.1 - 0.21)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1456:1465]\n==test_tabula_th:[1390:1399]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1309:1317]\n==test_tabula_th:[1145:1153]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1259:1267]\n==test_tabula_th:[1209:1217]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n            construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1223:1231]\n==test_tabula_th:[1135:1143]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n            construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1540:1548]\n==test_tabula_th:[1023:1031]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.17 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1091:1099]\n==test_tabula_th:[1018:1026]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.15 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[788:796]\n==test_tabula_th:[900:908]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.41 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[935:944]\n==test_tabula_th:[896:905]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.41 - 0.21)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[783:791]\n==test_tabula_th:[716:724]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n            construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[734:744]\n==test_tabula_th:[1076:1087]\n                             1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_th_2100(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1051:1059]\n==test_tabula_th:[521:529]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.4 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[611:619]\n==test_tabula_th:[936:944]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.4 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1166:1174]\n==test_tabula_sfh_dk:[852:861]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n# U-value of website is 1.03, but is seems to be wrong\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[793:801]\n==test_tabula_sfh_dk:[768:776]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.35 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1191:1199]\n==test_tabula_sfh_dk:[726:734]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1605:1613]\n==test_tabula_sfh_dk:[1119:1127]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1645:1653]\n==test_tabula_sfh_dk:[891:899]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1610:1618]\n==test_tabula_sfh_dk:[736:744]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1270:1278]\n==test_tabula_th_dk:[955:963]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1452:1460]\n==test_tabula_th_dk:[1021:1029]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1021:1029]\n==test_tabula_th_dk:[682:690]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.26 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1126:1134]\n==test_tabula_th_dk:[518:526]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.18 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1527:1550]\n==test_tabula_th:[1440:1464]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.17 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_th_2015(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1632:1640]\n==test_tabula_th:[1363:1371]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.11 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1623:1632]\n==test_tabula_th:[1467:1476]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.1 - 0.21)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1275:1283]\n==test_tabula_th:[987:995]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.22 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1042:1051]\n==test_tabula_th:[1045:1054]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.16 - 0.21)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1204:1215]\n==test_tabula_th:[1121:1132]\n            1) == round((1 / (1 / 1.1 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_1859(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[763:774]\n==test_tabula_th:[702:713]\n            1) == round((1 / (1 / 1.1 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_1859(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[728:738]\n==test_tabula_th:[658:668]\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_mfh_2100(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[886:894]\n==test_tabula_th:[611:619]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[675:683]\n==test_tabula_th:[1013:1021]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[505:513]\n==test_tabula_th:[386:394]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[545:553]\n==test_tabula_th:[356:364]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.77 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[671:680]\n==test_tabula_th:[627:636]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.21)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1487:1495]\n==test_tabula_sfh_dk:[1152:1160]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1382:1390]\n==test_tabula_sfh_dk:[1035:1043]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1422:1430]\n==test_tabula_sfh_dk:[1157:1166]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n        # U-value of website is 0.33, but is seems to be wrong\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1627:1635]\n==test_tabula_sfh_dk:[998:1006]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.1 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1051:1059]\n==test_tabula_sfh_dk:[885:894]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.17)), 1)\n        # U-value of website is 0.33, but is seems to be wrong\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1056:1064]\n==test_tabula_sfh_dk:[815:823]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[755:763]\n==test_tabula_sfh_dk:[773:781]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.29 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[610:618]\n==test_tabula_sfh_dk:[461:469]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.6 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1462:1470]\n==test_tabula_sfh_dk:[429:437]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1597:1605]\n==test_tabula_sfh_dk:[345:353]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1637:1645]\n==test_tabula_sfh_dk:[699:707]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1602:1610]\n==test_tabula_sfh_dk:[313:321]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1522:1530]\n==test_tabula_sfh_dk:[303:311]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.11 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1186:1194]\n==test_tabula_sfh:[1600:1608]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.1 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1191:1199]\n==test_tabula_sfh:[1500:1508]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.11 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1492:1500]\n==test_tabula_sfh:[1465:1473]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1553:1585]\n==test_tabula_sfh:[1526:1558]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.17 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_2015(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1553:1565]\n==test_tabula_sfh:[1456:1468]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1553:1562]\n==test_tabula_sfh:[1376:1385]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1311:1320]\n==test_tabula_sfh:[1269:1277]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:\n            if \"_1_\" in floor.construction_type:\n\n                assert round(1 / (floor.r_conduc * floor.area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1527:1535]\n==test_tabula_sfh:[1233:1241]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1265:1273]\n==test_tabula_sfh:[1495:1503]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1223:1231]\n==test_tabula_sfh:[1460:1468]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1357:1365]\n==test_tabula_sfh:[1061:1069]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1016:1039]\n==test_tabula_sfh:[1021:1044]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.21 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.26 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_1994(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[951:969]\n==test_tabula_sfh:[954:972]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.31 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_sfh_1978(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[870:879]\n==test_tabula_sfh:[829:837]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.25 - 0.17)), 1)\n\n        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:\n            if \"_1_\" in floor.construction_type:\n                assert round(1 / (floor.r_conduc * floor.area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[680:688]\n==test_tabula_sfh:[869:877]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.25 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[824:832]\n==test_tabula_sfh:[899:907]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.41 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[782:790]\n==test_tabula_sfh:[864:872]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.41 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1567:1575]\n==test_tabula_sfh:[1131:1139]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.17 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1532:1540]\n==test_tabula_sfh:[761:769]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.17 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1116:1124]\n==test_tabula_sfh:[716:724]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[690:698]\n==test_tabula_sfh:[696:704]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[615:623]\n==test_tabula_sfh:[621:629]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.51 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[575:588]\n==test_tabula_sfh:[581:594]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.65 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[429:438]\n==test_tabula_sfh:[381:391]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.7 - 0.17)), 1)\n\n        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:\n            if \"_1_\" in floor.construction_type:\n\n                assert round(1 / (floor.r_conduc * floor.area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[990:998]\n==test_tabula_th_dk:[985:994]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.14)), 1)\n\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[720:728]\n==test_tabula_th_dk:[672:680]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.11 - 0.14)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1112:1120]\n==test_tabula_th_dk:[596:604]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1035:1043]\n==test_tabula_th_dk:[561:569]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[339:347]\n==test_tabula_sfh_dk:[615:624]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.62 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[409:417]\n==test_tabula_sfh_dk:[577:585]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[344:352]\n==test_tabula_sfh_dk:[503:511]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.52 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[312:327]\n==test_tabula_sfh_dk:[432:449]\n            1) == round((1 / (1 / 0.2 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.7 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_standard_sfh_dk_1971(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[606:614]\n==test_tabula_sfh_dk:[350:358]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1000:1008]\n==test_tabula_sfh:[1201:1209]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.15 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[566:574]\n==test_tabula_sfh:[651:659]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1065:1073]\n==test_tabula_mfh:[1457:1465]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1030:1038]\n==test_tabula_mfh:[1156:1164]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[760:768]\n==test_tabula_mfh:[645:653]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.4 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[536:544]\n==test_tabula_mfh:[1497:1505]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.19 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[461:469]\n==test_tabula_th_dk:[788:796]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.31 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[497:504]\n==test_tabula_th_dk:[753:761]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.28 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[518:526]\n==test_tabula_th:[1172:1180]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n            construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[358:366]\n==test_tabula_th:[576:584]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.6 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[674:682]\n==test_tabula_sfh_dk:[1003:1011]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[425:433]\n==test_tabula_sfh_dk:[387:395]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.33 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[679:687]\n==test_tabula_sfh:[1096:1104]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.21 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[466:474]\n==test_tabula_sfh:[1171:1179]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[430:438]\n==test_tabula_sfh:[731:739]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[389:397]\n==test_tabula_sfh:[691:699]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.28 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[281:289]\n==test_tabula_sfh:[510:518]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 1.08 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[316:324]\n==test_tabula_sfh:[429:437]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.77 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[171:179]\n==test_tabula_sfh:[424:432]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.7 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[570:578]\n==test_tabula_mfh:[1091:1099]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.21 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[560:568]\n==test_tabula_mfh:[1151:1159]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.1 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[638:646]\n==test_tabula_mfh:[1352:1360]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[602:610]\n==test_tabula_mfh:[1387:1395]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[565:573]\n==test_tabula_mfh:[1121:1129]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[523:531]\n==test_tabula_mfh:[1557:1565]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.14 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[592:600]\n==test_tabula_mfh:[1260:1268]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n            construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[555:563]\n==test_tabula_mfh:[1218:1226]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n            construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[492:500]\n==test_tabula_mfh:[946:954]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.23 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[456:464]\n==test_tabula_mfh:[911:919]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.23 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[394:402]\n==test_tabula_mfh:[725:733]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[379:387]\n==test_tabula_mfh:[710:718]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[338:346]\n==test_tabula_mfh:[777:785]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n            construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[276:284]\n==test_tabula_mfh:[470:478]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[321:329]\n==test_tabula_mfh:[445:453]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[286:294]\n==test_tabula_mfh:[620:628]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[251:259]\n==test_tabula_mfh:[550:558]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[216:224]\n==test_tabula_mfh:[585:593]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[176:184]\n==test_tabula_mfh:[392:400]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.88 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[643:651]\n==test_tabula_ab_dk:[765:773]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.23 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[607:615]\n==test_tabula_ab_dk:[807:815]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[533:541]\n==test_tabula_ab_dk:[571:579]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.22 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[528:536]\n==test_tabula_ab_dk:[995:1003]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[420:428]\n==test_tabula_ab_dk:[725:733]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.23 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[384:392]\n==test_tabula_ab_dk:[601:609]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.24 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[353:361]\n==test_tabula_ab_dk:[695:703]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.29 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[348:356]\n==test_tabula_ab_dk:[531:539]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.34 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[241:249]\n==test_tabula_ab_dk:[374:382]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[211:219]\n==test_tabula_ab_dk:[414:422]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.77 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[0:15]\n==test_tabula_ab_dk:[0:15]\nfrom teaser.project import Project\nprj = Project(False)\n\n\nclass Test_tabula_ab(object):\n    global prj\n\n    def test_tabula_de_ab_dk_area_1849(self):\n        \"\"\"\n        Test for area estimation of tabula th\n        \"\"\"\n        prj.set_default()\n        prj.data = None\n\n        prj.add_residential(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_th:[628:636]\n==test_tabula_th_dk:[540:548]\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.21)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_th:[593:609]\n==test_tabula_th_dk:[540:564]\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[392:407]\n==test_tabula_th_dk:[601:618]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.5 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_standard_sfh_dk_1977(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[318:333]\n==test_tabula_th_dk:[566:579]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.5 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_th_dk_2009(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[956:963]\n==test_tabula_th:[1471:1479]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.1 - 0.21)), 1)\n\n        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:\n\n            if \"_1_\" in wall.construction_type:",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1188:1196]\n==test_tabula_th_dk:[880:894]\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.21)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1631:1638]\n==test_tabula_th:[1246:1253]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1187:1194]\n==test_tabula_th:[896:903]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1152:1159]\n==test_tabula_th:[861:868]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1117:1124]\n==test_tabula_th:[825:832]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1082:1089]\n==test_tabula_th:[789:796]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1047:1054]\n==test_tabula_th:[753:760]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[666:674]\n==test_tabula_th:[581:589]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_th_2008(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[631:639]\n==test_tabula_th:[401:409]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_sfh_2001(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[596:604]\n==test_tabula_th:[366:374]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_sfh_1994(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[520:528]\n==test_tabula_th:[331:339]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_th_1948(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[747:754]\n==test_tabula_th:[482:489]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[712:719]\n==test_tabula_th:[447:454]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[677:684]\n==test_tabula_th:[412:419]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[642:649]\n==test_tabula_th:[377:384]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[607:614]\n==test_tabula_th:[342:349]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[572:579]\n==test_tabula_th:[307:314]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1379:1388]\n==test_tabula_th_dk:[1158:1167]\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.21)), 1)\n\n        assert round(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[672:683]\n==test_tabula_th_dk:[540:551]\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.2 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[926:934]\n==test_tabula_th:[1123:1132]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_1968(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[891:899]\n==test_tabula_th:[704:713]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_th_1919(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1623:1630]\n==test_tabula_sfh:[1561:1568]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1588:1595]\n==test_tabula_sfh:[1526:1533]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1553:1560]\n==test_tabula_sfh:[1596:1603]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1518:1525]\n==test_tabula_sfh:[1456:1463]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1483:1490]\n==test_tabula_sfh:[1416:1423]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1448:1455]\n==test_tabula_sfh:[1491:1498]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1413:1420]\n==test_tabula_sfh:[1376:1383]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1241:1257]\n==test_tabula_sfh:[1357:1373]\n                assert round(1 / (floor.r_conduc * floor.area),\n                             1) == round((1 / (1 / 0.23 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_1968(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[875:884]\n==test_tabula_sfh:[909:917]\n        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:\n\n            if \"_1_\" in floor.construction_type:\n                assert round(1 / (floor.r_conduc * floor.area),\n                             1) == round((1 / (1 / 0.28 - 0.34)), 1)\n\n            elif \"_2_\" in floor.construction_type:\n                assert round(1 / (floor.r_conduc * floor.area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1182:1189]\n==test_tabula_sfh:[1012:1019]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1147:1154]\n==test_tabula_sfh:[975:982]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1112:1119]\n==test_tabula_sfh:[935:942]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1077:1084]\n==test_tabula_sfh:[895:902]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[972:979]\n==test_tabula_sfh:[860:867]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[739:748]\n==test_tabula_sfh:[745:754]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2099,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[660:668]\n==test_tabula_sfh:[701:709]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_sfh_2015(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[520:528]\n==test_tabula_sfh:[480:488]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_mfh_1978(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[485:493]\n==test_tabula_sfh:[439:447]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_sfh_1957(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[450:458]\n==test_tabula_sfh:[403:412]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_sfh_1948(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[704:713]\n==test_tabula_sfh:[710:719]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2014,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[669:678]\n==test_tabula_sfh:[675:684]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2008,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[634:643]\n==test_tabula_sfh:[640:649]\n            name=\"ResidentialBuilding\",\n            year_of_construction=2000,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[599:608]\n==test_tabula_sfh:[605:614]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1993,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[564:573]\n==test_tabula_sfh:[570:579]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1982,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[529:538]\n==test_tabula_sfh:[529:538]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1977,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[494:503]\n==test_tabula_sfh:[489:498]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1967,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[459:468]\n==test_tabula_sfh:[448:457]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1956,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[376:390]\n==test_tabula_sfh:[370:384]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1918,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.21)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[741:748]\n==test_tabula_sfh:[531:538]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[706:713]\n==test_tabula_sfh:[491:498]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[671:678]\n==test_tabula_sfh:[450:457]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[636:643]\n==test_tabula_sfh:[415:422]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[601:608]\n==test_tabula_sfh:[372:379]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[531:538]\n==test_tabula_sfh:[336:343]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[775:782]\n==test_tabula_sfh:[1716:1723]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1858,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,\n            construction_type=\"tabula_retrofit\")\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[334:341]\n==test_tabula_sfh:[17:24]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1858,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1205:1219]\n==test_tabula_th_dk:[965:978]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n    #\n    #     # assert round(\n    #     #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n    #     #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n    #     #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_adv_retrofit_ab_dk_2009(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1117:1130]\n==test_tabula_th_dk:[930:943]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_adv_retrofit_ab_dk_1977(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[541:554]\n==test_tabula_th_dk:[347:360]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.7 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_th_dk_1949(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[444:452]\n==test_tabula_th:[561:569]\n        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:\n\n            if \"_1_\" in wall.construction_type:\n                assert round(1 / (wall.r_conduc * wall.area),\n                             1) == round((1 / (1 / 0.6 - 0.17)), 1)\n\n            if \"_2_\" in wall.construction_type:\n                assert round(1 / (wall.r_conduc * wall.area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1180:1193]\n==test_tabula_sfh_dk:[1130:1145]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n    #\n    #     # assert round(\n    #     #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n    #     #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n    #     #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_adv_retrofit_ab_dk_2005(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1154:1167]\n==test_tabula_sfh_dk:[1092:1107]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_adv_retrofit_sfh_dk_1929(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1075:1088]\n==test_tabula_sfh_dk:[1050:1065]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_adv_retrofit_sfh_dk_1949(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1040:1053]\n==test_tabula_sfh_dk:[1013:1028]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_adv_retrofit_sfh_dk_1959(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1005:1018]\n==test_tabula_sfh_dk:[976:991]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_adv_retrofit_sfh_dk_1971(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[970:983]\n==test_tabula_sfh_dk:[934:949]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_adv_retrofit_ab_dk_1929(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[875:888]\n==test_tabula_sfh_dk:[858:873]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_retrofit_sfh_dk_1849(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[849:862]\n==test_tabula_sfh_dk:[820:835]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n            # assert round(\n            #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n            #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    # #\n    def test_tabula_uvalue_retrofit_ab_dk_1997(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[812:825]\n==test_tabula_sfh_dk:[896:912]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------------------------------------------------------------------------------\n#U-value adv retrofit\n\n    def test_tabula_uvalue_adv_retrofit_sfh_dk_1997(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[770:783]\n==test_tabula_sfh_dk:[778:793]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_retrofit_ab_dk_1971(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[735:748]\n==test_tabula_sfh_dk:[741:756]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_retrofit_ab_dk_1959(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[700:713]\n==test_tabula_sfh_dk:[704:719]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_retrofit_sfh_dk_1971(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[665:678]\n==test_tabula_sfh_dk:[667:682]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.4 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_retrofit_sfh_dk_1977(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[506:519]\n==test_tabula_sfh_dk:[626:645]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    # #\n    def test_tabula_uvalue_standard_ab_dk_1997(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[419:432]\n==test_tabula_sfh_dk:[508:523]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_standard_sfh_dk_1949(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[384:397]\n==test_tabula_sfh_dk:[471:486]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.8 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_standard_sfh_dk_1959(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[459:472]\n==test_tabula_sfh_dk:[588:603]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.7 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_standard_ab_dk_1977(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[349:362]\n==test_tabula_sfh_dk:[434:449]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.7 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)\n    #\n    def test_tabula_uvalue_standard_ab_dk_1949(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[314:327]\n==test_tabula_sfh_dk:[550:565]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 2.7 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_standard_sfh_dk_1929(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[653:662]\n==test_tabula_th:[1500:1509]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_th_2100(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[617:626]\n==test_tabula_sfh:[1620:1628]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_2100(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[506:515]\n==test_tabula_sfh:[1211:1220]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_ab_1919(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[471:480]\n==test_tabula_sfh:[771:780]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_ab_1978(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[291:299]\n==test_tabula_sfh:[360:369]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_sfh_1918(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[665:672]\n==test_tabula_mfh:[1378:1385]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[629:636]\n==test_tabula_mfh:[1343:1350]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[580:589]\n==test_tabula_mfh:[1612:1620]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_2100(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[543:552]\n==test_tabula_mfh:[1171:1179]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_mfh_2100(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[435:444]\n==test_tabula_mfh:[1206:1215]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_1859(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[399:408]\n==test_tabula_mfh:[765:774]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_ab_1957(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[483:490]\n==test_tabula_mfh:[1042:1049]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[447:454]\n==test_tabula_mfh:[1007:1014]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[411:418]\n==test_tabula_mfh:[937:944]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[375:382]\n==test_tabula_mfh:[902:909]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[256:264]\n==test_tabula_mfh:[695:703]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_mfh_2015(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[221:229]\n==test_tabula_mfh:[366:375]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_ab_1957(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[186:194]\n==test_tabula_mfh:[402:411]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 3.0 - 0.17)), 1)\n\n    def test_tabula_uvalue_standard_ab_1948(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[302:309]\n==test_tabula_mfh:[566:573]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[267:274]\n==test_tabula_mfh:[461:468]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[232:239]\n==test_tabula_mfh:[496:503]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[197:204]\n==test_tabula_mfh:[378:385]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[162:169]\n==test_tabula_mfh:[336:343]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_examples:[6:15]\n==test_simulation_export:[6:15]\nfrom teaser.logic import utilities\nfrom teaser.project import Project\nimport math\nimport os\nimport warnings as warnings\n\nprj = Project(True)\n\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==helptest:[160:166]\n==test_data:[2663:2669]\n            win.inner_convection = 1.7\n            win.inner_radiation = 5.0\n            win.outer_convection = 20.0\n            win.outer_radiation = 5.0\n            win.g_value = 0.789\n            win.a_conv = 0.03",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_th:[1279:1284]\n==test_tabula_th_dk:[1084:1089]\n            usage='terraced_house',\n            name=\"ResidentialBuilding\",\n            year_of_construction=1977,\n            number_of_floors=2,\n            height_of_floors=3.2,",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_th:[858:863]\n==test_tabula_th_dk:[806:811]\n            usage='terraced_house',\n            name=\"ResidentialBuilding\",\n            year_of_construction=1977,\n            number_of_floors=2,\n            height_of_floors=3.2,",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_th:[444:449]\n==test_tabula_th_dk:[466:471]\n            usage='terraced_house',\n            name=\"ResidentialBuilding\",\n            year_of_construction=1977,\n            number_of_floors=2,\n            height_of_floors=3.2,",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_th:[132:137]\n==test_tabula_th_dk:[161:166]\n            usage='terraced_house',\n            name=\"ResidentialBuilding\",\n            year_of_construction=1977,\n            number_of_floors=2,\n            height_of_floors=3.2,",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[1111:1117]\n==test_tabula_th_dk:[982:988]\n            height_of_floors=3.2,\n            net_leased_area=95, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[1035:1041]\n==test_tabula_th_dk:[1161:1167]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.21)), 1)\n\n        assert round(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[953:959]\n==test_tabula_th_dk:[947:953]\n            height_of_floors=3.2,\n            net_leased_area=117, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[839:845]\n==test_tabula_th_dk:[704:710]\n            height_of_floors=3.2,\n            net_leased_area=95, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[726:732]\n==test_tabula_th_dk:[848:864]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.21)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n        #     1) == round((1 / (1 / 0.3 - 0.17)), 1)\n        #\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n        #     1) == round((1 / (1 / 0.18 - 0.34)), 1)\n\n        assert round(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[686:692]\n==test_tabula_th_dk:[669:675]\n            height_of_floors=3.2,\n            net_leased_area=117, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[569:575]\n==test_tabula_th_dk:[364:370]\n            height_of_floors=3.2,\n            net_leased_area=95)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[969:991]\n==test_tabula_th_dk:[1099:1119]\n                    1) == round((1 / (1 / 0.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.9 - 0.17)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)\n\n#----------------------------------------------------------------------------------\n\n    def test_tabula_uvalue_adv_retrofit_sfh_dk_1971(self):\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[969:979]\n==test_tabula_th_dk:[821:831]\n                    1) == round((1 / (1 / 0.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[411:417]\n==test_tabula_th_dk:[329:335]\n            height_of_floors=3.2,\n            net_leased_area=117)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[246:251]\n==test_tabula_th_dk:[29:34]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].ground_floors), 1) == 66\n        assert round(\n            sum(wall.area for wall in",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh_dk:[122:127]\n==test_tabula_th_dk:[261:266]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].ground_floors), 1) == 118\n        assert round(\n            sum(wall.area for wall in",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[106:112]\n==test_tabula_th_dk:[164:170]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=111)\n\n        assert round(\n            sum(wall.area for wall in",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1608:1615]\n==test_tabula_th:[1529:1536]\n                             1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1358:1373]\n==test_tabula_th:[1263:1279]\n                             1) == round((1 / (1 / 0.23 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_1968(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1199:1206]\n==test_tabula_th:[1107:1114]\n                             1) == round((1 / (1 / 0.15 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.15 - 0.34)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[222:228]\n==test_tabula_th:[77:83]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=150)\n\n        assert round(\n            sum(wall.area for wall in",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[296:306]\n==test_tabula_th:[122:132]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_de_th_area_1977(self):\n        \"\"\"\n        Test for area estimation of tabula th\n        \"\"\"\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[267:277]\n==test_tabula_th:[93:103]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_de_th_area_1968(self):\n        \"\"\"\n        Test for area estimation of tabula th\n        \"\"\"\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[238:248]\n==test_tabula_th:[64:74]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_de_th_area_1956(self):\n        \"\"\"\n        Test for area estimation of tabula th\n        \"\"\"\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[209:219]\n==test_tabula_th:[35:45]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_de_th_area_1948(self):\n        \"\"\"\n        Test for area estimation of tabula th\n        \"\"\"\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1257:1262]\n==test_tabula_th:[714:719]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1918,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[817:822]\n==test_tabula_th:[1133:1138]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1918,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[6:16]\n==test_tabula_th:[5:16]\n    global prj\n\n    def test_tabula_de_sfh_area_1859(self):\n        \"\"\"\n        Test for area estimation of tabula sfh\n        \"\"\"\n        prj.set_default()\n        prj.data = None\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_sfh:[1191:1197]\n==test_tabula_sfh_dk:[689:700]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.21)), 1)\n\n        # assert round(\n        #     1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n        #          * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n        #     1) == round((1 / (1 / 0.3 - 0.17)), 1)\n\n        assert round(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1382:1388]\n==test_tabula_th_dk:[1126:1142]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.21)), 1)\n\n        assert round(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1530:1550]\n==test_tabula_th:[1407:1428]\n                             1) == round((1 / (1 / 0.14 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.17 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_th_2008(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1600:1607]\n==test_tabula_th:[1484:1491]\n            1) == round((1 / (1 / 0.12 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.12 - 0.34)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[868:875]\n==test_tabula_th:[760:767]\n            1) == round((1 / (1 / 0.2 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.25 - 0.17)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[718:725]\n==test_tabula_th:[644:651]\n                             1) == round((1 / (1 / 0.28 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),\n            1) == round((1 / (1 / 0.35 - 0.34)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[427:434]\n==test_tabula_th:[349:356]\n            1) == round((1 / (1 / 0.65 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 1.7 - 0.17)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1016:1022]\n==test_tabula_sfh_dk:[924:935]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.21 - 0.17)), 1)\n\n        assert round(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[55:60]\n==test_tabula_sfh_dk:[274:279]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].outer_walls), 1) == 146\n        assert round(\n            sum(wall.area for wall in",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1325:1340]\n==test_tabula_sfh:[1398:1413]\n            1) == round((1 / (1 / 0.23 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_1978(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[1395:1410]\n==test_tabula_sfh:[1281:1296]\n                             1) == round((1 / (1 / 0.23 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_sfh_1948(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[296:306]\n==test_tabula_sfh:[180:190]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_de_mfh_area_2015(self):\n        \"\"\"\n        Test for area estimation of tabula mfh\n        \"\"\"\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[267:277]\n==test_tabula_sfh:[122:132]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_de_sfh_area_1968(self):\n        \"\"\"\n        Test for area estimation of tabula sfh\n        \"\"\"\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[238:248]\n==test_tabula_sfh:[93:103]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_de_mfh_area_2001(self):\n        \"\"\"\n        Test for area estimation of tabula mfh\n        \"\"\"\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[209:219]\n==test_tabula_sfh:[64:74]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_de_sfh_area_1948(self):\n        \"\"\"\n        Test for area estimation of tabula sfh\n        \"\"\"\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[180:190]\n==test_tabula_sfh:[35:45]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_de_sfh_area_1919(self):\n        \"\"\"\n        Test for area estimation of tabula sfh\n        \"\"\"\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_mfh:[334:340]\n==test_tabula_sfh:[1701:1707]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1858,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[1174:1181]\n==test_tabula_th_dk:[985:992]\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),\n            1) == round((1 / (1 / 0.09 - 0.14)), 1)\n\n\n        assert round(",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[5:16]\n==test_tabula_th_dk:[5:16]\n    global prj\n\n    def test_tabula_de_th_dk_area_1849(self):\n        \"\"\"\n        Test for area estimation of tabula th\n        \"\"\"\n        prj.set_default()\n        prj.data = None\n\n        prj.add_residential(\n            method='tabula_dk',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab_dk:[106:112]\n==test_tabula_mfh:[48:54]\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=312)\n\n        assert round(\n            sum(wall.area for wall in",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[630:636]\n==test_tabula_th_dk:[1158:1164]\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_adv_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[376:382]\n==test_tabula_th_dk:[880:886]\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[163:169]\n==test_tabula_th_dk:[540:546]\n            height_of_floors=3.2,\n            net_leased_area=219)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[464:480]\n==test_tabula_sfh:[917:932]\n                             1) == round((1 / (1 / 0.31 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 1.3 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_sfh_1968(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[646:662]\n==test_tabula_mfh:[1242:1257]\n                             1) == round((1 / (1 / 0.23 - 0.34)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),\n            1) == round((1 / (1 / 0.8 - 0.17)), 1)\n\n    def test_tabula_uvalue_retrofit_adv_mfh_1918(self):\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[563:570]\n==test_tabula_mfh:[1309:1316]\n            1) == round((1 / (1 / 0.1 - 0.17)), 1)\n\n        assert round(\n            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc\n                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),\n            1) == round((1 / (1 / 0.13 - 0.17)), 1)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[373:379]\n==test_tabula_mfh:[853:859]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1947,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219, construction_type=\"tabula_retrofit\")\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[195:201]\n==test_tabula_mfh:[412:418]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1947,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219)\n",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[151:159]\n==test_tabula_mfh:[151:161]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_uvalue_standard_ab_1919(self):\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[122:132]\n==test_tabula_mfh:[122:132]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_de_mfh_area_1968(self):\n        \"\"\"\n        Test for area estimation of tabula mfh\n        \"\"\"\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[93:103]\n==test_tabula_mfh:[93:103]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_de_mfh_area_1957(self):\n        \"\"\"\n        Test for area estimation of tabula mfh\n        \"\"\"\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[64:74]\n==test_tabula_mfh:[64:74]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_de_mfh_area_1948(self):\n        \"\"\"\n        Test for area estimation of tabula mfh\n        \"\"\"\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[35:45]\n==test_tabula_mfh:[35:45]\n        assert round(\n            sum(wall.area for wall in\n                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0\n\n    def test_tabula_de_mfh_area_1919(self):\n        \"\"\"\n        Test for area estimation of tabula mfh\n        \"\"\"\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[516:521]\n==test_tabula_mfh:[817:822]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1918,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[336:341]\n==test_tabula_mfh:[1258:1263]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1918,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[5:16]\n==test_tabula_mfh:[6:16]\n    global prj\n\n    def test_tabula_de_ab_area_1919(self):\n        \"\"\"\n        Test for area estimation of tabula ab\n        \"\"\"\n        prj.set_default()\n        prj.data = None\n\n        prj.add_residential(\n            method='tabula_de',",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[662:667]\n==test_tabula_ab_dk:[1130:1135]\n            usage='apartment_block',\n            name=\"ResidentialBuilding\",\n            year_of_construction=1977,\n            number_of_floors=2,\n            height_of_floors=3.2,",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[480:485]\n==test_tabula_ab_dk:[825:830]\n            usage='apartment_block',\n            name=\"ResidentialBuilding\",\n            year_of_construction=1977,\n            number_of_floors=2,\n            height_of_floors=3.2,",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[299:304]\n==test_tabula_ab_dk:[472:477]\n            usage='apartment_block',\n            name=\"ResidentialBuilding\",\n            year_of_construction=1977,\n            number_of_floors=2,\n            height_of_floors=3.2,",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_tabula_ab:[132:137]\n==test_tabula_ab_dk:[161:166]\n            usage='apartment_block',\n            name=\"ResidentialBuilding\",\n            year_of_construction=1977,\n            number_of_floors=2,\n            height_of_floors=3.2,",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_data:[641:646]\n==test_tabula_mfh:[1216:1221]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1858,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,",
            "message-id": "R0801"
        },
        {
            "type": "refactor",
            "module": "test_useconditions",
            "obj": "",
            "line": 1,
            "column": 0,
            "path": "tests/test_useconditions.py",
            "symbol": "duplicate-code",
            "message": "Similar lines in 2 files\n==test_data:[632:637]\n==test_tabula_mfh:[775:780]\n            name=\"ResidentialBuilding\",\n            year_of_construction=1858,\n            number_of_floors=2,\n            height_of_floors=3.2,\n            net_leased_area=219,",
            "message-id": "R0801"
        }
    ],
    "stats": {
        "bad_names": {
            "argument": 1,
            "attr": 0,
            "klass": 11,
            "class_attribute": 0,
            "class_const": 0,
            "const": 0,
            "inlinevar": 0,
            "function": 0,
            "method": 0,
            "module": 0,
            "variable": 10,
            "typevar": 0,
            "typealias": 0
        },
        "by_module": {
            "teaser.__init__": {
                "convention": 2,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 16,
                "warning": 1
            },
            "teaser.project": {
                "convention": 9,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 15,
                "statement": 290,
                "warning": 7
            },
            "helptest": {
                "convention": 2,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 171,
                "warning": 4
            },
            "test_data": {
                "convention": 71,
                "error": 5,
                "fatal": 0,
                "info": 0,
                "refactor": 17,
                "statement": 1717,
                "warning": 31
            },
            "test_examples": {
                "convention": 13,
                "error": 6,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 33,
                "warning": 20
            },
            "test_modelicaversion": {
                "convention": 8,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 44,
                "warning": 2
            },
            "test_simulation_export": {
                "convention": 6,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 11,
                "warning": 7
            },
            "test_tabula_ab": {
                "convention": 18,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 146,
                "warning": 1
            },
            "test_tabula_ab_dk": {
                "convention": 34,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 257,
                "warning": 1
            },
            "test_tabula_mfh": {
                "convention": 40,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 371,
                "warning": 1
            },
            "test_tabula_sfh": {
                "convention": 40,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 396,
                "warning": 1
            },
            "test_tabula_sfh_dk": {
                "convention": 34,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 210,
                "warning": 1
            },
            "test_tabula_th": {
                "convention": 37,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 367,
                "warning": 1
            },
            "test_tabula_th_dk": {
                "convention": 32,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 213,
                "warning": 1
            },
            "test_useconditions": {
                "convention": 6,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 567,
                "statement": 68,
                "warning": 1
            }
        },
        "by_msg": {
            "missing-function-docstring": 209,
            "invalid-name": 22,
            "unspecified-encoding": 1,
            "consider-using-with": 1,
            "line-too-long": 15,
            "too-many-lines": 8,
            "consider-using-from-import": 3,
            "useless-object-inheritance": 13,
            "too-many-instance-attributes": 1,
            "implicit-str-concat": 4,
            "too-many-arguments": 3,
            "too-many-locals": 4,
            "pointless-string-statement": 8,
            "no-else-return": 2,
            "too-many-return-statements": 1,
            "too-many-branches": 1,
            "too-many-statements": 14,
            "missing-module-docstring": 9,
            "useless-import-alias": 4,
            "global-variable-not-assigned": 10,
            "import-outside-toplevel": 63,
            "not-an-iterable": 5,
            "consider-using-generator": 2,
            "protected-access": 21,
            "redefined-outer-name": 11,
            "reimported": 2,
            "pointless-statement": 3,
            "too-many-public-methods": 7,
            "wrong-import-order": 15,
            "unused-import": 9,
            "global-statement": 2,
            "unused-variable": 8,
            "assignment-from-no-return": 6,
            "bare-except": 1,
            "inconsistent-return-statements": 1,
            "too-few-public-methods": 2,
            "missing-class-docstring": 7,
            "duplicate-code": 566
        },
        "code_type_count": {
            "code": 0,
            "comment": 0,
            "docstring": 0,
            "empty": 0,
            "total": 0
        },
        "dependencies": {
            "mako.util": [
                "teaser"
            ],
            "teaser.logic.utilities": [
                "teaser.project",
                "test_examples",
                "test_data",
                "test_simulation_export",
                "test_useconditions"
            ],
            "teaser.data.input.teaserjson_input": [
                "teaser.project"
            ],
            "teaser.data.output.teaserjson_output": [
                "teaser.project"
            ],
            "teaser.data.output.aixlib_output": [
                "teaser.project"
            ],
            "teaser.data.output.ibpsa_output": [
                "teaser.project"
            ],
            "teaser.data.dataclass": [
                "test_data",
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.bmvbs.office": [
                "test_data",
                "teaser.project",
                "test_modelicaversion"
            ],
            "teaser.logic.archetypebuildings.bmvbs.custom.institute": [
                "test_data",
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.bmvbs.custom.institute4": [
                "test_data",
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.bmvbs.custom.institute8": [
                "test_data",
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.urbanrenet.est1a": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.urbanrenet.est1b": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.urbanrenet.est2": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.urbanrenet.est3": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.urbanrenet.est4a": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.urbanrenet.est4b": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.urbanrenet.est5": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.urbanrenet.est6": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.urbanrenet.est7": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.urbanrenet.est8a": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.urbanrenet.est8b": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.tabula.de.singlefamilyhouse": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.tabula.dk.singlefamilyhouse": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.tabula.de.terracedhouse": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.tabula.dk.terracedhouse": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.tabula.de.multifamilyhouse": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.tabula.de.apartmentblock": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.tabula.dk.apartmentblock": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.bmvbs.singlefamilydwelling": [
                "test_data",
                "teaser.project"
            ],
            "teaser.logic.simulation.modelicainfo": [
                "teaser.project"
            ],
            "teaser.logic.buildingobjects.useconditions": [
                "test_data",
                "helptest"
            ],
            "teaser.logic.buildingobjects.building": [
                "test_data",
                "helptest"
            ],
            "teaser.logic.buildingobjects.buildingphysics.groundfloor": [
                "test_data",
                "helptest"
            ],
            "teaser.logic.buildingobjects.buildingphysics.innerwall": [
                "test_data",
                "helptest"
            ],
            "teaser.logic.buildingobjects.buildingphysics.layer": [
                "test_data",
                "helptest"
            ],
            "teaser.logic.buildingobjects.buildingphysics.material": [
                "test_data",
                "helptest"
            ],
            "teaser.logic.buildingobjects.buildingphysics.outerwall": [
                "test_data",
                "helptest"
            ],
            "teaser.logic.buildingobjects.buildingphysics.rooftop": [
                "test_data",
                "helptest"
            ],
            "teaser.logic.buildingobjects.buildingphysics.window": [
                "test_data",
                "helptest"
            ],
            "teaser.logic.buildingobjects.thermalzone": [
                "test_data",
                "helptest"
            ],
            "teaser.project": [
                "test_tabula_ab",
                "test_tabula_ab_dk",
                "test_examples",
                "test_tabula_sfh_dk",
                "test_modelicaversion",
                "test_tabula_th_dk",
                "test_data",
                "test_tabula_th",
                "test_simulation_export",
                "test_tabula_mfh",
                "test_useconditions",
                "test_tabula_sfh"
            ],
            "helptest": [
                "test_data",
                "test_useconditions"
            ],
            "teaser.examples.verification.verification_VDI_6007_room1": [
                "test_data"
            ],
            "teaser.examples.verification.verification_VDI_6007_room3": [
                "test_data"
            ],
            "teaser.examples.verification.verification_VDI_6007_room8": [
                "test_data"
            ],
            "teaser.logic.buildingobjects.calculation.one_element": [
                "test_data"
            ],
            "teaser.logic.buildingobjects.calculation.two_element": [
                "test_data"
            ],
            "teaser.logic.buildingobjects.calculation.three_element": [
                "test_data"
            ],
            "teaser.logic.buildingobjects.calculation.four_element": [
                "test_data"
            ],
            "teaser.examples.verification.verification_ASHRAE_140_600": [
                "test_data"
            ],
            "teaser.examples.verification.verification_ASHRAE_140_620": [
                "test_data"
            ],
            "teaser.examples.verification.verification_ASHRAE_140_900": [
                "test_data"
            ],
            "teaser.examples.verification.verification_ASHRAE_140_920": [
                "test_data"
            ],
            "teaser.examples.e1_generate_archetype": [
                "test_examples"
            ],
            "teaser.examples.e2_export_aixlib_models": [
                "test_simulation_export",
                "test_examples"
            ],
            "teaser.examples.e3_export_ibpsa_models": [
                "test_examples"
            ],
            "teaser.examples.e4_save": [
                "test_examples"
            ],
            "teaser.examples.e5_load": [
                "test_examples"
            ],
            "teaser.examples.e6_generate_building": [
                "test_examples"
            ],
            "teaser.examples.e7_retrofit": [
                "test_examples"
            ],
            "teaser.examples.e8_change_boundary_conditions": [
                "test_examples"
            ],
            "teaser.logic.buildingobjects.calculation.ibpsa": [
                "test_modelicaversion"
            ],
            "pytest": [
                "test_useconditions"
            ]
        },
        "duplicated_lines": {
            "nb_duplicated_lines": 0,
            "percent_duplicated_lines": 0.0
        },
        "node_count": {
            "function": 2,
            "klass": 13,
            "method": 370,
            "module": 15
        },
        "undocumented": {
            "function": 1,
            "klass": 7,
            "method": 208,
            "module": 9
        },
        "convention": 352,
        "error": 11,
        "fatal": 0,
        "info": 0,
        "refactor": 621,
        "statement": 4310,
        "warning": 80,
        "global_note": 0,
        "nb_duplicated_lines": 4715,
        "percent_duplicated_lines": 33.01589524543099
    },
    "previous": {
        "bad_names": {
            "argument": 1,
            "attr": 0,
            "klass": 11,
            "class_attribute": 0,
            "class_const": 0,
            "const": 0,
            "inlinevar": 0,
            "function": 0,
            "method": 0,
            "module": 0,
            "variable": 10,
            "typevar": 0,
            "typealias": 0
        },
        "by_module": {
            "teaser.__init__": {
                "convention": 2,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 16,
                "warning": 1
            },
            "teaser.project": {
                "convention": 9,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 15,
                "statement": 290,
                "warning": 7
            },
            "helptest": {
                "convention": 2,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 171,
                "warning": 4
            },
            "test_data": {
                "convention": 71,
                "error": 5,
                "fatal": 0,
                "info": 0,
                "refactor": 17,
                "statement": 1717,
                "warning": 31
            },
            "test_examples": {
                "convention": 13,
                "error": 6,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 33,
                "warning": 20
            },
            "test_modelicaversion": {
                "convention": 8,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 3,
                "statement": 44,
                "warning": 2
            },
            "test_simulation_export": {
                "convention": 6,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 11,
                "warning": 7
            },
            "test_tabula_ab": {
                "convention": 18,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 1,
                "statement": 146,
                "warning": 1
            },
            "test_tabula_ab_dk": {
                "convention": 34,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 257,
                "warning": 1
            },
            "test_tabula_mfh": {
                "convention": 40,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 371,
                "warning": 1
            },
            "test_tabula_sfh": {
                "convention": 40,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 396,
                "warning": 1
            },
            "test_tabula_sfh_dk": {
                "convention": 34,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 210,
                "warning": 1
            },
            "test_tabula_th": {
                "convention": 37,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 367,
                "warning": 1
            },
            "test_tabula_th_dk": {
                "convention": 32,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 2,
                "statement": 213,
                "warning": 1
            },
            "test_useconditions": {
                "convention": 6,
                "error": 0,
                "fatal": 0,
                "info": 0,
                "refactor": 567,
                "statement": 68,
                "warning": 1
            }
        },
        "by_msg": {
            "missing-function-docstring": 209,
            "invalid-name": 22,
            "unspecified-encoding": 1,
            "consider-using-with": 1,
            "line-too-long": 15,
            "too-many-lines": 8,
            "consider-using-from-import": 3,
            "useless-object-inheritance": 13,
            "too-many-instance-attributes": 1,
            "implicit-str-concat": 4,
            "too-many-arguments": 3,
            "too-many-locals": 4,
            "pointless-string-statement": 8,
            "no-else-return": 2,
            "too-many-return-statements": 1,
            "too-many-branches": 1,
            "too-many-statements": 14,
            "missing-module-docstring": 9,
            "useless-import-alias": 4,
            "global-variable-not-assigned": 10,
            "import-outside-toplevel": 63,
            "not-an-iterable": 5,
            "consider-using-generator": 2,
            "protected-access": 21,
            "redefined-outer-name": 11,
            "reimported": 2,
            "pointless-statement": 3,
            "too-many-public-methods": 7,
            "wrong-import-order": 15,
            "unused-import": 9,
            "global-statement": 2,
            "unused-variable": 8,
            "assignment-from-no-return": 6,
            "bare-except": 1,
            "inconsistent-return-statements": 1,
            "too-few-public-methods": 2,
            "missing-class-docstring": 7,
            "duplicate-code": 566
        },
        "code_type_count": {
            "code": 0,
            "comment": 0,
            "docstring": 0,
            "empty": 0,
            "total": 0
        },
        "dependencies": {
            "mako.util": [
                "teaser"
            ],
            "teaser.logic.utilities": [
                "teaser.project",
                "test_examples",
                "test_data",
                "test_simulation_export",
                "test_useconditions"
            ],
            "teaser.data.input.teaserjson_input": [
                "teaser.project"
            ],
            "teaser.data.output.teaserjson_output": [
                "teaser.project"
            ],
            "teaser.data.output.aixlib_output": [
                "teaser.project"
            ],
            "teaser.data.output.ibpsa_output": [
                "teaser.project"
            ],
            "teaser.data.dataclass": [
                "test_data",
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.bmvbs.office": [
                "test_data",
                "teaser.project",
                "test_modelicaversion"
            ],
            "teaser.logic.archetypebuildings.bmvbs.custom.institute": [
                "test_data",
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.bmvbs.custom.institute4": [
                "test_data",
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.bmvbs.custom.institute8": [
                "test_data",
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.urbanrenet.est1a": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.urbanrenet.est1b": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.urbanrenet.est2": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.urbanrenet.est3": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.urbanrenet.est4a": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.urbanrenet.est4b": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.urbanrenet.est5": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.urbanrenet.est6": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.urbanrenet.est7": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.urbanrenet.est8a": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.urbanrenet.est8b": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.tabula.de.singlefamilyhouse": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.tabula.dk.singlefamilyhouse": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.tabula.de.terracedhouse": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.tabula.dk.terracedhouse": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.tabula.de.multifamilyhouse": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.tabula.de.apartmentblock": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.tabula.dk.apartmentblock": [
                "teaser.project"
            ],
            "teaser.logic.archetypebuildings.bmvbs.singlefamilydwelling": [
                "test_data",
                "teaser.project"
            ],
            "teaser.logic.simulation.modelicainfo": [
                "teaser.project"
            ],
            "teaser.logic.buildingobjects.useconditions": [
                "test_data",
                "helptest"
            ],
            "teaser.logic.buildingobjects.building": [
                "test_data",
                "helptest"
            ],
            "teaser.logic.buildingobjects.buildingphysics.groundfloor": [
                "test_data",
                "helptest"
            ],
            "teaser.logic.buildingobjects.buildingphysics.innerwall": [
                "test_data",
                "helptest"
            ],
            "teaser.logic.buildingobjects.buildingphysics.layer": [
                "test_data",
                "helptest"
            ],
            "teaser.logic.buildingobjects.buildingphysics.material": [
                "test_data",
                "helptest"
            ],
            "teaser.logic.buildingobjects.buildingphysics.outerwall": [
                "test_data",
                "helptest"
            ],
            "teaser.logic.buildingobjects.buildingphysics.rooftop": [
                "test_data",
                "helptest"
            ],
            "teaser.logic.buildingobjects.buildingphysics.window": [
                "test_data",
                "helptest"
            ],
            "teaser.logic.buildingobjects.thermalzone": [
                "test_data",
                "helptest"
            ],
            "teaser.project": [
                "test_tabula_ab",
                "test_tabula_ab_dk",
                "test_examples",
                "test_tabula_sfh_dk",
                "test_tabula_th_dk",
                "test_modelicaversion",
                "test_data",
                "test_tabula_th",
                "test_simulation_export",
                "test_tabula_mfh",
                "test_useconditions",
                "test_tabula_sfh"
            ],
            "helptest": [
                "test_data",
                "test_useconditions"
            ],
            "teaser.examples.verification.verification_VDI_6007_room1": [
                "test_data"
            ],
            "teaser.examples.verification.verification_VDI_6007_room3": [
                "test_data"
            ],
            "teaser.examples.verification.verification_VDI_6007_room8": [
                "test_data"
            ],
            "teaser.logic.buildingobjects.calculation.one_element": [
                "test_data"
            ],
            "teaser.logic.buildingobjects.calculation.two_element": [
                "test_data"
            ],
            "teaser.logic.buildingobjects.calculation.three_element": [
                "test_data"
            ],
            "teaser.logic.buildingobjects.calculation.four_element": [
                "test_data"
            ],
            "teaser.examples.verification.verification_ASHRAE_140_600": [
                "test_data"
            ],
            "teaser.examples.verification.verification_ASHRAE_140_620": [
                "test_data"
            ],
            "teaser.examples.verification.verification_ASHRAE_140_900": [
                "test_data"
            ],
            "teaser.examples.verification.verification_ASHRAE_140_920": [
                "test_data"
            ],
            "teaser.examples.e1_generate_archetype": [
                "test_examples"
            ],
            "teaser.examples.e2_export_aixlib_models": [
                "test_simulation_export",
                "test_examples"
            ],
            "teaser.examples.e3_export_ibpsa_models": [
                "test_examples"
            ],
            "teaser.examples.e4_save": [
                "test_examples"
            ],
            "teaser.examples.e5_load": [
                "test_examples"
            ],
            "teaser.examples.e6_generate_building": [
                "test_examples"
            ],
            "teaser.examples.e7_retrofit": [
                "test_examples"
            ],
            "teaser.examples.e8_change_boundary_conditions": [
                "test_examples"
            ],
            "teaser.logic.buildingobjects.calculation.ibpsa": [
                "test_modelicaversion"
            ],
            "pytest": [
                "test_useconditions"
            ]
        },
        "duplicated_lines": {
            "nb_duplicated_lines": 0,
            "percent_duplicated_lines": 0.0
        },
        "node_count": {
            "function": 2,
            "klass": 13,
            "method": 370,
            "module": 15
        },
        "undocumented": {
            "function": 1,
            "klass": 7,
            "method": 208,
            "module": 9
        },
        "convention": 352,
        "error": 11,
        "fatal": 0,
        "info": 0,
        "refactor": 621,
        "statement": 4310,
        "warning": 80,
        "global_note": 7.4292343387471,
        "nb_duplicated_lines": 4715,
        "percent_duplicated_lines": 33.01589524543099
    }
}
