************* Module /builds/EBC/EBC_all/github_ci/TEASER/pylintrc
pylintrc:1:0: E0015: Unrecognized option found: no-space-check (unrecognized-option)
pylintrc:1:0: R0022: Useless option value for '--disable', 'print-statement' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'parameter-unpacking' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'unpacking-in-except' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'old-raise-syntax' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'backtick' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'import-star-module-level' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'apply-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'basestring-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'buffer-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'cmp-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'coerce-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'execfile-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'file-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'long-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'raw_input-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'reduce-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'standarderror-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'unicode-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'xrange-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'coerce-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'delslice-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'getslice-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'setslice-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'no-absolute-import' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'old-division' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'dict-iter-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'dict-view-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'next-method-called' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'metaclass-assignment' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'indexing-exception' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'raising-string' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'reload-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'oct-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'hex-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'nonzero-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'cmp-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'input-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'round-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'intern-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'unichr-builtin' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'map-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'zip-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'range-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'filter-builtin-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'using-cmp-argument' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'div-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'idiv-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'rdiv-method' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'exception-message-attribute' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'invalid-str-codec' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'sys-max-int' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'bad-python3-import' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'deprecated-string-function' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'deprecated-str-translate-call' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'deprecated-itertools-function' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'deprecated-types-field' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'next-method-defined' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'dict-items-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'dict-keys-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: R0022: Useless option value for '--disable', 'dict-values-not-iterating' was removed from pylint, see https://github.com/pylint-dev/pylint/pull/4942. (useless-option-value)
pylintrc:1:0: W0012: Unknown option value for '--disable', expected a valid pylint message and got 'long-suffix' (unknown-option-value)
pylintrc:1:0: W0012: Unknown option value for '--disable', expected a valid pylint message and got 'old-ne-operator' (unknown-option-value)
pylintrc:1:0: W0012: Unknown option value for '--disable', expected a valid pylint message and got 'old-octal-literal' (unknown-option-value)
pylintrc:1:0: W0012: Unknown option value for '--disable', expected a valid pylint message and got 'non-ascii-bytes-literal' (unknown-option-value)
pylintrc:1:0: W0012: Unknown option value for '--disable', expected a valid pylint message and got 'locally-enabled' (unknown-option-value)
pylintrc:1:0: W0012: Unknown option value for '--disable', expected a valid pylint message and got 'eq-without-hash' (unknown-option-value)
************* Module teaser
teaser/__init__.py:18:4: C0116: Missing function or method docstring (missing-function-docstring)
teaser/__init__.py:19:8: C0103: Variable name "fp" doesn't conform to snake_case naming style (invalid-name)
teaser/__init__.py:19:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
teaser/__init__.py:19:13: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
************* Module teaser.project
teaser/project.py:303:0: C0301: Line too long (102/100) (line-too-long)
teaser/project.py:309:0: C0301: Line too long (105/100) (line-too-long)
teaser/project.py:455:0: C0301: Line too long (102/100) (line-too-long)
teaser/project.py:461:0: C0301: Line too long (108/100) (line-too-long)
teaser/project.py:824:0: C0301: Line too long (114/100) (line-too-long)
teaser/project.py:6:0: R0402: Use 'from teaser.logic import utilities' instead (consider-using-from-import)
teaser/project.py:10:0: R0402: Use 'from teaser.data.output import aixlib_output' instead (consider-using-from-import)
teaser/project.py:11:0: R0402: Use 'from teaser.data.output import ibpsa_output' instead (consider-using-from-import)
teaser/project.py:17:0: R0205: Class 'Project' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
teaser/project.py:17:0: R0902: Too many instance attributes (16/7) (too-many-instance-attributes)
teaser/project.py:245:4: R0913: Too many arguments (12/5) (too-many-arguments)
teaser/project.py:380:4: R0913: Too many arguments (16/5) (too-many-arguments)
teaser/project.py:380:4: R0914: Too many local variables (22/15) (too-many-locals)
teaser/project.py:645:8: C0103: Argument name "corG" doesn't conform to snake_case naming style (invalid-name)
teaser/project.py:641:4: R0913: Too many arguments (9/5) (too-many-arguments)
teaser/project.py:716:16: C0415: Import outside toplevel (teaser.data.output.reports.model_report) (import-outside-toplevel)
teaser/project.py:718:16: W0707: Consider explicitly re-raising using 'except ImportError as exc' and 'raise ImportError('To create the model report, you have to install TEASER using the option report: pip install teaser[report] or install plotly manually.') from exc' (raise-missing-from)
teaser/project.py:835:4: C0116: Missing function or method docstring (missing-function-docstring)
teaser/project.py:855:4: C0116: Missing function or method docstring (missing-function-docstring)
teaser/project.py:871:4: C0116: Missing function or method docstring (missing-function-docstring)
teaser/project.py:887:4: C0116: Missing function or method docstring (missing-function-docstring)
teaser/project.py:903:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module helptest
tests/helptest.py:48:0: R1707: Disallow trailing comma tuple (trailing-comma-tuple)
tests/helptest.py:49:0: R1707: Disallow trailing comma tuple (trailing-comma-tuple)
tests/helptest.py:1:0: C0114: Missing module docstring (missing-module-docstring)
tests/helptest.py:13:0: R0914: Too many local variables (26/15) (too-many-locals)
tests/helptest.py:19:4: W0105: String statement has no effect (pointless-string-statement)
tests/helptest.py:28:4: W0105: String statement has no effect (pointless-string-statement)
tests/helptest.py:31:4: C0103: Variable name "tz" doesn't conform to snake_case naming style (invalid-name)
tests/helptest.py:82:8: W0105: String statement has no effect (pointless-string-statement)
tests/helptest.py:121:8: W0105: String statement has no effect (pointless-string-statement)
tests/helptest.py:13:0: R0915: Too many statements (161/50) (too-many-statements)
************* Module test_data
tests/test_data.py:1:0: C0302: Too many lines in module (3160/1000) (too-many-lines)
tests/test_data.py:13:0: C0414: Import alias does not rename original package (useless-import-alias)
tests/test_data.py:18:0: C0103: Class name "Test_teaser" doesn't conform to PascalCase naming style (invalid-name)
tests/test_data.py:18:0: R0205: Class 'Test_teaser' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/test_data.py:21:4: W0602: Using global for 'prj' but no assignment is done (global-variable-not-assigned)
tests/test_data.py:24:8: C0415: Import outside toplevel (teaser.examples.verification.verification_VDI_6007_room1) (import-outside-toplevel)
tests/test_data.py:50:8: C0415: Import outside toplevel (teaser.examples.verification.verification_VDI_6007_room3) (import-outside-toplevel)
tests/test_data.py:76:8: C0415: Import outside toplevel (teaser.examples.verification.verification_VDI_6007_room8) (import-outside-toplevel)
tests/test_data.py:142:8: C0415: Import outside toplevel (teaser.logic.archetypebuildings.bmvbs.office.Office) (import-outside-toplevel)
tests/test_data.py:162:20: E1133: Non-iterable value test_office.thermal_zones is used in an iterating context (not-an-iterable)
tests/test_data.py:137:4: R0915: Too many statements (67/50) (too-many-statements)
tests/test_data.py:278:8: C0415: Import outside toplevel (teaser.logic.archetypebuildings.bmvbs.custom.institute4.Institute4) (import-outside-toplevel)
tests/test_data.py:301:20: E1133: Non-iterable value test_institute4.thermal_zones is used in an iterating context (not-an-iterable)
tests/test_data.py:335:8: C0415: Import outside toplevel (teaser.logic.archetypebuildings.bmvbs.custom.institute8.Institute8) (import-outside-toplevel)
tests/test_data.py:358:20: E1133: Non-iterable value test_institute8.thermal_zones is used in an iterating context (not-an-iterable)
tests/test_data.py:392:8: C0415: Import outside toplevel (teaser.logic.archetypebuildings.bmvbs.custom.institute.Institute) (import-outside-toplevel)
tests/test_data.py:415:20: E1133: Non-iterable value test_institute.thermal_zones is used in an iterating context (not-an-iterable)
tests/test_data.py:449:8: C0415: Import outside toplevel (teaser.logic.archetypebuildings.bmvbs.singlefamilydwelling.SingleFamilyDwelling) (import-outside-toplevel)
tests/test_data.py:471:20: E1133: Non-iterable value test_residential.thermal_zones is used in an iterating context (not-an-iterable)
tests/test_data.py:444:4: R0915: Too many statements (57/50) (too-many-statements)
tests/test_data.py:588:0: W1404: Implicit string concatenation found in call (implicit-str-concat)
tests/test_data.py:592:18: R1728: Consider using a generator instead 'sum(tz.area for tz in prj.buildings[-1].thermal_zones)' (consider-using-generator)
tests/test_data.py:604:18: R1728: Consider using a generator instead 'sum(tz.area for tz in prj.buildings[-1].thermal_zones)' (consider-using-generator)
tests/test_data.py:605:12: C0103: Variable name "tz" doesn't conform to snake_case naming style (invalid-name)
tests/test_data.py:695:4: R0915: Too many statements (76/50) (too-many-statements)
tests/test_data.py:1209:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.calculation.one_element.OneElement) (import-outside-toplevel)
tests/test_data.py:1229:8: W0212: Access to a protected member _sum_outer_wall_elements of a client class (protected-access)
tests/test_data.py:1230:8: W0212: Access to a protected member _sum_window_elements of a client class (protected-access)
tests/test_data.py:1265:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.calculation.one_element.OneElement) (import-outside-toplevel)
tests/test_data.py:1294:23: W0212: Access to a protected member _calc_parallel_connection of a client class (protected-access)
tests/test_data.py:1305:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.calculation.two_element.TwoElement) (import-outside-toplevel)
tests/test_data.py:1325:8: W0212: Access to a protected member _sum_outer_wall_elements of a client class (protected-access)
tests/test_data.py:1326:8: W0212: Access to a protected member _sum_inner_wall_elements of a client class (protected-access)
tests/test_data.py:1327:8: W0212: Access to a protected member _sum_window_elements of a client class (protected-access)
tests/test_data.py:1372:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.calculation.two_element.TwoElement) (import-outside-toplevel)
tests/test_data.py:1403:23: W0212: Access to a protected member _calc_parallel_connection of a client class (protected-access)
tests/test_data.py:1413:23: W0212: Access to a protected member _calc_parallel_connection of a client class (protected-access)
tests/test_data.py:1424:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.calculation.three_element.ThreeElement) (import-outside-toplevel)
tests/test_data.py:1444:8: W0212: Access to a protected member _sum_outer_wall_elements of a client class (protected-access)
tests/test_data.py:1445:8: W0212: Access to a protected member _sum_ground_floor_elements of a client class (protected-access)
tests/test_data.py:1446:8: W0212: Access to a protected member _sum_inner_wall_elements of a client class (protected-access)
tests/test_data.py:1447:8: W0212: Access to a protected member _sum_window_elements of a client class (protected-access)
tests/test_data.py:1419:4: R0915: Too many statements (55/50) (too-many-statements)
tests/test_data.py:1502:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.calculation.three_element.ThreeElement) (import-outside-toplevel)
tests/test_data.py:1528:23: W0212: Access to a protected member _calc_parallel_connection of a client class (protected-access)
tests/test_data.py:1538:23: W0212: Access to a protected member _calc_parallel_connection of a client class (protected-access)
tests/test_data.py:1549:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.calculation.four_element.FourElement) (import-outside-toplevel)
tests/test_data.py:1569:8: W0212: Access to a protected member _sum_outer_wall_elements of a client class (protected-access)
tests/test_data.py:1570:8: W0212: Access to a protected member _sum_ground_floor_elements of a client class (protected-access)
tests/test_data.py:1571:8: W0212: Access to a protected member _sum_rooftop_elements of a client class (protected-access)
tests/test_data.py:1572:8: W0212: Access to a protected member _sum_inner_wall_elements of a client class (protected-access)
tests/test_data.py:1573:8: W0212: Access to a protected member _sum_window_elements of a client class (protected-access)
tests/test_data.py:1544:4: R0915: Too many statements (70/50) (too-many-statements)
tests/test_data.py:1644:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.calculation.four_element.FourElement) (import-outside-toplevel)
tests/test_data.py:1668:23: W0212: Access to a protected member _calc_parallel_connection of a client class (protected-access)
tests/test_data.py:1678:23: W0212: Access to a protected member _calc_parallel_connection of a client class (protected-access)
tests/test_data.py:2033:4: R0915: Too many statements (52/50) (too-many-statements)
tests/test_data.py:2091:4: R0915: Too many statements (72/50) (too-many-statements)
tests/test_data.py:2198:8: C0103: Variable name "outerWalls" doesn't conform to snake_case naming style (invalid-name)
tests/test_data.py:2221:8: W0621: Redefining name 'os' from outer scope (line 11) (redefined-outer-name)
tests/test_data.py:2221:8: W0404: Reimport 'os' (imported line 11) (reimported)
tests/test_data.py:2221:8: C0415: Import outside toplevel (os) (import-outside-toplevel)
tests/test_data.py:2234:8: W0621: Redefining name 'os' from outer scope (line 11) (redefined-outer-name)
tests/test_data.py:2234:8: W0404: Reimport 'os' (imported line 11) (reimported)
tests/test_data.py:2234:8: C0415: Import outside toplevel (os) (import-outside-toplevel)
tests/test_data.py:2323:8: W0621: Redefining name 'DataClass' from outer scope (line 9) (redefined-outer-name)
tests/test_data.py:2316:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.material.Material) (import-outside-toplevel)
tests/test_data.py:2323:8: W0404: Reimport 'DataClass' (imported line 9) (reimported)
tests/test_data.py:2323:8: C0415: Import outside toplevel (teaser.data.dataclass.DataClass) (import-outside-toplevel)
tests/test_data.py:2333:8: W0104: Statement seems to have no effect (pointless-statement)
tests/test_data.py:2334:8: W0104: Statement seems to have no effect (pointless-statement)
tests/test_data.py:2335:8: W0104: Statement seems to have no effect (pointless-statement)
tests/test_data.py:2343:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.building.Building) (import-outside-toplevel)
tests/test_data.py:2344:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.thermalzone.ThermalZone) (import-outside-toplevel)
tests/test_data.py:2345:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.useconditions.UseConditions) (import-outside-toplevel)
tests/test_data.py:2349:8: C0103: Variable name "tz" doesn't conform to snake_case naming style (invalid-name)
tests/test_data.py:2390:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.building.Building) (import-outside-toplevel)
tests/test_data.py:2402:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.thermalzone.ThermalZone) (import-outside-toplevel)
tests/test_data.py:2404:8: C0103: Variable name "tz" doesn't conform to snake_case naming style (invalid-name)
tests/test_data.py:2410:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.useconditions.UseConditions) (import-outside-toplevel)
tests/test_data.py:2415:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.innerwall.InnerWall) (import-outside-toplevel)
tests/test_data.py:2385:4: R0915: Too many statements (65/50) (too-many-statements)
tests/test_data.py:2485:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.building.Building) (import-outside-toplevel)
tests/test_data.py:2495:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.thermalzone.ThermalZone) (import-outside-toplevel)
tests/test_data.py:2497:8: C0103: Variable name "tz" doesn't conform to snake_case naming style (invalid-name)
tests/test_data.py:2503:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.useconditions.UseConditions) (import-outside-toplevel)
tests/test_data.py:2508:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.outerwall.OuterWall) (import-outside-toplevel)
tests/test_data.py:2480:4: R0915: Too many statements (86/50) (too-many-statements)
tests/test_data.py:2606:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.building.Building) (import-outside-toplevel)
tests/test_data.py:2616:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.thermalzone.ThermalZone) (import-outside-toplevel)
tests/test_data.py:2618:8: C0103: Variable name "tz" doesn't conform to snake_case naming style (invalid-name)
tests/test_data.py:2624:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.useconditions.UseConditions) (import-outside-toplevel)
tests/test_data.py:2629:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.window.Window) (import-outside-toplevel)
tests/test_data.py:2630:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.layer.Layer) (import-outside-toplevel)
tests/test_data.py:2631:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.material.Material) (import-outside-toplevel)
tests/test_data.py:2601:4: R0915: Too many statements (102/50) (too-many-statements)
tests/test_data.py:2737:4: R0914: Too many local variables (19/15) (too-many-locals)
tests/test_data.py:2742:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.building.Building) (import-outside-toplevel)
tests/test_data.py:2752:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.thermalzone.ThermalZone) (import-outside-toplevel)
tests/test_data.py:2754:8: C0103: Variable name "tz" doesn't conform to snake_case naming style (invalid-name)
tests/test_data.py:2760:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.useconditions.UseConditions) (import-outside-toplevel)
tests/test_data.py:2765:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.rooftop.Rooftop) (import-outside-toplevel)
tests/test_data.py:2787:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.layer.Layer) (import-outside-toplevel)
tests/test_data.py:2792:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.material.Material) (import-outside-toplevel)
tests/test_data.py:2737:4: R0915: Too many statements (107/50) (too-many-statements)
tests/test_data.py:2880:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.building.Building) (import-outside-toplevel)
tests/test_data.py:2890:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.thermalzone.ThermalZone) (import-outside-toplevel)
tests/test_data.py:2892:8: C0103: Variable name "tz" doesn't conform to snake_case naming style (invalid-name)
tests/test_data.py:2898:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.useconditions.UseConditions) (import-outside-toplevel)
tests/test_data.py:2903:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.buildingphysics.groundfloor.GroundFloor) (import-outside-toplevel)
tests/test_data.py:2875:4: R0915: Too many statements (66/50) (too-many-statements)
tests/test_data.py:2966:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_data.py:2968:8: C0415: Import outside toplevel (teaser.examples.verification.verification_ASHRAE_140_600.main) (import-outside-toplevel)
tests/test_data.py:2977:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_data.py:2979:8: C0415: Import outside toplevel (teaser.examples.verification.verification_ASHRAE_140_620.main) (import-outside-toplevel)
tests/test_data.py:2988:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_data.py:2990:8: C0415: Import outside toplevel (teaser.examples.verification.verification_ASHRAE_140_900.main) (import-outside-toplevel)
tests/test_data.py:2999:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_data.py:3001:8: C0415: Import outside toplevel (teaser.examples.verification.verification_ASHRAE_140_920.main) (import-outside-toplevel)
tests/test_data.py:3117:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_data.py:3142:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_data.py:3144:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.building.Building) (import-outside-toplevel)
tests/test_data.py:3145:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.thermalzone.ThermalZone) (import-outside-toplevel)
tests/test_data.py:18:0: R0904: Too many public methods (74/20) (too-many-public-methods)
tests/test_data.py:10:0: C0411: standard import "import math" should be placed before "from teaser.logic import utilities" (wrong-import-order)
tests/test_data.py:11:0: C0411: standard import "import os" should be placed before "from teaser.logic import utilities" (wrong-import-order)
tests/test_data.py:12:0: C0411: third party import "import helptest" should be placed before "from teaser.logic import utilities" (wrong-import-order)
tests/test_data.py:13:0: C0411: standard import "import warnings as warnings" should be placed before "import helptest" (wrong-import-order)
tests/test_data.py:13:0: W0611: Unused warnings imported as warnings (unused-import)
************* Module test_examples
tests/test_examples.py:11:0: C0414: Import alias does not rename original package (useless-import-alias)
tests/test_examples.py:16:0: C0103: Class name "Test_examples" doesn't conform to PascalCase naming style (invalid-name)
tests/test_examples.py:16:0: R0205: Class 'Test_examples' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/test_examples.py:19:4: W0603: Using the global statement (global-statement)
tests/test_examples.py:25:8: W0621: Redefining name 'prj' from outer scope (line 13) (redefined-outer-name)
tests/test_examples.py:23:8: C0415: Import outside toplevel (teaser.examples.e1_generate_archetype) (import-outside-toplevel)
tests/test_examples.py:33:8: W0621: Redefining name 'prj' from outer scope (line 13) (redefined-outer-name)
tests/test_examples.py:31:8: C0415: Import outside toplevel (teaser.examples.e2_export_aixlib_models) (import-outside-toplevel)
tests/test_examples.py:33:8: W0612: Unused variable 'prj' (unused-variable)
tests/test_examples.py:39:8: W0621: Redefining name 'prj' from outer scope (line 13) (redefined-outer-name)
tests/test_examples.py:37:8: C0415: Import outside toplevel (teaser.examples.e3_export_ibpsa_models) (import-outside-toplevel)
tests/test_examples.py:39:8: E1111: Assigning result of a function call, where the function has no return (assignment-from-no-return)
tests/test_examples.py:39:8: W0612: Unused variable 'prj' (unused-variable)
tests/test_examples.py:45:8: W0621: Redefining name 'prj' from outer scope (line 13) (redefined-outer-name)
tests/test_examples.py:43:8: C0415: Import outside toplevel (teaser.examples.e4_save) (import-outside-toplevel)
tests/test_examples.py:45:8: E1111: Assigning result of a function call, where the function has no return (assignment-from-no-return)
tests/test_examples.py:45:8: W0612: Unused variable 'prj' (unused-variable)
tests/test_examples.py:51:8: W0621: Redefining name 'prj' from outer scope (line 13) (redefined-outer-name)
tests/test_examples.py:49:8: C0415: Import outside toplevel (teaser.examples.e5_load) (import-outside-toplevel)
tests/test_examples.py:51:8: E1111: Assigning result of a function call, where the function has no return (assignment-from-no-return)
tests/test_examples.py:51:8: W0612: Unused variable 'prj' (unused-variable)
tests/test_examples.py:57:8: W0621: Redefining name 'prj' from outer scope (line 13) (redefined-outer-name)
tests/test_examples.py:55:8: C0415: Import outside toplevel (teaser.examples.e6_generate_building) (import-outside-toplevel)
tests/test_examples.py:57:8: E1111: Assigning result of a function call, where the function has no return (assignment-from-no-return)
tests/test_examples.py:57:8: W0612: Unused variable 'prj' (unused-variable)
tests/test_examples.py:63:8: W0621: Redefining name 'prj' from outer scope (line 13) (redefined-outer-name)
tests/test_examples.py:61:8: C0415: Import outside toplevel (teaser.examples.e7_retrofit) (import-outside-toplevel)
tests/test_examples.py:63:8: E1111: Assigning result of a function call, where the function has no return (assignment-from-no-return)
tests/test_examples.py:63:8: W0612: Unused variable 'prj' (unused-variable)
tests/test_examples.py:69:8: W0621: Redefining name 'prj' from outer scope (line 13) (redefined-outer-name)
tests/test_examples.py:67:8: C0415: Import outside toplevel (teaser.examples.e8_change_boundary_conditions) (import-outside-toplevel)
tests/test_examples.py:69:8: E1111: Assigning result of a function call, where the function has no return (assignment-from-no-return)
tests/test_examples.py:69:8: W0612: Unused variable 'prj' (unused-variable)
tests/test_examples.py:9:0: C0411: standard import "import math" should be placed before "from teaser.logic import utilities" (wrong-import-order)
tests/test_examples.py:10:0: C0411: standard import "import os" should be placed before "from teaser.logic import utilities" (wrong-import-order)
tests/test_examples.py:11:0: C0411: standard import "import warnings as warnings" should be placed before "from teaser.logic import utilities" (wrong-import-order)
tests/test_examples.py:7:0: W0611: Unused utilities imported from teaser.logic (unused-import)
tests/test_examples.py:9:0: W0611: Unused import math (unused-import)
tests/test_examples.py:10:0: W0611: Unused import os (unused-import)
tests/test_examples.py:11:0: W0611: Unused warnings imported as warnings (unused-import)
************* Module test_modelicaversion
tests/test_modelicaversion.py:1:0: C0114: Missing module docstring (missing-module-docstring)
tests/test_modelicaversion.py:2:0: C0414: Import alias does not rename original package (useless-import-alias)
tests/test_modelicaversion.py:8:0: R0205: Class 'TestModelicaVersions' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/test_modelicaversion.py:10:4: W0602: Using global for 'prj' but no assignment is done (global-variable-not-assigned)
tests/test_modelicaversion.py:12:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_modelicaversion.py:14:12: C0415: Import outside toplevel (github.Github) (import-outside-toplevel)
tests/test_modelicaversion.py:18:8: C0415: Import outside toplevel (teaser.logic.buildingobjects.calculation.ibpsa.IBPSA) (import-outside-toplevel)
tests/test_modelicaversion.py:19:8: C0415: Import outside toplevel (teaser.logic.archetypebuildings.bmvbs.office.Office) (import-outside-toplevel)
tests/test_modelicaversion.py:33:8: W0702: No exception type(s) specified (bare-except)
tests/test_modelicaversion.py:12:4: R1710: Either all return statements in a function should return an expression, or none of them should. (inconsistent-return-statements)
tests/test_modelicaversion.py:8:0: R0903: Too few public methods (1/2) (too-few-public-methods)
tests/test_modelicaversion.py:2:0: C0411: standard import "import warnings as warnings" should be placed before "from teaser.project import Project" (wrong-import-order)
tests/test_modelicaversion.py:3:0: C0411: standard import "import os" should be placed before "from teaser.project import Project" (wrong-import-order)
************* Module test_simulation_export
tests/test_simulation_export.py:11:0: C0414: Import alias does not rename original package (useless-import-alias)
tests/test_simulation_export.py:16:0: C0103: Class name "Simulation_export" doesn't conform to PascalCase naming style (invalid-name)
tests/test_simulation_export.py:16:0: R0205: Class 'Simulation_export' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/test_simulation_export.py:19:4: W0603: Using the global statement (global-statement)
tests/test_simulation_export.py:25:8: W0621: Redefining name 'prj' from outer scope (line 13) (redefined-outer-name)
tests/test_simulation_export.py:23:8: C0415: Import outside toplevel (teaser.examples.e2_export_aixlib_models) (import-outside-toplevel)
tests/test_simulation_export.py:25:8: W0612: Unused variable 'prj' (unused-variable)
tests/test_simulation_export.py:16:0: R0903: Too few public methods (1/2) (too-few-public-methods)
tests/test_simulation_export.py:9:0: C0411: standard import "import math" should be placed before "from teaser.logic import utilities" (wrong-import-order)
tests/test_simulation_export.py:10:0: C0411: standard import "import os" should be placed before "from teaser.logic import utilities" (wrong-import-order)
tests/test_simulation_export.py:11:0: C0411: standard import "import warnings as warnings" should be placed before "from teaser.logic import utilities" (wrong-import-order)
tests/test_simulation_export.py:7:0: W0611: Unused utilities imported from teaser.logic (unused-import)
tests/test_simulation_export.py:9:0: W0611: Unused import math (unused-import)
tests/test_simulation_export.py:10:0: W0611: Unused import os (unused-import)
tests/test_simulation_export.py:11:0: W0611: Unused warnings imported as warnings (unused-import)
************* Module test_tabula_ab
tests/test_tabula_ab.py:1:0: C0114: Missing module docstring (missing-module-docstring)
tests/test_tabula_ab.py:5:0: C0115: Missing class docstring (missing-class-docstring)
tests/test_tabula_ab.py:5:0: C0103: Class name "Test_tabula_ab" doesn't conform to PascalCase naming style (invalid-name)
tests/test_tabula_ab.py:5:0: R0205: Class 'Test_tabula_ab' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/test_tabula_ab.py:6:4: W0602: Using global for 'prj' but no assignment is done (global-variable-not-assigned)
tests/test_tabula_ab.py:156:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:192:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:227:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:262:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:297:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:332:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:368:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:404:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:440:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:476:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:511:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:547:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:583:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:619:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab.py:655:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module test_tabula_ab_dk
tests/test_tabula_ab_dk.py:272:0: C0301: Line too long (168/100) (line-too-long)
tests/test_tabula_ab_dk.py:622:0: C0301: Line too long (129/100) (line-too-long)
tests/test_tabula_ab_dk.py:927:0: C0301: Line too long (128/100) (line-too-long)
tests/test_tabula_ab_dk.py:1:0: C0302: Too many lines in module (1235/1000) (too-many-lines)
tests/test_tabula_ab_dk.py:1:0: C0114: Missing module docstring (missing-module-docstring)
tests/test_tabula_ab_dk.py:5:0: C0115: Missing class docstring (missing-class-docstring)
tests/test_tabula_ab_dk.py:5:0: C0103: Class name "Test_tabula_ab" doesn't conform to PascalCase naming style (invalid-name)
tests/test_tabula_ab_dk.py:5:0: R0205: Class 'Test_tabula_ab' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/test_tabula_ab_dk.py:6:4: W0602: Using global for 'prj' but no assignment is done (global-variable-not-assigned)
tests/test_tabula_ab_dk.py:275:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:325:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:360:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:395:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:430:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:470:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:517:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:552:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:587:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:626:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:676:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:711:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:746:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:781:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:823:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:860:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:886:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:907:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:931:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:981:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:1016:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:1051:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:1086:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:1128:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:1165:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:1191:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:1217:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_ab_dk.py:5:0: R0904: Too many public methods (36/20) (too-many-public-methods)
************* Module test_tabula_mfh
tests/test_tabula_mfh.py:1:0: C0302: Too many lines in module (1647/1000) (too-many-lines)
tests/test_tabula_mfh.py:1:0: C0114: Missing module docstring (missing-module-docstring)
tests/test_tabula_mfh.py:6:0: C0115: Missing class docstring (missing-class-docstring)
tests/test_tabula_mfh.py:6:0: C0103: Class name "Test_tabula_mfh" doesn't conform to PascalCase naming style (invalid-name)
tests/test_tabula_mfh.py:6:0: R0205: Class 'Test_tabula_mfh' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/test_tabula_mfh.py:7:4: W0602: Using global for 'prj' but no assignment is done (global-variable-not-assigned)
tests/test_tabula_mfh.py:330:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:372:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:408:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:456:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:491:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:526:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:561:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:596:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:631:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:666:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:701:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:736:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:771:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:813:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:848:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:895:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:930:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:965:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1000:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1035:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1070:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1105:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1140:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1175:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1210:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1252:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1287:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1334:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1369:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1404:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1439:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1474:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1509:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1544:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1579:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:1614:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_mfh.py:6:0: R0904: Too many public methods (47/20) (too-many-public-methods)
************* Module test_tabula_sfh
tests/test_tabula_sfh.py:1:0: C0302: Too many lines in module (1743/1000) (too-many-lines)
tests/test_tabula_sfh.py:1:0: C0114: Missing module docstring (missing-module-docstring)
tests/test_tabula_sfh.py:6:0: C0115: Missing class docstring (missing-class-docstring)
tests/test_tabula_sfh.py:6:0: C0103: Class name "Test_tabula_sfh" doesn't conform to PascalCase naming style (invalid-name)
tests/test_tabula_sfh.py:6:0: R0205: Class 'Test_tabula_sfh' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/test_tabula_sfh.py:7:4: W0602: Using global for 'prj' but no assignment is done (global-variable-not-assigned)
tests/test_tabula_sfh.py:330:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:366:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:409:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:445:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:486:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:526:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:567:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:602:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:637:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:672:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:707:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:742:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:777:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:814:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:855:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:891:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:932:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:973:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1011:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1047:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1083:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1119:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1155:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1191:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1227:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1264:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1304:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1340:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1381:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1422:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1463:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1499:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1535:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1571:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1607:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:1643:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh.py:6:0: R0904: Too many public methods (48/20) (too-many-public-methods)
************* Module test_tabula_sfh_dk
tests/test_tabula_sfh_dk.py:289:0: C0301: Line too long (145/100) (line-too-long)
tests/test_tabula_sfh_dk.py:290:0: C0301: Line too long (146/100) (line-too-long)
tests/test_tabula_sfh_dk.py:291:0: C0301: Line too long (153/100) (line-too-long)
tests/test_tabula_sfh_dk.py:637:0: C0301: Line too long (159/100) (line-too-long)
tests/test_tabula_sfh_dk.py:638:0: C0301: Line too long (160/100) (line-too-long)
tests/test_tabula_sfh_dk.py:639:0: C0301: Line too long (162/100) (line-too-long)
tests/test_tabula_sfh_dk.py:907:0: C0301: Line too long (155/100) (line-too-long)
tests/test_tabula_sfh_dk.py:1:0: C0302: Too many lines in module (1282/1000) (too-many-lines)
tests/test_tabula_sfh_dk.py:1:0: C0114: Missing module docstring (missing-module-docstring)
tests/test_tabula_sfh_dk.py:6:0: C0115: Missing class docstring (missing-class-docstring)
tests/test_tabula_sfh_dk.py:6:0: C0103: Class name "Test_tabula_sfh_dk" doesn't conform to PascalCase naming style (invalid-name)
tests/test_tabula_sfh_dk.py:6:0: R0205: Class 'Test_tabula_sfh_dk' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/test_tabula_sfh_dk.py:7:4: W0602: Using global for 'prj' but no assignment is done (global-variable-not-assigned)
tests/test_tabula_sfh_dk.py:294:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:331:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:368:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:405:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:447:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:484:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:521:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:563:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:601:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:643:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:680:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:717:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:754:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:791:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:833:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:871:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:910:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:947:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:989:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:1026:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:1063:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:1105:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:1143:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_sfh_dk.py:6:0: R0904: Too many public methods (32/20) (too-many-public-methods)
************* Module test_tabula_th
tests/test_tabula_th.py:1:0: C0302: Too many lines in module (1546/1000) (too-many-lines)
tests/test_tabula_th.py:1:0: C0114: Missing module docstring (missing-module-docstring)
tests/test_tabula_th.py:5:0: C0115: Missing class docstring (missing-class-docstring)
tests/test_tabula_th.py:5:0: C0103: Class name "Test_tabula_th" doesn't conform to PascalCase naming style (invalid-name)
tests/test_tabula_th.py:5:0: R0205: Class 'Test_tabula_th' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/test_tabula_th.py:6:4: W0602: Using global for 'prj' but no assignment is done (global-variable-not-assigned)
tests/test_tabula_th.py:301:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:337:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:372:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:407:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:442:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:477:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:512:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:547:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:587:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:622:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:666:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:710:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:747:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:783:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:819:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:855:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:890:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:926:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:962:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1003:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1039:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1084:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1129:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1165:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1201:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1237:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1273:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1309:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1345:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1381:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1422:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1458:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:1503:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th.py:5:0: R0904: Too many public methods (43/20) (too-many-public-methods)
************* Module test_tabula_th_dk
tests/test_tabula_th_dk.py:272:0: C0301: Line too long (168/100) (line-too-long)
tests/test_tabula_th_dk.py:612:0: C0301: Line too long (142/100) (line-too-long)
tests/test_tabula_th_dk.py:889:0: C0301: Line too long (132/100) (line-too-long)
tests/test_tabula_th_dk.py:1:0: C0302: Too many lines in module (1170/1000) (too-many-lines)
tests/test_tabula_th_dk.py:1:0: C0114: Missing module docstring (missing-module-docstring)
tests/test_tabula_th_dk.py:5:0: C0115: Missing class docstring (missing-class-docstring)
tests/test_tabula_th_dk.py:5:0: C0103: Class name "Test_tabula_th_dk" doesn't conform to PascalCase naming style (invalid-name)
tests/test_tabula_th_dk.py:5:0: R0205: Class 'Test_tabula_th_dk' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/test_tabula_th_dk.py:6:4: W0602: Using global for 'prj' but no assignment is done (global-variable-not-assigned)
tests/test_tabula_th_dk.py:275:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:323:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:358:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:394:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:429:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:464:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:499:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:534:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:577:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:615:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:663:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:698:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:734:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:769:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:804:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:839:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:874:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:893:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:941:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:976:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:1012:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:1047:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:1082:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:1117:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:1152:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_tabula_th_dk.py:5:0: R0904: Too many public methods (34/20) (too-many-public-methods)
************* Module test_useconditions
tests/test_useconditions.py:160:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
tests/test_useconditions.py:161:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
tests/test_useconditions.py:162:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
tests/test_useconditions.py:163:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
tests/test_useconditions.py:164:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
tests/test_useconditions.py:176:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
tests/test_useconditions.py:177:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
tests/test_useconditions.py:182:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
tests/test_useconditions.py:197:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
tests/test_useconditions.py:202:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
tests/test_useconditions.py:207:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
tests/test_useconditions.py:219:0: C0301: Line too long (111/100) (line-too-long)
tests/test_useconditions.py:219:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
tests/test_useconditions.py:222:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
tests/test_useconditions.py:225:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
tests/test_useconditions.py:228:0: C0325: Unnecessary parens after 'assert' keyword (superfluous-parens)
tests/test_useconditions.py:233:0: C0305: Trailing newlines (trailing-newlines)
tests/test_useconditions.py:6:0: W0404: Reimport 'pytest' (imported line 4) (reimported)
tests/test_useconditions.py:17:0: C0103: Class name "Test_useconditions" doesn't conform to PascalCase naming style (invalid-name)
tests/test_useconditions.py:17:0: R0205: Class 'Test_useconditions' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
tests/test_useconditions.py:20:4: W0602: Using global for 'prj' but no assignment is done (global-variable-not-assigned)
tests/test_useconditions.py:136:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_useconditions.py:143:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_useconditions.py:151:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_useconditions.py:166:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_useconditions.py:184:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_useconditions.py:210:4: C0116: Missing function or method docstring (missing-function-docstring)
tests/test_useconditions.py:6:0: C0412: Imports from package pytest are not grouped (ungrouped-imports)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1547:1581]
==test_tabula_th:[1426:1461]
            name="ResidentialBuilding",
            year_of_construction=2008,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.17 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_mfh_2015(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1407:1441]
==test_tabula_th:[1277:1312]
            name="ResidentialBuilding",
            year_of_construction=1977,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.21 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_th_1983(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[968:1002]
==test_tabula_th:[859:893]
            name="ResidentialBuilding",
            year_of_construction=1977,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.19 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.22 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.28 - 0.34)), 1)
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_th_1983(self):

        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[623:658]
==test_tabula_th:[1241:1276]
            name="ResidentialBuilding",
            year_of_construction=1967,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.23 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_th_1978(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[444:479]
==test_tabula_th:[823:858]
            name="ResidentialBuilding",
            year_of_construction=1967,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.19 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.23 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.31 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_ab_1978(self):

        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[551:586]
==test_tabula_th:[1169:1204]
            name="ResidentialBuilding",
            year_of_construction=1947,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.1 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.21 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_th_1957(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[587:622]
==test_tabula_mfh:[1337:1371]
            name="ResidentialBuilding",
            year_of_construction=1956,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.11 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_ab_1968(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[408:443]
==test_tabula_mfh:[898:932]
            name="ResidentialBuilding",
            year_of_construction=1956,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.23 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.23 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.33 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_ab_1968(self):

        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[659:689]
==test_tabula_mfh:[1407:1439]
            name="ResidentialBuilding",
            year_of_construction=1977,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.21 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_mfh_1983(self): (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[570:594]
==test_tabula_th:[480:504]
            name="ResidentialBuilding",
            year_of_construction=1982,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.5 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.65 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[529:553]
==test_tabula_th:[445:469]
            name="ResidentialBuilding",
            year_of_construction=1977,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.51 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.0 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.77 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[265:289]
==test_tabula_th:[410:434]
            name="ResidentialBuilding",
            year_of_construction=1967,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.51 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 1.08 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1319:1342]
==test_tabula_th:[1180:1204]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.21 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_th_1957(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[424:447]
==test_tabula_th:[351:374]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.7 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.77 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_th_1957(self):
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1523:1546]
==test_tabula_sfh:[1550:1573]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.17 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_mfh_2009(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[715:738]
==test_tabula_sfh:[721:744]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.28 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.35 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.8 - 0.17)), 1)

    def test_tabula_uvalue_standard_sfh_2100(self):
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[598:622]
==test_tabula_th:[1216:1240]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_ab_1968(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[526:550]
==test_tabula_th:[1144:1168]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.22 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_th_1948(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[347:371]
==test_tabula_th:[726:750]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.34 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.29 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_ab_1948(self):

        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[634:658]
==test_tabula_mfh:[1383:1406]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.23 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_ab_1978(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[562:586]
==test_tabula_mfh:[1418:1441]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.21 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_mfh_1983(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[350:375]
==test_tabula_sfh:[386:412]
        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:
            if "_1_" in floor.construction_data:

                assert round(1 / (floor.r_conduc * floor.area),
                             1) == round((1 / (1 / 0.88 - 0.34)), 1)

            elif "_2_" in floor.construction_data:

                assert round(1 / (floor.r_conduc * floor.area),
                             1) == round((1 / (1 / 1.2 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_mfh_1918(self):

        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1509:1537]
==test_tabula_th:[1355:1384]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.11 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.19 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_2001(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1473:1501]
==test_tabula_th:[1319:1348]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.20 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_th_1994(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1021:1049]
==test_tabula_th:[900:929]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.41 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.21 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.26 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_sfh_1994(self):
        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1044:1067]
==test_tabula_sfh:[1165:1188]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.16 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[670:689]
==test_tabula_sfh:[1319:1340]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.21 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_1957(self): (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[230:249]
==test_tabula_mfh:[459:478]
            name="ResidentialBuilding",
            year_of_construction=1956,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 1.08 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1230:1254]
==test_tabula_sfh:[1284:1306]
        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:
            if "_1_" in floor.construction_data:
                assert round(1 / (floor.r_conduc * floor.area),
                             1) == round((1 / (1 / 0.22 - 0.34)), 1)

            elif "_2_" in floor.construction_data:
                assert round(1 / (floor.r_conduc * floor.area),
                             1) == round((1 / (1 / 0.23 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_1948(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[1119:1145]
==test_tabula_th_dk:[991:1014]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.14 - 0.34)), 1)
# U-value of website is 1.03, but is seems to be wrong

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_adv_retrofit_sfh_dk_1849(self):
        prj.add_residential(
            construction_data='tabula_dk_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[875:893]
==test_tabula_th:[875:893]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.28 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_sfh_1957(self):
        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[392:411]
==test_tabula_th:[321:339]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.88 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.7 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_mfh_1948(self):

        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1257:1274]
==test_tabula_th:[1428:1445]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[650:668]
==test_tabula_sfh:[656:674]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.4 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.9 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 2.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_mfh_2009(self):
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1075:1092]
==test_tabula_sfh:[747:764]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.15 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.17 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[661:678]
==test_tabula_th:[1243:1260]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[553:570]
==test_tabula_th:[1135:1152]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.1 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[482:499]
==test_tabula_th:[825:842]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.19 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.23 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[531:550]
==test_tabula_mfh:[1271:1289]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.22 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_ab_1948(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[388:407]
==test_tabula_mfh:[984:1002]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.28 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_1983(self):
        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[352:371]
==test_tabula_mfh:[832:850]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.29 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_ab_1948(self):

        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[625:642]
==test_tabula_mfh:[1409:1426]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[334:350]
==test_tabula_sfh:[334:350]
            name="ResidentialBuilding",
            year_of_construction=1858,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 2.6 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 2.0 - 0.17)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[160:176]
==test_tabula_sfh:[370:386]
            name="ResidentialBuilding",
            year_of_construction=1918,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 1.3 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.7 - 0.17)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[496:513]
==test_tabula_mfh:[984:1001]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.28 - 0.34)), 1)
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_ab_1919(self):

        prj.add_residential( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[316:334]
==test_tabula_mfh:[545:562]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.77 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 4.0 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_ab_1919(self):

        prj.add_residential( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_data:[3056:3072]
==test_useconditions:[56:72]
        prj_test = Project()
        prj_test.name = "TestAHUProfiles"

        prj_test.add_non_residential(
            construction_data="iwu_heavy",
            geometry_data="bmvbs_office",
            name="OfficeBuilding",
            year_of_construction=2015,
            number_of_floors=4,
            height_of_floors=3.5,
            net_leased_area=1000.0,
        )

        prj_test.used_library_calc = "AixLib"
        prj_test.number_of_elements_calc = 2
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1545:1573]
==test_tabula_th:[1432:1461]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.17 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_th_2015(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1134:1157]
==test_tabula_th:[1018:1042]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.15 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.17 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_th_2015(self):

        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1170:1188]
==test_tabula_th:[941:959]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[429:447]
==test_tabula_th:[461:479]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.77 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_th_1983(self):
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[605:619]
==test_tabula_th:[515:529]
            name="ResidentialBuilding",
            year_of_construction=1993,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.4 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1049:1072]
==test_tabula_th:[941:965]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_2001(self):
        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1108:1122]
==test_tabula_th:[1007:1021]
            name="ResidentialBuilding",
            year_of_construction=2008,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.2 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[669:683]
==test_tabula_th:[590:604]
            name="ResidentialBuilding",
            year_of_construction=2008,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.2 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1593:1614]
==test_tabula_sfh:[1658:1682]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.7 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_mfh_2100(self): (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1593:1616]
==test_tabula_sfh:[1622:1645]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.7 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_2100(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1014:1037]
==test_tabula_sfh:[1026:1049]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.21 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.26 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_1994(self):
        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[995:1018]
==test_tabula_th_dk:[1026:1049]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.15 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_adv_retrofit_th_dk_1971(self):
        prj.add_residential(
            construction_data='tabula_dk_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[419:443]
==test_tabula_th:[798:822]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.23 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.33 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_th_1968(self):

        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[372:386]
==test_tabula_th:[751:765]
            name="ResidentialBuilding",
            year_of_construction=1947,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[195:209]
==test_tabula_th:[340:354]
            name="ResidentialBuilding",
            year_of_construction=1947,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.65 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[455:479]
==test_tabula_mfh:[944:967]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.23 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.31 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_ab_1978(self):

        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[276:299]
==test_tabula_mfh:[505:528]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 1.08 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_mfh_1978(self):
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[480:494]
==test_tabula_mfh:[968:982]
            name="ResidentialBuilding",
            year_of_construction=1977,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.19 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[515:529]
==test_tabula_mfh:[1255:1269]
            name="ResidentialBuilding",
            year_of_construction=1918,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[160:174]
==test_tabula_mfh:[376:390]
            name="ResidentialBuilding",
            year_of_construction=1918,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 1.3 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[345:358]
==test_tabula_th_dk:[991:1004]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.14 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1238:1251]
==test_tabula_th:[1432:1445]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[686:699]
==test_tabula_th:[601:614]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.28 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1413:1426]
==test_tabula_th_dk:[1021:1034]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[610:623]
==test_tabula_th:[526:539]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.6 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.51 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[505:518]
==test_tabula_th:[421:434]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 1.08 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1216:1230]
==test_tabula_th:[1428:1442]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[575:588]
==test_tabula_sfh:[581:594]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.65 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1060:1073]
==test_tabula_th_dk:[985:999]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.14)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[388:401]
==test_tabula_th:[606:619]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.28 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[241:254]
==test_tabula_th:[386:399]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 1.29 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[171:184]
==test_tabula_th:[316:329]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.7 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.88 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[521:534]
==test_tabula_sfh:[1314:1327]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[211:224]
==test_tabula_mfh:[545:558]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.77 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[1008:1028]
==test_tabula_th_dk:[1101:1119]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_adv_retrofit_sfh_dk_1959(self):
        prj.add_residential(
            construction_data='tabula_dk_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[971:991]
==test_tabula_th_dk:[925:943]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_adv_retrofit_sfh_dk_1971(self):
        prj.add_residential(
            construction_data='tabula_dk_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[736:756]
==test_tabula_th_dk:[823:841]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_retrofit_th_dk_1997(self):
        prj.add_residential(
            construction_data='tabula_dk_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[699:719]
==test_tabula_th_dk:[647:665]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_th_dk_1929(self):
        prj.add_residential(
            construction_data='tabula_dk_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1329:1342]
==test_tabula_th:[1447:1461]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_1957(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1293:1306]
==test_tabula_th:[1411:1425]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_th_2008(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1253:1266]
==test_tabula_th:[1370:1384]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_1918(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1144:1157]
==test_tabula_th:[844:858]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_sfh_2015(self):
        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1108:1121]
==test_tabula_th:[808:822]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_th_1968(self):

        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1072:1085]
==test_tabula_th:[772:786]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_th_1957(self):

        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[844:857]
==test_tabula_th:[736:750]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_sfh_1948(self):
        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1568:1581]
==test_tabula_th:[1334:1348]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_mfh_2015(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1533:1546]
==test_tabula_th:[1298:1312]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_mfh_2009(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1498:1511]
==test_tabula_th:[1262:1276]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_th_1978(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1463:1476]
==test_tabula_th:[1190:1204]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_th_1957(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1428:1441]
==test_tabula_th:[1226:1240]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_th_1968(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1393:1406]
==test_tabula_th:[1154:1168]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_th_1948(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1549:1561]
==test_tabula_th:[1351:1363]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1257:1269]
==test_tabula_th:[1315:1327]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[777:789]
==test_tabula_th:[896:908]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.41 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1238:1254]
==test_tabula_sfh:[1367:1383]
                assert round(1 / (floor.r_conduc * floor.area),
                             1) == round((1 / (1 / 0.23 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_mfh_1918(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[837:850]
==test_tabula_sfh:[803:816]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_sfh_1918(self):
        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[791:815]
==test_tabula_sfh:[834:857]
        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:
            if "_1_" in floor.construction_data:
                assert round(1 / (floor.r_conduc * floor.area),
                             1) == round((1 / (1 / 0.29 - 0.34)), 1)

            elif "_2_" in floor.construction_data:

                assert round(1 / (floor.r_conduc * floor.area),
                             1) == round((1 / (1 / 0.32 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_sfh_1948(self):
        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1199:1213]
==test_tabula_sfh:[1216:1230]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.1 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_1859(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[760:774]
==test_tabula_sfh:[766:780]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.1 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_sfh_1859(self):

        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1129:1142]
==test_tabula_sfh:[1036:1049]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_sfh_1994(self):
        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1094:1107]
==test_tabula_sfh:[1000:1013]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_2009(self):
        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1059:1072]
==test_tabula_sfh:[962:975]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_2001(self):
        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1024:1037]
==test_tabula_sfh:[880:893]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_sfh_1957(self):
        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[989:1002]
==test_tabula_sfh:[921:934]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_1983(self):
        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[434:448]
==test_tabula_sfh:[545:559]
        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:
            if "_1_" in floor.construction_data:

                assert round(1 / (floor.r_conduc * floor.area),
                             1) == round((1 / (1 / 0.77 - 0.34)), 1)

            elif "_2_" in floor.construction_data:

                assert round(1 / (floor.r_conduc * floor.area),
                             1) == round((1 / (1 / 1.0 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[671:683]
==test_tabula_sfh:[712:724]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.2 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1112:1130]
==test_tabula_sfh_dk:[1124:1145]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.14 - 0.34)), 1)
# U-value of website is 1.03, but is seems to be wrong

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_adv_retrofit_sfh_dk_1849(self):
        prj.add_residential(
            construction_data='tabula_dk_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1035:1053]
==test_tabula_sfh_dk:[1087:1107]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.14 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_adv_retrofit_ab_dk_1959(self):
        prj.add_residential(
            construction_data='tabula_dk_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[197:209]
==test_tabula_th:[377:389]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.65 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[644:658]
==test_tabula_mfh:[1358:1371]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_mfh_1968(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[608:622]
==test_tabula_mfh:[1323:1336]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_mfh_1957(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[572:586]
==test_tabula_mfh:[1276:1289]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_ab_1957(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[536:550]
==test_tabula_mfh:[1241:1254]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_ab_1948(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[465:479]
==test_tabula_mfh:[919:932]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_ab_1978(self):

        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[429:443]
==test_tabula_mfh:[954:967]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_ab_1968(self):

        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[393:407]
==test_tabula_mfh:[884:897]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_1957(self):
        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[357:371]
==test_tabula_mfh:[802:815]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_ab_1948(self):

        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[181:194]
==test_tabula_mfh:[361:375]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_mfh_1918(self):

        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[625:637]
==test_tabula_mfh:[1444:1456]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[553:565]
==test_tabula_mfh:[1145:1157]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.1 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[517:529]
==test_tabula_mfh:[1216:1228]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[446:458]
==test_tabula_mfh:[970:982]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.19 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[374:386]
==test_tabula_mfh:[706:718]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[302:314]
==test_tabula_mfh:[496:508]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.51 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[267:279]
==test_tabula_mfh:[531:543]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.51 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[891:911]
==test_tabula_th_dk:[647:664]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------------------------------------------------------------------------------
#U-value adv retrofit

    def test_tabula_uvalue_adv_retrofit_sfh_dk_1997(self):
        prj.add_residential( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[710:721]
==test_tabula_th:[625:636]
            name="ResidentialBuilding",
            year_of_construction=2014,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.2 - 0.21)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[640:651]
==test_tabula_th:[550:561]
            name="ResidentialBuilding",
            year_of_construction=2000,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.35 - 0.21)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[817:827]
==test_tabula_th:[714:724]
            name="ResidentialBuilding",
            year_of_construction=1918,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219
            )

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1391:1406]
==test_tabula_sfh:[1291:1306]
                             1) == round((1 / (1 / 0.23 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_1948(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1164:1176]
==test_tabula_sfh:[1632:1644]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.7 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_2100(self):
        prj.add_residential( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1199:1212]
==test_tabula_sfh:[766:779]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.1 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_sfh_1859(self):

        prj.add_residential( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[760:773]
==test_tabula_sfh:[1216:1229]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.1 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_1859(self):

        prj.add_residential( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[725:737]
==test_tabula_sfh:[1180:1192]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_sfh_2100(self):
        prj.add_residential( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[500:513]
==test_tabula_mfh:[884:896]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_1957(self):
        prj.add_residential( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[321:334]
==test_tabula_mfh:[585:597]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 4.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_mfh_1994(self):
        prj.add_residential( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_th:[596:609]
==test_tabula_th_dk:[508:521]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.2 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[847:873]
==test_tabula_th_dk:[713:736]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.4 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)
# U-value of website is 1.03, but is seems to be wrong

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_retrofit_sfh_dk_1849(self):
        prj.add_residential(
            construction_data='tabula_dk_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[545:565]
==test_tabula_th_dk:[342:360]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 1.5 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.7 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_th_dk_1949(self):
        prj.add_residential(
            construction_data='tabula_dk_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[1077:1085]
==test_tabula_th_dk:[910:918]
        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:
            if "_1_" in wall.construction_data:
                assert round(
                    1 / (wall.r_conduc * wall.area),
                    1) == round((1 / (1 / 0.12 - 0.17)), 1)
            if "_2_" in wall.construction_data:
                assert round(
                    1 / (wall.r_conduc * wall.area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[805:813]
==test_tabula_th_dk:[632:640]
        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:
            if "_1_" in wall.construction_data:
                assert round(
                    1 / (wall.r_conduc * wall.area),
                    1) == round((1 / (1 / 0.4 - 0.17)), 1)
            if "_2_" in wall.construction_data:
                assert round(
                    1 / (wall.r_conduc * wall.area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[535:543]
==test_tabula_th_dk:[292:300]
        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:
            if "_1_" in wall.construction_data:
                assert round(
                    1 / (wall.r_conduc * wall.area),
                    1) == round((1 / (1 / 1.6 - 0.17)), 1)
            if "_2_" in wall.construction_data:
                assert round(
                    1 / (wall.r_conduc * wall.area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[1163:1172]
==test_tabula_th_dk:[925:941]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_adv_retrofit_th_dk_1929(self): (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[691:701]
==test_tabula_th_dk:[753:769]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.28 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[870:893]
==test_tabula_th:[762:786]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.25 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.28 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_sfh_1957(self):
        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[510:528]
==test_tabula_th:[426:444]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 1.08 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_th_1978(self):
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[515:528]
==test_tabula_th:[536:549]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_th_2001(self):
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[475:488]
==test_tabula_th:[466:479]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_sfh_1968(self):
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[434:447]
==test_tabula_th:[501:514]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_th_1994(self):
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[398:412]
==test_tabula_th:[431:444]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_sfh_1948(self):

        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[355:369]
==test_tabula_th:[396:409]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_th_1968(self):
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[529:538]
==test_tabula_th:[445:454]
            name="ResidentialBuilding",
            year_of_construction=1977,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[489:498]
==test_tabula_th:[410:419]
            name="ResidentialBuilding",
            year_of_construction=1967,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1348:1371]
==test_tabula_th:[1216:1240]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_th_1968(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[832:850]
==test_tabula_th:[731:750]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.29 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_1948(self):
        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[361:375]
==test_tabula_th:[361:374]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_mfh_1918(self):

        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1582:1591]
==test_tabula_th:[1043:1052]
            name="ResidentialBuilding",
            year_of_construction=2014,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1143:1152]
==test_tabula_th:[625:634]
            name="ResidentialBuilding",
            year_of_construction=2014,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1547:1556]
==test_tabula_th:[590:599]
            name="ResidentialBuilding",
            year_of_construction=2008,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1108:1117]
==test_tabula_th:[1426:1435]
            name="ResidentialBuilding",
            year_of_construction=2008,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1512:1521]
==test_tabula_th:[966:975]
            name="ResidentialBuilding",
            year_of_construction=2000,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1073:1082]
==test_tabula_th:[550:559]
            name="ResidentialBuilding",
            year_of_construction=2000,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1477:1486]
==test_tabula_th:[930:939]
            name="ResidentialBuilding",
            year_of_construction=1993,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1038:1047]
==test_tabula_th:[515:524]
            name="ResidentialBuilding",
            year_of_construction=1993,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1442:1451]
==test_tabula_th:[894:903]
            name="ResidentialBuilding",
            year_of_construction=1982,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1003:1012]
==test_tabula_th:[480:489]
            name="ResidentialBuilding",
            year_of_construction=1982,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1337:1346]
==test_tabula_th:[375:384]
            name="ResidentialBuilding",
            year_of_construction=1956,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1483:1496]
==test_tabula_sfh_dk:[1114:1127]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1378:1391]
==test_tabula_sfh_dk:[1152:1166]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1633:1647]
==test_tabula_sfh:[1627:1643]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.7 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_2100(self): (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1493:1511]
==test_tabula_sfh:[1519:1537]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.19 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_mfh_2001(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1533:1546]
==test_tabula_sfh:[1524:1537]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_2001(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1498:1511]
==test_tabula_sfh:[1560:1573]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_mfh_2001(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1463:1476]
==test_tabula_sfh:[1488:1501]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_1994(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1428:1441]
==test_tabula_sfh:[1452:1465]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_1983(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1393:1406]
==test_tabula_sfh:[1411:1424]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_1978(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1358:1371]
==test_tabula_sfh:[1370:1383]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_mfh_1968(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1323:1336]
==test_tabula_sfh:[1329:1342]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_1957(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1276:1289]
==test_tabula_sfh:[1293:1306]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_1948(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1241:1254]
==test_tabula_sfh:[1253:1266]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_1918(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1553:1581]
==test_tabula_sfh:[1545:1573]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.17 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_mfh_2015(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1261:1274]
==test_tabula_sfh:[1238:1251]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1220:1230]
==test_tabula_sfh:[1238:1248]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1164:1175]
==test_tabula_sfh:[1668:1682]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.7 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_2100(self): (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1418:1441]
==test_tabula_sfh:[1319:1342]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.21 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_mfh_1983(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1307:1318]
==test_tabula_sfh:[1355:1366]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:

            if "_1_" in floor.construction_data:
                assert round(1 / (floor.r_conduc * floor.area),
                             1) == round((1 / (1 / 0.21 - 0.34)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1089:1107]
==test_tabula_sfh:[1103:1121]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.21 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_2009(self):
        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1054:1072]
==test_tabula_sfh:[1067:1085]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_2001(self):
        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[984:1002]
==test_tabula_sfh:[875:893]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.28 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_sfh_1957(self):
        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[781:791]
==test_tabula_sfh:[788:798]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.41 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.35 - 0.17)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[704:713]
==test_tabula_sfh:[710:719]
            name="ResidentialBuilding",
            year_of_construction=2014,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[669:678]
==test_tabula_sfh:[675:684]
            name="ResidentialBuilding",
            year_of_construction=2008,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[634:643]
==test_tabula_sfh:[640:649]
            name="ResidentialBuilding",
            year_of_construction=2000,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[599:608]
==test_tabula_sfh:[605:614]
            name="ResidentialBuilding",
            year_of_construction=1993,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[564:573]
==test_tabula_sfh:[570:579]
            name="ResidentialBuilding",
            year_of_construction=1982,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1255:1264]
==test_tabula_sfh:[370:379]
            name="ResidentialBuilding",
            year_of_construction=1918,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[775:784]
==test_tabula_sfh:[334:343]
            name="ResidentialBuilding",
            year_of_construction=1858,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1030:1053]
==test_tabula_th_dk:[955:978]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.14 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_adv_retrofit_th_dk_1949(self):
        prj.add_residential(
            construction_data='tabula_dk_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[601:614]
==test_tabula_th_dk:[591:604]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.24 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.14 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[941:950]
==test_tabula_sfh_dk:[1072:1081]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.14)), 1)

        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:
            if "_1_" in wall.construction_data:
                assert round(
                    1 / (wall.r_conduc * wall.area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1000:1018]
==test_tabula_sfh_dk:[1045:1065]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.15 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_adv_retrofit_ab_dk_1949(self):
        prj.add_residential(
            construction_data='tabula_dk_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[807:825]
==test_tabula_sfh_dk:[815:835]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_retrofit_ab_dk_1977(self):
        prj.add_residential(
            construction_data='tabula_dk_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[790:799]
==test_tabula_sfh_dk:[800:809]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.12 - 0.14)), 1)

        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:
            if "_1_" in wall.construction_data:
                assert round(
                    1 / (wall.r_conduc * wall.area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[695:713]
==test_tabula_sfh_dk:[773:793]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.29 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_retrofit_sfh_dk_1949(self):
        prj.add_residential(
            construction_data='tabula_dk_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[795:805]
==test_tabula_sfh_dk:[961:969]
        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:
            if "_1_" in wall.construction_data:
                assert round(
                    1 / (wall.r_conduc * wall.area),
                    1) == round((1 / (1 / 0.1 - 0.17)), 1)
            if "_2_" in wall.construction_data:
                assert round(
                    1 / (wall.r_conduc * wall.area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[414:430]
==test_tabula_sfh:[429:439]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.77 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[629:642]
==test_tabula_th_dk:[1021:1034]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[557:570]
==test_tabula_th_dk:[1056:1069]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.1 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[551:560]
==test_tabula_th:[751:760]
            name="ResidentialBuilding",
            year_of_construction=1947,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[372:381]
==test_tabula_th:[340:349]
            name="ResidentialBuilding",
            year_of_construction=1947,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[629:639]
==test_tabula_sfh:[1432:1442]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[521:531]
==test_tabula_sfh:[1274:1284]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[460:479]
==test_tabula_sfh:[957:975]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.31 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_ab_1978(self):

        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[587:596]
==test_tabula_sfh:[448:457]
            name="ResidentialBuilding",
            year_of_construction=1956,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[195:204]
==test_tabula_sfh:[413:422]
            name="ResidentialBuilding",
            year_of_construction=1947,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[680:689]
==test_tabula_mfh:[1241:1252]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1) (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[251:264]
==test_tabula_mfh:[480:493]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_ab_1968(self):
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[216:229]
==test_tabula_mfh:[445:458]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_mfh_1957(self):
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[659:668]
==test_tabula_mfh:[968:977]
            name="ResidentialBuilding",
            year_of_construction=1977,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[480:489]
==test_tabula_mfh:[1407:1416]
            name="ResidentialBuilding",
            year_of_construction=1977,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[300:309]
==test_tabula_mfh:[529:538]
            name="ResidentialBuilding",
            year_of_construction=1977,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[623:632]
==test_tabula_mfh:[1372:1381]
            name="ResidentialBuilding",
            year_of_construction=1967,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[444:453]
==test_tabula_mfh:[933:942]
            name="ResidentialBuilding",
            year_of_construction=1967,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[265:274]
==test_tabula_mfh:[494:503]
            name="ResidentialBuilding",
            year_of_construction=1967,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[408:417]
==test_tabula_mfh:[459:468]
            name="ResidentialBuilding",
            year_of_construction=1956,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[230:239]
==test_tabula_mfh:[898:907]
            name="ResidentialBuilding",
            year_of_construction=1956,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[515:524]
==test_tabula_mfh:[376:385]
            name="ResidentialBuilding",
            year_of_construction=1918,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[160:169]
==test_tabula_mfh:[816:825]
            name="ResidentialBuilding",
            year_of_construction=1918,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==helptest:[171:181]
==test_data:[2653:2664]
            win.shading_max_irr = 180.0

            win_layer = Layer(parent=win)
            win_layer.id = 1
            win_layer.thickness = 0.024

            win_material = Material(win_layer)
            win_material.name = "GlasWindow"
            win_material.thermal_conduc = 0.067
            win_material.transmittance = 0.9
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_th:[1252:1260]
==test_tabula_th_dk:[1061:1069]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_th:[1180:1188]
==test_tabula_th_dk:[1026:1034]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_th:[941:949]
==test_tabula_th_dk:[783:791]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_th:[946:954]
==test_tabula_th_dk:[718:726]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_th:[601:609]
==test_tabula_th_dk:[818:826]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_th:[531:539]
==test_tabula_th_dk:[413:421]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.51 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[1114:1122]
==test_tabula_th_dk:[1091:1099]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[842:850]
==test_tabula_th_dk:[813:821]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.12 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[763:771]
==test_tabula_th_dk:[586:594]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.12 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[572:580]
==test_tabula_th_dk:[473:481]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.6 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[1008:1016]
==test_tabula_th_dk:[823:831]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[971:979]
==test_tabula_th_dk:[647:655]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1170:1178]
==test_tabula_th_dk:[748:756]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[686:694]
==test_tabula_th_dk:[478:486]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1658:1666]
==test_tabula_th:[1324:1332]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1509:1517]
==test_tabula_th:[1319:1327]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1473:1481]
==test_tabula_th:[1355:1363]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1391:1400]
==test_tabula_th:[1391:1400]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:

            if "_1_" in wall.construction_data:
                assert round(1 / (wall.r_conduc * wall.area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1319:1327]
==test_tabula_th:[1144:1152]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1555:1563]
==test_tabula_th:[1023:1031]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.17 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1098:1106]
==test_tabula_th:[1018:1026]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.15 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[865:873]
==test_tabula_th:[900:908]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.41 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[783:791]
==test_tabula_th:[716:724]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219
            )

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1183:1193]
==test_tabula_th:[1076:1087]
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_sfh_2100(self):
        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1057:1065]
==test_tabula_th:[521:529]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.4 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1175:1183]
==test_tabula_sfh_dk:[852:861]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[793:801]
==test_tabula_sfh_dk:[768:776]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.35 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1201:1209]
==test_tabula_sfh_dk:[726:734]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.13 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1622:1630]
==test_tabula_sfh_dk:[1119:1127]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1663:1671]
==test_tabula_sfh_dk:[891:899]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1627:1635]
==test_tabula_sfh_dk:[736:744]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1149:1157]
==test_tabula_th_dk:[1056:1064]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.1 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1266:1274]
==test_tabula_th_dk:[955:963]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1019:1027]
==test_tabula_th_dk:[682:690]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.26 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1375:1384]
==test_tabula_th_dk:[1158:1167]
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.21)), 1)

        assert round( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1124:1132]
==test_tabula_th_dk:[518:526]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.18 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[675:683]
==test_tabula_th_dk:[508:516]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.2 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1523:1546]
==test_tabula_th:[1437:1461]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.17 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_th_2015(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1628:1636]
==test_tabula_th:[1360:1368]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.11 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1271:1279]
==test_tabula_th:[987:995]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.22 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1202:1213]
==test_tabula_th:[1121:1132]
                             1) == round((1 / (1 / 1.1 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_th_1919(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[763:774]
==test_tabula_th:[702:713]
            1) == round((1 / (1 / 1.1 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_1859(self):

        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[728:738]
==test_tabula_th:[658:668]
                             1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.8 - 0.17)), 1)

    def test_tabula_uvalue_standard_th_2100(self):
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[884:892]
==test_tabula_th:[611:619]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[505:513]
==test_tabula_th:[386:394]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[545:553]
==test_tabula_th:[356:364]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.77 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1180:1189]
==test_tabula_th:[1464:1473]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.1 - 0.21)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1040:1049]
==test_tabula_th:[1045:1054]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.16 - 0.21)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[671:680]
==test_tabula_th:[627:636]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.2 - 0.21)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1483:1491]
==test_tabula_sfh_dk:[1152:1160]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1378:1386]
==test_tabula_sfh_dk:[1035:1043]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1418:1426]
==test_tabula_sfh_dk:[1157:1166]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1049:1057]
==test_tabula_sfh_dk:[885:894]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.2 - 0.17)), 1)
        # U-value of website is 0.33, but is seems to be wrong

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1054:1062]
==test_tabula_sfh_dk:[815:823]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[755:763]
==test_tabula_sfh_dk:[773:781]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.29 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[610:618]
==test_tabula_sfh_dk:[461:469]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.6 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1458:1466]
==test_tabula_sfh_dk:[429:437]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.2 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1593:1601]
==test_tabula_sfh_dk:[345:353]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1633:1641]
==test_tabula_sfh_dk:[699:707]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1598:1606]
==test_tabula_sfh_dk:[313:321]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1518:1526]
==test_tabula_sfh_dk:[303:311]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.11 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1563:1571]
==test_tabula_sfh:[1139:1147]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.17 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1528:1536]
==test_tabula_sfh:[761:769]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.17 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1488:1496]
==test_tabula_sfh:[1478:1486]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1448:1456]
==test_tabula_sfh:[1432:1440]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1553:1561]
==test_tabula_sfh:[1350:1358]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1261:1269]
==test_tabula_sfh:[1314:1322]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1220:1228]
==test_tabula_sfh:[1274:1282]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1189:1197]
==test_tabula_sfh:[1514:1522]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.11 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1623:1631]
==test_tabula_sfh:[1653:1661]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.1 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1184:1192]
==test_tabula_sfh:[1617:1625]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.1 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1523:1531]
==test_tabula_sfh:[1243:1251]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1307:1316]
==test_tabula_sfh:[1279:1287]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:
            if "_1_" in floor.construction_data:
                assert round(1 / (floor.r_conduc * floor.area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1353:1361]
==test_tabula_sfh:[1067:1075]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[822:830]
==test_tabula_sfh:[788:796]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.41 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[781:789]
==test_tabula_sfh:[824:832]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.41 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[690:698]
==test_tabula_sfh:[696:704]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[868:877]
==test_tabula_sfh:[829:837]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.25 - 0.17)), 1)

        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:
            if "_1_" in floor.construction_data:
                assert round(1 / (floor.r_conduc * floor.area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[680:688]
==test_tabula_sfh:[870:878]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.25 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[615:623]
==test_tabula_sfh:[621:629]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.51 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[429:438]
==test_tabula_sfh:[381:391]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.7 - 0.17)), 1)

        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:
            if "_1_" in floor.construction_data:

                assert round(1 / (floor.r_conduc * floor.area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[990:998]
==test_tabula_th_dk:[985:994]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.14)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[720:728]
==test_tabula_th_dk:[672:680]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.11 - 0.14)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1112:1120]
==test_tabula_th_dk:[596:604]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.14 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1035:1043]
==test_tabula_th_dk:[561:569]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.14 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[339:347]
==test_tabula_sfh_dk:[615:624]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.62 - 0.17)), 1)
        # U-value of website is 0.33, but is seems to be wrong

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[409:417]
==test_tabula_sfh_dk:[577:585]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[344:352]
==test_tabula_sfh_dk:[503:511]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.52 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[312:327]
==test_tabula_sfh_dk:[432:449]
            1) == round((1 / (1 / 0.2 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.7 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_standard_sfh_dk_1971(self):
        prj.add_residential(
            construction_data='tabula_dk_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[606:614]
==test_tabula_sfh_dk:[350:358]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.14 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1000:1008]
==test_tabula_sfh:[1211:1219]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.15 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[566:574]
==test_tabula_sfh:[651:659]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1065:1073]
==test_tabula_mfh:[1453:1461]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1030:1038]
==test_tabula_mfh:[1154:1162]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.14 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[760:768]
==test_tabula_mfh:[645:653]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.4 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[536:544]
==test_tabula_mfh:[1493:1501]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.19 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[460:468]
==test_tabula_th_dk:[788:796]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.31 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[496:503]
==test_tabula_th_dk:[753:761]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.28 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[357:365]
==test_tabula_th:[576:584]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.6 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[517:526]
==test_tabula_th:[1387:1396]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[670:678]
==test_tabula_sfh_dk:[1003:1011]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[424:432]
==test_tabula_sfh_dk:[387:395]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.33 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[675:683]
==test_tabula_sfh:[1103:1111]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.21 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[521:529]
==test_tabula_sfh:[1238:1246]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.14 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[465:473]
==test_tabula_sfh:[1180:1188]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[429:437]
==test_tabula_sfh:[731:739]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[388:396]
==test_tabula_sfh:[691:699]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.28 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[281:289]
==test_tabula_sfh:[510:518]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 1.08 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[316:324]
==test_tabula_sfh:[429:437]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.77 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[171:179]
==test_tabula_sfh:[424:432]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.7 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[567:575]
==test_tabula_mfh:[1089:1097]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.21 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[634:642]
==test_tabula_mfh:[1348:1356]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[598:606]
==test_tabula_mfh:[1383:1391]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[562:570]
==test_tabula_mfh:[1119:1127]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[491:499]
==test_tabula_mfh:[944:952]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.23 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[455:463]
==test_tabula_mfh:[909:917]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.23 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[393:401]
==test_tabula_mfh:[725:733]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[276:284]
==test_tabula_mfh:[470:478]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[321:329]
==test_tabula_mfh:[445:453]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[286:294]
==test_tabula_mfh:[620:628]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[251:259]
==test_tabula_mfh:[550:558]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[216:224]
==test_tabula_mfh:[585:593]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[176:184]
==test_tabula_mfh:[392:400]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.88 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[639:647]
==test_tabula_ab_dk:[765:773]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.23 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[603:611]
==test_tabula_ab_dk:[807:815]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.24 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[531:539]
==test_tabula_ab_dk:[571:579]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.22 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[526:534]
==test_tabula_ab_dk:[995:1003]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[419:427]
==test_tabula_ab_dk:[725:733]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.23 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[383:391]
==test_tabula_ab_dk:[601:609]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.24 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[352:360]
==test_tabula_ab_dk:[695:703]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.29 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[347:355]
==test_tabula_ab_dk:[531:539]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.34 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[241:249]
==test_tabula_ab_dk:[374:382]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[211:219]
==test_tabula_ab_dk:[414:422]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.77 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[0:15]
==test_tabula_ab_dk:[0:15]
from teaser.project import Project
prj = Project(False)


class Test_tabula_ab(object):
    global prj

    def test_tabula_de_ab_area_1919(self):
        """
        Test for area estimation of tabula ab
        """
        prj.set_default()
        prj.data = None

        prj.add_residential( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_th:[672:680]
==test_tabula_th_dk:[880:894]
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.13 - 0.21)), 1)

#-----------------------------------------------------------------------------------------------------------------------------------

#test for U-value adv retrofit

    def test_tabula_uvalue_adv_retrofit_th_dk_1849(self):
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_th:[628:636]
==test_tabula_th_dk:[540:548]
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.2 - 0.21)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_th:[593:609]
==test_tabula_th_dk:[540:564]
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.2 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.3 - 0.17)), 1)

            # if "_1_" in wall.construction_data:
            #     assert round(1 / (wall.r_conduc * wall.area),
            #                  1) == round((1 / (1 / 0.6 - 0.17)), 1)
            #
            # if "_2_" in wall.construction_data:
            #     assert round(1 / (wall.r_conduc * wall.area),
            #                  1) == round((1 / (1 / 0.6 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[318:333]
==test_tabula_th_dk:[566:579]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.5 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_standard_sfh_dk_2005(self):
        prj.add_residential(
            construction_data='tabula_dk_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[956:963]
==test_tabula_th:[1468:1476]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.1 - 0.21)), 1)

        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:
            if "_1_" in wall.construction_data: (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1183:1192]
==test_tabula_th:[658:667]
                             1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.8 - 0.17)), 1)

    def test_tabula_uvalue_standard_th_2100(self):
        prj.add_residential( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[666:674]
==test_tabula_th:[581:589]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 2.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_sfh_2009(self):
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[631:639]
==test_tabula_th:[401:409]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_sfh_2001(self):
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[596:604]
==test_tabula_th:[366:374]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_th_1957(self):
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[520:528]
==test_tabula_th:[331:339]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_th_1948(self):
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[672:683]
==test_tabula_th_dk:[540:551]
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.2 - 0.21)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1202:1212]
==test_tabula_th:[702:712]
                             1) == round((1 / (1 / 1.1 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_th_1919(self):

        prj.add_residential( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[763:773]
==test_tabula_th:[1121:1131]
                             1) == round((1 / (1 / 1.1 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_th_1919(self):

        prj.add_residential( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1617:1626]
==test_tabula_th:[1088:1097]
            name="ResidentialBuilding",
            year_of_construction=2099,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1178:1189]
==test_tabula_th:[1507:1518]
            name="ResidentialBuilding",
            year_of_construction=2099,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.1 - 0.21)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1178:1187]
==test_tabula_th:[669:678]
            name="ResidentialBuilding",
            year_of_construction=2099,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[728:737]
==test_tabula_th:[1076:1086]
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.8 - 0.17)), 1)

    def test_tabula_uvalue_standard_mfh_2100(self):
        prj.add_residential( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1619:1626]
==test_tabula_th:[517:524]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1584:1591]
==test_tabula_th:[482:489]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1549:1556]
==test_tabula_th:[447:454]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1514:1521]
==test_tabula_th:[412:419]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1479:1486]
==test_tabula_th:[377:384]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1444:1451]
==test_tabula_th:[342:349]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1409:1416]
==test_tabula_th:[307:314]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[873:882]
==test_tabula_sfh:[911:919]
        for floor in prj.buildings[-1].thermal_zones[-1].ground_floors:

            if "_1_" in floor.construction_data:
                assert round(1 / (floor.r_conduc * floor.area),
                             1) == round((1 / (1 / 0.28 - 0.34)), 1)

            elif "_2_" in floor.construction_data:
                assert round(1 / (floor.r_conduc * floor.area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[739:748]
==test_tabula_sfh:[745:754]
            name="ResidentialBuilding",
            year_of_construction=2099,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[660:668]
==test_tabula_sfh:[701:709]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 2.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_mfh_2009(self):
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[520:528]
==test_tabula_sfh:[480:488]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_sfh_1968(self):
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[485:493]
==test_tabula_sfh:[439:447]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_sfh_1957(self):
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[450:458]
==test_tabula_sfh:[403:412]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_sfh_1948(self):

        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1374:1381]
==test_tabula_sfh:[747:754]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1339:1346]
==test_tabula_sfh:[712:719]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1257:1264]
==test_tabula_sfh:[677:684]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1216:1223]
==test_tabula_sfh:[642:649]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1180:1187]
==test_tabula_sfh:[607:614]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1145:1152]
==test_tabula_sfh:[572:579]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1110:1117]
==test_tabula_sfh:[531:538]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1075:1082]
==test_tabula_sfh:[491:498]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1040:1047]
==test_tabula_sfh:[450:457]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1005:1012]
==test_tabula_sfh:[415:422]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[970:977]
==test_tabula_sfh:[372:379]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[935:942]
==test_tabula_sfh:[336:343]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[334:341]
==test_tabula_sfh:[17:24]
            name="ResidentialBuilding",
            year_of_construction=1858,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1205:1219]
==test_tabula_th_dk:[965:978]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

    #
    #     # assert round(
    #     #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
    #     #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
    #     #     1) == round((1 / (1 / 2.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_adv_retrofit_ab_dk_2009(self):
        prj.add_residential(
            construction_data='tabula_dk_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1117:1130]
==test_tabula_th_dk:[930:943]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_adv_retrofit_ab_dk_1977(self):
        prj.add_residential(
            construction_data='tabula_dk_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[812:825]
==test_tabula_th_dk:[652:665]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_retrofit_ab_dk_1977(self):
        prj.add_residential(
            construction_data='tabula_dk_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[541:554]
==test_tabula_th_dk:[347:360]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.7 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_th_dk_1949(self):
        prj.add_residential(
            construction_data='tabula_dk_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[506:519]
==test_tabula_th_dk:[312:325]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_th_dk_1929(self):
        prj.add_residential(
            construction_data='tabula_dk_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[444:452]
==test_tabula_th:[561:569]
        for wall in prj.buildings[-1].thermal_zones[-1].outer_walls:

            if "_1_" in wall.construction_data:
                assert round(1 / (wall.r_conduc * wall.area),
                             1) == round((1 / (1 / 0.6 - 0.17)), 1)

            if "_2_" in wall.construction_data:
                assert round(1 / (wall.r_conduc * wall.area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1180:1193]
==test_tabula_sfh_dk:[1130:1145]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)
    #
    #     # assert round(
    #     #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
    #     #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
    #     #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_adv_retrofit_ab_dk_2005(self):
        prj.add_residential(
            construction_data='tabula_dk_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1154:1167]
==test_tabula_sfh_dk:[1092:1107]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_adv_retrofit_sfh_dk_1929(self):
        prj.add_residential(
            construction_data='tabula_dk_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1075:1088]
==test_tabula_sfh_dk:[1050:1065]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_adv_retrofit_ab_dk_1971(self):
        prj.add_residential(
            construction_data='tabula_dk_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1040:1053]
==test_tabula_sfh_dk:[1013:1028]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_adv_retrofit_ab_dk_1959(self):
        prj.add_residential(
            construction_data='tabula_dk_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1005:1018]
==test_tabula_sfh_dk:[976:991]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_adv_retrofit_ab_dk_1949(self):
        prj.add_residential(
            construction_data='tabula_dk_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[970:983]
==test_tabula_sfh_dk:[934:949]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_adv_retrofit_ab_dk_1929(self):
        prj.add_residential(
            construction_data='tabula_dk_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[875:888]
==test_tabula_sfh_dk:[858:873]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_retrofit_sfh_dk_1849(self):
        prj.add_residential(
            construction_data='tabula_dk_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[849:862]
==test_tabula_sfh_dk:[820:835]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)

            # assert round(
            #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
            #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    # #
    def test_tabula_uvalue_retrofit_ab_dk_1997(self):
        prj.add_residential(
            construction_data='tabula_dk_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[770:783]
==test_tabula_sfh_dk:[778:793]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_retrofit_ab_dk_1971(self):
        prj.add_residential(
            construction_data='tabula_dk_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[735:748]
==test_tabula_sfh_dk:[741:756]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_retrofit_sfh_dk_1959(self):
        prj.add_residential(
            construction_data='tabula_dk_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[700:713]
==test_tabula_sfh_dk:[704:719]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_retrofit_sfh_dk_1971(self):
        prj.add_residential(
            construction_data='tabula_dk_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[665:678]
==test_tabula_sfh_dk:[667:682]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_retrofit_sfh_dk_1977(self):
        prj.add_residential(
            construction_data='tabula_dk_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[419:432]
==test_tabula_sfh_dk:[508:523]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_standard_ab_dk_1971(self):
        prj.add_residential(
            construction_data='tabula_dk_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[384:397]
==test_tabula_sfh_dk:[471:486]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_standard_sfh_dk_1959(self):
        prj.add_residential(
            construction_data='tabula_dk_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[459:472]
==test_tabula_sfh_dk:[588:603]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.7 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_standard_ab_dk_1977(self):
        prj.add_residential(
            construction_data='tabula_dk_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[349:362]
==test_tabula_sfh_dk:[434:449]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.7 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)
    #
    def test_tabula_uvalue_standard_ab_dk_1949(self):
        prj.add_residential(
            construction_data='tabula_dk_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[314:327]
==test_tabula_sfh_dk:[550:565]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.7 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_standard_sfh_dk_1929(self):
        prj.add_residential(
            construction_data='tabula_dk_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[613:622]
==test_tabula_th:[1497:1506]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_th_2100(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[470:479]
==test_tabula_th:[704:713]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_th_1919(self):

        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[577:586]
==test_tabula_sfh:[1637:1645]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_ab_1957(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[434:443]
==test_tabula_sfh:[771:780]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_ab_1968(self):

        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[291:299]
==test_tabula_sfh:[360:369]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_sfh_1918(self):

        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[541:550]
==test_tabula_mfh:[1608:1616]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_ab_1948(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[505:514]
==test_tabula_mfh:[1204:1213]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_ab_1919(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[398:407]
==test_tabula_mfh:[765:774]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_mfh_1859(self):

        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[256:264]
==test_tabula_mfh:[695:703]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_mfh_2015(self):
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[221:229]
==test_tabula_mfh:[366:375]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_mfh_1918(self):

        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[186:194]
==test_tabula_mfh:[402:411]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_standard_ab_1948(self):
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[661:668]
==test_tabula_mfh:[900:907]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[625:632]
==test_tabula_mfh:[818:825]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[589:596]
==test_tabula_mfh:[777:784]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[553:560]
==test_tabula_mfh:[741:748]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[517:524]
==test_tabula_mfh:[706:713]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[482:489]
==test_tabula_mfh:[671:678]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[446:453]
==test_tabula_mfh:[636:643]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[410:417]
==test_tabula_mfh:[601:608]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[374:381]
==test_tabula_mfh:[531:538]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[302:309]
==test_tabula_mfh:[566:573]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[267:274]
==test_tabula_mfh:[461:468]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[232:239]
==test_tabula_mfh:[496:503]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[197:204]
==test_tabula_mfh:[378:385]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[162:169]
==test_tabula_mfh:[336:343]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_examples:[6:15]
==test_simulation_export:[6:15]
from teaser.logic import utilities
from teaser.project import Project
import math
import os
import warnings as warnings

prj = Project(False)

 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_data:[632:638]
==test_tabula_sfh:[1734:1741]
            name="ResidentialBuilding",
            year_of_construction=1858,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219,
            )
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==helptest:[164:170]
==test_data:[2646:2652]
            win.inner_convection = 1.7
            win.inner_radiation = 5.0
            win.outer_convection = 20.0
            win.outer_radiation = 5.0
            win.g_value = 0.789
            win.a_conv = 0.03 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[1035:1041]
==test_tabula_th_dk:[1161:1167]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.21)), 1)

        assert round( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[726:732]
==test_tabula_th_dk:[848:864]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.13 - 0.21)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
        #     1) == round((1 / (1 / 0.3 - 0.17)), 1)
        #
        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
        #     1) == round((1 / (1 / 0.18 - 0.34)), 1)

        assert round( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[1111:1117]
==test_tabula_th_dk:[982:988]
            height_of_floors=3.2,
            net_leased_area=95)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[839:845]
==test_tabula_th_dk:[704:710]
            height_of_floors=3.2,
            net_leased_area=95)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[569:575]
==test_tabula_th_dk:[364:370]
            height_of_floors=3.2,
            net_leased_area=95)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[969:991]
==test_tabula_th_dk:[1099:1119]
                    1) == round((1 / (1 / 0.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.9 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#----------------------------------------------------------------------------------

    def test_tabula_uvalue_adv_retrofit_sfh_dk_1971(self):
        prj.add_residential(
            construction_data='tabula_dk_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[969:979]
==test_tabula_th_dk:[821:831]
                    1) == round((1 / (1 / 0.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[686:692]
==test_tabula_th_dk:[669:675]
            height_of_floors=3.2,
            net_leased_area=117)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[411:417]
==test_tabula_th_dk:[329:335]
            height_of_floors=3.2,
            net_leased_area=117)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[318:332]
==test_tabula_th_dk:[601:617]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.5 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#--------------------------------------------------------------------------------------------------------------------------------------------S
#test for U-value retrofit

    def test_tabula_uvalue_retrofit_th_dk_1849(self):

        prj.add_residential( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[246:251]
==test_tabula_th_dk:[29:34]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].ground_floors), 1) == 66
        assert round(
            sum(wall.area for wall in (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh_dk:[122:127]
==test_tabula_th_dk:[261:266]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].ground_floors), 1) == 118
        assert round(
            sum(wall.area for wall in (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[106:112]
==test_tabula_th_dk:[164:170]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=111)

        assert round(
            sum(wall.area for wall in (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1625:1632]
==test_tabula_th:[1526:1533]
            1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1291:1306]
==test_tabula_th:[1260:1276]
            1) == round((1 / (1 / 0.23 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_th_1978(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1209:1216]
==test_tabula_th:[1107:1114]
                             1) == round((1 / (1 / 0.15 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.15 - 0.34)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[222:228]
==test_tabula_th:[77:83]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=150)

        assert round(
            sum(wall.area for wall in (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[296:306]
==test_tabula_th:[122:132]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_de_sfh_area_2015(self):
        """
        Test for area estimation of tabula sfh
        """
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[267:277]
==test_tabula_th:[93:103]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_de_sfh_area_2009(self):
        """
        Test for area estimation of tabula sfh
        """
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[238:248]
==test_tabula_th:[64:74]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_de_sfh_area_2001(self):
        """
        Test for area estimation of tabula sfh
        """
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[209:219]
==test_tabula_th:[35:45]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_de_sfh_area_1994(self):
        """
        Test for area estimation of tabula sfh
        """
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[6:16]
==test_tabula_th:[5:16]
    global prj

    def test_tabula_de_sfh_area_1859(self):
        """
        Test for area estimation of tabula sfh
        """
        prj.set_default()
        prj.data = None
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_sfh:[1201:1207]
==test_tabula_sfh_dk:[689:700]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.13 - 0.21)), 1)

        assert round( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1378:1384]
==test_tabula_th_dk:[1126:1142]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.21)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
        #     1) == round((1 / (1 / 0.3 - 0.17)), 1)
        #
        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
        #     1) == round((1 / (1 / 0.18 - 0.34)), 1)

        assert round( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1526:1546]
==test_tabula_th:[1404:1425]
            1) == round((1 / (1 / 0.14 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.17 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_mfh_2009(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1596:1603]
==test_tabula_th:[1481:1488]
            1) == round((1 / (1 / 0.12 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.12 - 0.34)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[866:873]
==test_tabula_th:[760:767]
                             1) == round((1 / (1 / 0.2 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.25 - 0.17)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[718:725]
==test_tabula_th:[644:651]
                             1) == round((1 / (1 / 0.28 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].ground_floors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].ground_floors[-1].area),
            1) == round((1 / (1 / 0.35 - 0.34)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[427:434]
==test_tabula_th:[349:356]
            1) == round((1 / (1 / 0.65 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 1.7 - 0.17)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1014:1020]
==test_tabula_sfh_dk:[924:935]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.21 - 0.17)), 1)

        assert round( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[55:60]
==test_tabula_sfh_dk:[274:279]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].outer_walls), 1) == 146
        assert round(
            sum(wall.area for wall in (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[1321:1336]
==test_tabula_sfh:[1409:1424]
            1) == round((1 / (1 / 0.23 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_sfh_1978(self):
        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[296:306]
==test_tabula_sfh:[180:190]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_de_sfh_area_1983(self):
        """
        Test for area estimation of tabula sfh
        """
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[267:277]
==test_tabula_sfh:[122:132]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_de_mfh_area_2009(self):
        """
        Test for area estimation of tabula mfh
        """
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[238:248]
==test_tabula_sfh:[93:103]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_de_mfh_area_2001(self):
        """
        Test for area estimation of tabula mfh
        """
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[209:219]
==test_tabula_sfh:[64:74]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_de_mfh_area_1994(self):
        """
        Test for area estimation of tabula mfh
        """
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[180:190]
==test_tabula_sfh:[35:45]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_de_sfh_area_1919(self):
        """
        Test for area estimation of tabula sfh
        """
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_mfh:[334:340]
==test_tabula_sfh:[1719:1725]
            name="ResidentialBuilding",
            year_of_construction=1858,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[1174:1181]
==test_tabula_th_dk:[985:992]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area),
            1) == round((1 / (1 / 0.09 - 0.14)), 1)


        assert round( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[5:16]
==test_tabula_th_dk:[5:16]
    global prj

    def test_tabula_de_th_dk_area_1849(self):
        """
        Test for area estimation of tabula th
        """
        prj.set_default()
        prj.data = None

        prj.add_residential(
            construction_data='tabula_dk_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[665:677]
==test_tabula_sfh_dk:[896:911]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.4 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 3.0 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_ab_dk_1929(self):
        prj.add_residential( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[384:396]
==test_tabula_sfh_dk:[626:644]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 2.8 - 0.17)), 1)

        # assert round(
        #     1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
        #          * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
        #     1) == round((1 / (1 / 2.0 - 0.17)), 1)

#--------------------------------------------------------------------------------------------------------------------------------------------------------------
#---------------------------------------------------------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------------------------------------------------------
#test for U-value for retrofit


    def test_tabula_uvalue_retrofit_sfh_dk_1997(self):
        prj.add_residential( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab_dk:[106:112]
==test_tabula_mfh:[48:54]
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=312)

        assert round(
            sum(wall.area for wall in (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[233:239]
==test_tabula_th_dk:[1158:1164]
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[198:204]
==test_tabula_th_dk:[880:886]
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[163:169]
==test_tabula_th_dk:[540:546]
            height_of_floors=3.2,
            net_leased_area=219)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].rooftops[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].rooftops[-1].area), (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[470:478]
==test_tabula_th:[1123:1131]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_ab_1978(self):

        prj.add_residential( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[463:479]
==test_tabula_sfh:[919:934]
            1) == round((1 / (1 / 0.31 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_ab_1978(self):

        prj.add_residential(
            construction_data='tabula_de_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[434:442]
==test_tabula_sfh:[1221:1229]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_ab_1968(self):

        prj.add_residential( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[642:658]
==test_tabula_mfh:[1239:1254]
            1) == round((1 / (1 / 0.23 - 0.34)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].windows[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].windows[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_ab_1978(self):

        prj.add_residential(
            construction_data='tabula_de_adv_retrofit', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[560:567]
==test_tabula_mfh:[1305:1312]
                             1) == round((1 / (1 / 0.1 - 0.17)), 1)

        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].outer_walls[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].outer_walls[-1].area),
            1) == round((1 / (1 / 0.13 - 0.17)), 1)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[541:549]
==test_tabula_mfh:[1169:1176]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 0.8 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_ab_1948(self):

        prj.add_residential( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[505:513]
==test_tabula_mfh:[765:773]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_ab_1919(self):

        prj.add_residential( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[398:406]
==test_tabula_mfh:[1204:1212]
        assert round(
            1 / (prj.buildings[-1].thermal_zones[-1].doors[-1].r_conduc
                 * prj.buildings[-1].thermal_zones[-1].doors[-1].area),
            1) == round((1 / (1 / 1.3 - 0.17)), 1)

    def test_tabula_uvalue_retrofit_adv_mfh_1859(self):

        prj.add_residential( (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[551:557]
==test_tabula_mfh:[1290:1296]
            name="ResidentialBuilding",
            year_of_construction=1947,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[372:378]
==test_tabula_mfh:[851:857]
            name="ResidentialBuilding",
            year_of_construction=1947,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[195:201]
==test_tabula_mfh:[412:418]
            name="ResidentialBuilding",
            year_of_construction=1947,
            number_of_floors=2,
            height_of_floors=3.2,
            net_leased_area=219)
 (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[151:159]
==test_tabula_mfh:[151:161]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_uvalue_standard_ab_1919(self):

        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[122:132]
==test_tabula_mfh:[122:132]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_de_ab_area_1978(self):
        """
        Test for area estimation of tabula ab
        """
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[93:103]
==test_tabula_mfh:[93:103]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_de_ab_area_1968(self):
        """
        Test for area estimation of tabula ab
        """
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[64:74]
==test_tabula_mfh:[64:74]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_de_ab_area_1957(self):
        """
        Test for area estimation of tabula ab
        """
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[35:45]
==test_tabula_mfh:[35:45]
        assert round(
            sum(wall.area for wall in
                prj.buildings[-1].thermal_zones[-1].doors), 1) == 2.0

    def test_tabula_de_ab_area_1948(self):
        """
        Test for area estimation of tabula ab
        """
        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)
tests/test_useconditions.py:1:0: R0801: Similar lines in 2 files
==test_tabula_ab:[5:16]
==test_tabula_mfh:[6:16]
    global prj

    def test_tabula_de_ab_area_1919(self):
        """
        Test for area estimation of tabula ab
        """
        prj.set_default()
        prj.data = None

        prj.add_residential(
            construction_data='tabula_de_standard', (duplicate-code)

-----------------------------------
Your code has been rated at 7.49/10

