cd("D:\01_Dymola_WorkDir\result_dir");
resultFile = "dsres.mat";
outName = "dsres_chosen_vars.mat"; // or *.csv --> Switch lines at bottom

varNames = {"Time",
"TAirRooms[1]",
"TAirRooms[2]",
"TAirRooms[3]",
"TAirRooms[4]",
"TSet.y[1]",
"TSet.y[2]",
"TSet.y[3]",
"TSet.y[4]",
"buildingStructure.ThermOutside.Q_flow",
"buildingStructure.ThermOutside.T",
"buildingStructure.ThermGround.Q_flow",
"buildingStructure.ThermGround.T",
"buildingStructure.extRadiationBuilding.Q_flow",
"buildingStructure.extRadiationBuilding.T",
"heatGeneration.tempFlow.T",
"heatGeneration.tempRe.T",
"heatGeneration.massFlowRate.m_flow",
"CPUtime"};

n = readTrajectorySize(resultFile);
// Read all variable names
//varNamesReadIn = DymolaCommands.Trajectories.readTrajectoryNames(resultFile);
// Check if the set varNames exist as a subset in the resultFile. Command outputs a vector of Booleans
//DymolaCommands.Trajectories.existTrajectoryNames(resultFile,varNames)

// The following commands take a while and consume RAM!!!
//trajectories=readTrajectory(resultFile,varNames,n); // Passing the readTrajectory command directly in the writeTrajectory command save a lot of RAM!!!
// Alternative A: Write as *.mat file
writeTrajectory(outName,varNames,transpose(readTrajectory(resultFile,varNames,n)));
// Alternative B: Write as *.csv file
//DataFiles.writeCSVmatrix(outName,varNames,transpose(readTrajectory(resultFile,varNames,n)));


// AddOn: Concatenate two result files (2 sets of varnames, but same time vector) (note: there might be a better loop variant of the script):
//varNames1 = DymolaCommands.Trajectories.readTrajectoryNames(resultFile1);
//varNames2a = DymolaCommands.Trajectories.readTrajectoryNames(resultFile2);
//varNames2 = varNames2a[2:end];
//varNames = cat(1, varNames1, varNames2);
//n = readTrajectorySize(resultFile1); // both result files must have same trajectorySize
//writeTrajectory(outName,varNames,transpose(cat(1, readTrajectory(resultFile1,varNames1,n1), readTrajectory(resultFile2,varNames2,n2))));
